var monica = monica || {};
(function () {

var data = {
 "met": {
  "columns": [
   "t_av",
   "t_min",
   "t_max",
   "t_s10",
   "t_s20",
   "vappd",
   "wind",
   "sundu",
   "radia",
   "prec",
   "day",
   "year",
   "rf"
  ],
  "rows": [
   [
    -0.6,
    -1.5,
    1,
    0,
    0,
    0,
    6.7,
    0,
    52,
    0,
    1,
    1991,
    90
   ],
   [
    2.8,
    0,
    6,
    0,
    0,
    0,
    12.8,
    0,
    52,
    0,
    2,
    1991,
    85
   ],
   [
    7,
    6,
    8,
    0,
    0,
    0,
    11.4,
    0,
    163,
    0,
    3,
    1991,
    77
   ],
   [
    5.7,
    4,
    8,
    0,
    0,
    0,
    8.6,
    0,
    52,
    0,
    4,
    1991,
    70
   ],
   [
    5.6,
    4,
    7,
    0,
    0,
    0,
    7.8,
    0,
    52,
    1,
    5,
    1991,
    76
   ],
   [
    4,
    3.5,
    5,
    0,
    0,
    0,
    1.1,
    0,
    52,
    1,
    6,
    1991,
    85
   ],
   [
    4.7,
    3,
    8,
    0,
    0,
    0,
    7.2,
    0,
    69,
    0,
    7,
    1991,
    79
   ],
   [
    3.9,
    0.2,
    7,
    0,
    0,
    0,
    3.1,
    0,
    75,
    1,
    8,
    1991,
    67
   ],
   [
    5.7,
    2.5,
    9,
    0,
    0,
    0,
    6.1,
    0,
    52,
    1,
    9,
    1991,
    71
   ],
   [
    -0.1,
    -3.5,
    2,
    0,
    0,
    0,
    4.2,
    0,
    479,
    0,
    10,
    1991,
    71
   ],
   [
    -3.2,
    -7,
    1,
    0,
    0,
    0,
    0,
    0,
    377,
    0,
    11,
    1991,
    74
   ],
   [
    1,
    -3,
    3.5,
    0,
    0,
    0,
    7.8,
    0,
    194,
    0,
    12,
    1991,
    77
   ],
   [
    -1,
    -1.5,
    0,
    0,
    0,
    0,
    2.5,
    0,
    72,
    1,
    13,
    1991,
    79
   ],
   [
    3.6,
    0,
    6,
    0,
    0,
    0,
    8.3,
    0,
    72,
    0,
    14,
    1991,
    78
   ],
   [
    5.7,
    5,
    6,
    0,
    0,
    0,
    8.6,
    0,
    72,
    0,
    15,
    1991,
    70
   ],
   [
    4.6,
    3,
    6,
    0,
    0,
    0,
    8.3,
    0,
    72,
    1,
    16,
    1991,
    69
   ],
   [
    2.8,
    -1,
    4,
    0,
    0,
    0,
    7.8,
    0,
    536,
    0,
    17,
    1991,
    59
   ],
   [
    2.8,
    -1,
    6,
    0,
    0,
    0,
    6.1,
    0,
    72,
    3,
    18,
    1991,
    76
   ],
   [
    4.4,
    0,
    6,
    0,
    0,
    0,
    6.1,
    0,
    72,
    12,
    19,
    1991,
    78
   ],
   [
    -0.4,
    -5,
    4.5,
    0,
    0,
    0,
    7.8,
    0,
    103,
    0,
    20,
    1991,
    81
   ],
   [
    -6.2,
    -9,
    -3,
    0,
    0,
    0,
    0,
    0,
    260,
    0,
    21,
    1991,
    73
   ],
   [
    -7.5,
    -10.5,
    -4,
    0,
    0,
    0,
    2.2,
    0,
    579,
    0,
    22,
    1991,
    71
   ],
   [
    -8.2,
    -13,
    -4,
    0,
    0,
    0,
    3.6,
    0,
    368,
    0,
    23,
    1991,
    68
   ],
   [
    -6.9,
    -9,
    -4,
    0,
    0,
    0,
    2.2,
    0,
    354,
    0,
    24,
    1991,
    70
   ],
   [
    -7.5,
    -9,
    -6.5,
    0,
    0,
    0,
    0,
    0,
    79,
    0,
    25,
    1991,
    79
   ],
   [
    -4.3,
    -7,
    -2,
    0,
    0,
    0,
    1.1,
    0,
    79,
    0,
    26,
    1991,
    79
   ],
   [
    0,
    -1.5,
    1,
    0,
    0,
    0,
    1.4,
    0,
    79,
    0,
    27,
    1991,
    80
   ],
   [
    -1.2,
    -2.5,
    0,
    0,
    0,
    0,
    2.5,
    0,
    79,
    0,
    28,
    1991,
    79
   ],
   [
    -0.3,
    -1,
    0.5,
    0,
    0,
    0,
    2.2,
    0,
    79,
    0,
    29,
    1991,
    79
   ],
   [
    -0.1,
    -1.5,
    1,
    0,
    0,
    0,
    1.1,
    0,
    224,
    0,
    30,
    1991,
    77
   ],
   [
    -2.1,
    -2.5,
    -1.5,
    0,
    0,
    0,
    1.1,
    0,
    79,
    0,
    31,
    1991,
    78
   ],
   [
    -1.5,
    -2,
    -1,
    0,
    0,
    0,
    2.5,
    0,
    86,
    0,
    32,
    1991,
    78
   ],
   [
    -1.3,
    -2,
    -0.5,
    0,
    0,
    0,
    5,
    0,
    86,
    1,
    33,
    1991,
    78
   ],
   [
    1.2,
    -1,
    4,
    0,
    0,
    0,
    6.7,
    0,
    178,
    6,
    34,
    1991,
    74
   ],
   [
    1.9,
    0,
    3,
    0,
    0,
    0,
    9.2,
    0,
    514,
    0,
    35,
    1991,
    68
   ],
   [
    1.3,
    0,
    2.5,
    0,
    0,
    0,
    8.6,
    0,
    86,
    1,
    36,
    1991,
    75
   ],
   [
    2.1,
    -1,
    6,
    0,
    0,
    0,
    1.4,
    0,
    86,
    1,
    37,
    1991,
    78
   ],
   [
    6.3,
    6,
    7.5,
    0,
    0,
    0,
    8.6,
    0,
    254,
    0,
    38,
    1991,
    70
   ],
   [
    3.7,
    0,
    6,
    0,
    0,
    0,
    4.2,
    0,
    86,
    0,
    39,
    1991,
    72
   ],
   [
    1.9,
    -2,
    8,
    0,
    0,
    0,
    3.6,
    0,
    397,
    0,
    40,
    1991,
    77
   ],
   [
    3.4,
    1,
    6.5,
    0,
    0,
    0,
    3.1,
    0,
    271,
    1,
    41,
    1991,
    75
   ],
   [
    2.5,
    1,
    4,
    0,
    0,
    0,
    4.7,
    0,
    92,
    4,
    42,
    1991,
    79
   ],
   [
    4.4,
    3,
    6,
    0,
    0,
    0,
    1.1,
    0,
    168,
    0,
    43,
    1991,
    77
   ],
   [
    6.6,
    4.5,
    9,
    0,
    0,
    0,
    3.6,
    0,
    92,
    2,
    44,
    1991,
    76
   ],
   [
    2.8,
    1,
    5,
    0,
    0,
    0,
    5.8,
    0,
    340,
    3,
    45,
    1991,
    75
   ],
   [
    4,
    1,
    7,
    0,
    0,
    0,
    6.1,
    0,
    92,
    1,
    46,
    1991,
    73
   ],
   [
    1.4,
    -1,
    3.5,
    0,
    0,
    0,
    9.2,
    0,
    140,
    2,
    47,
    1991,
    70
   ],
   [
    -1.8,
    -4.5,
    0,
    0,
    0,
    0,
    4.7,
    0,
    474,
    1,
    48,
    1991,
    73
   ],
   [
    -3.1,
    -6,
    -1,
    0,
    0,
    0,
    3.1,
    0,
    531,
    0,
    49,
    1991,
    69
   ],
   [
    -0.7,
    -3,
    0.5,
    0,
    0,
    0,
    5.8,
    0,
    92,
    1,
    50,
    1991,
    72
   ],
   [
    -1.2,
    -4,
    1.5,
    0,
    0,
    0,
    3.6,
    0,
    216,
    0,
    51,
    1991,
    78
   ],
   [
    1.3,
    0,
    2.5,
    0,
    0,
    0,
    6.1,
    0,
    164,
    0,
    52,
    1991,
    80
   ],
   [
    3.1,
    1,
    4.5,
    0,
    0,
    0,
    4.7,
    0,
    245,
    2,
    53,
    1991,
    72
   ],
   [
    4.8,
    2.5,
    8,
    0,
    0,
    0,
    10.8,
    0,
    350,
    0,
    54,
    1991,
    70
   ],
   [
    3.5,
    1.5,
    6.5,
    0,
    0,
    0,
    4.7,
    0,
    734,
    0,
    55,
    1991,
    72
   ],
   [
    3.7,
    1,
    7,
    0,
    0,
    0,
    0,
    0,
    164,
    0,
    56,
    1991,
    74
   ],
   [
    2.5,
    -2,
    7.5,
    0,
    0,
    0,
    1.4,
    0,
    397,
    0,
    57,
    1991,
    73
   ],
   [
    4.3,
    1,
    9,
    0,
    0,
    0,
    3.1,
    0,
    664,
    0,
    58,
    1991,
    74
   ],
   [
    1.1,
    -4,
    6,
    0,
    0,
    0,
    1.1,
    0,
    699,
    0,
    59,
    1991,
    79
   ],
   [
    6.8,
    3,
    12,
    0,
    0,
    0,
    4.2,
    0,
    408,
    0,
    60,
    1991,
    68
   ],
   [
    8,
    4,
    14,
    0,
    0,
    0,
    3.1,
    0,
    1375,
    0,
    61,
    1991,
    68
   ],
   [
    6.9,
    5,
    13,
    0,
    0,
    0,
    3.1,
    0,
    812,
    1,
    62,
    1991,
    61
   ],
   [
    5.5,
    4,
    7,
    0,
    0,
    0,
    11.7,
    0,
    290,
    0,
    63,
    1991,
    70
   ],
   [
    6.9,
    4,
    11,
    0,
    0,
    0,
    5,
    0,
    1265,
    0,
    64,
    1991,
    61
   ],
   [
    7.5,
    4,
    13,
    0,
    0,
    0,
    1.4,
    0,
    2185,
    0,
    65,
    1991,
    68
   ],
   [
    5,
    1.5,
    10,
    0,
    0,
    0,
    3.6,
    0,
    345,
    1,
    66,
    1991,
    72
   ],
   [
    6,
    5.5,
    7,
    0,
    0,
    0,
    3.1,
    0,
    235,
    0,
    67,
    1991,
    77
   ],
   [
    5.7,
    0,
    11,
    0,
    0,
    0,
    3.1,
    0,
    1279,
    0,
    68,
    1991,
    57
   ],
   [
    4.5,
    -0.5,
    11.5,
    0,
    0,
    0,
    4.2,
    0,
    1320,
    0,
    69,
    1991,
    55
   ],
   [
    4.7,
    -2.5,
    12.5,
    0,
    0,
    0,
    2.2,
    0,
    1348,
    0,
    70,
    1991,
    53
   ],
   [
    4,
    1,
    6.5,
    0,
    0,
    0,
    5.8,
    0,
    766,
    2,
    71,
    1991,
    65
   ],
   [
    3.1,
    -0.5,
    6,
    0,
    0,
    0,
    5.8,
    0,
    323,
    14,
    72,
    1991,
    75
   ],
   [
    2.8,
    0,
    6,
    0,
    0,
    0,
    7.8,
    0,
    323,
    3,
    73,
    1991,
    74
   ],
   [
    1.1,
    -0.5,
    3,
    0,
    0,
    0,
    9.7,
    0,
    1494,
    1,
    74,
    1991,
    50
   ],
   [
    0.4,
    -2.5,
    2,
    0,
    0,
    0,
    2.5,
    0,
    703,
    2,
    75,
    1991,
    71
   ],
   [
    2.5,
    -1,
    6,
    0,
    0,
    0,
    7.2,
    0,
    1352,
    0,
    76,
    1991,
    55
   ],
   [
    2.3,
    -2,
    5,
    0,
    0,
    0,
    2.5,
    0,
    434,
    0,
    77,
    1991,
    70
   ],
   [
    6.8,
    3.5,
    11,
    0,
    0,
    0,
    3.1,
    0,
    1067,
    0,
    78,
    1991,
    71
   ],
   [
    4.7,
    -1,
    11.5,
    0,
    0,
    0,
    4.7,
    0,
    1020,
    1,
    79,
    1991,
    71
   ],
   [
    6.1,
    4,
    8,
    0,
    0,
    0,
    3.1,
    0,
    307,
    12,
    80,
    1991,
    74
   ],
   [
    8.3,
    4.5,
    11,
    0,
    0,
    0,
    2.5,
    0,
    396,
    6,
    81,
    1991,
    75
   ],
   [
    5.5,
    4,
    8,
    0,
    0,
    0,
    8.6,
    0,
    694,
    5,
    82,
    1991,
    66
   ],
   [
    3.7,
    0.1,
    7.3,
    0,
    0,
    0,
    0.9,
    0,
    94.1,
    1,
    83,
    1991,
    86
   ],
   [
    2.7,
    -1.5,
    6.2,
    0,
    0,
    0,
    3.3,
    0,
    698.2,
    0,
    84,
    1991,
    90
   ],
   [
    2.1,
    0.3,
    2.8,
    0,
    0,
    0,
    4.1,
    0,
    165.7,
    6.3,
    85,
    1991,
    95
   ],
   [
    3.5,
    1.1,
    6.7,
    0,
    0,
    0,
    3.2,
    0,
    750,
    0.2,
    86,
    1991,
    84
   ],
   [
    2.5,
    1.5,
    4.5,
    0,
    0,
    0,
    2.8,
    0,
    619.5,
    1.4,
    87,
    1991,
    92
   ],
   [
    1.9,
    0.5,
    3.7,
    0,
    0,
    0,
    4.9,
    0,
    776,
    3.2,
    88,
    1991,
    92
   ],
   [
    1.5,
    -0.6,
    4.1,
    0,
    0,
    0,
    3.7,
    0,
    897.1,
    0.7,
    89,
    1991,
    89
   ],
   [
    1.2,
    -3.2,
    5,
    0,
    0,
    0,
    2.9,
    0,
    1185.7,
    0,
    90,
    1991,
    85
   ],
   [
    5.6,
    -0.3,
    12.4,
    0,
    0,
    0,
    5.7,
    0,
    1745.9,
    0,
    91,
    1991,
    76
   ],
   [
    7.4,
    2.4,
    14.9,
    0,
    0,
    0,
    5.5,
    0,
    1106.8,
    2.6,
    92,
    1991,
    83
   ],
   [
    7.2,
    2.8,
    12.9,
    0,
    0,
    0,
    4.5,
    0,
    1732.5,
    0,
    93,
    1991,
    75
   ],
   [
    5.9,
    0.6,
    10.3,
    0,
    0,
    0,
    3.4,
    0,
    1322.5,
    0,
    94,
    1991,
    84
   ],
   [
    5.3,
    1.6,
    8.5,
    0,
    0,
    0,
    4.2,
    0,
    1240.8,
    0,
    95,
    1991,
    79
   ],
   [
    3.7,
    -0.4,
    7.1,
    0,
    0,
    0,
    3,
    0,
    1172.5,
    0,
    96,
    1991,
    80
   ],
   [
    4.1,
    -1.1,
    8.2,
    0,
    0,
    0,
    2.5,
    0,
    857.1,
    0.1,
    97,
    1991,
    84
   ],
   [
    6.7,
    2.1,
    11.1,
    0,
    0,
    0,
    1.8,
    0,
    1208.2,
    0,
    98,
    1991,
    75
   ],
   [
    7.2,
    3,
    12.3,
    0,
    0,
    0,
    1.4,
    0,
    1390.4,
    0,
    99,
    1991,
    70
   ],
   [
    5.8,
    -0.5,
    11.5,
    0,
    0,
    0,
    2.4,
    0,
    1894,
    0,
    100,
    1991,
    73
   ],
   [
    6.8,
    -1.5,
    13.2,
    0,
    0,
    0,
    0.9,
    0,
    1984.4,
    0,
    101,
    1991,
    68
   ],
   [
    10.2,
    4.4,
    15.6,
    0,
    0,
    0,
    2.7,
    0,
    1573.1,
    0,
    102,
    1991,
    68
   ],
   [
    11.5,
    6.8,
    16.6,
    0,
    0,
    0,
    3.4,
    0,
    1625.8,
    0,
    103,
    1991,
    71
   ],
   [
    8.5,
    7.3,
    10.1,
    0,
    0,
    0,
    4.3,
    0,
    85.3,
    2.1,
    104,
    1991,
    87
   ],
   [
    7.3,
    5,
    10,
    0,
    0,
    0,
    5.5,
    0,
    781.3,
    0.1,
    105,
    1991,
    82
   ],
   [
    7.6,
    2.4,
    14,
    0,
    0,
    0,
    3.7,
    0,
    926,
    1,
    106,
    1991,
    79
   ],
   [
    5.1,
    1.6,
    7.1,
    0,
    0,
    0,
    4.9,
    0,
    642.1,
    2.3,
    107,
    1991,
    86
   ],
   [
    2.7,
    -0.1,
    6,
    0,
    0,
    0,
    3.8,
    0,
    1391.3,
    2.1,
    108,
    1991,
    87
   ],
   [
    6.3,
    1.7,
    9.9,
    0,
    0,
    0,
    5.2,
    0,
    1161,
    1.7,
    109,
    1991,
    88
   ],
   [
    8.2,
    5.4,
    10,
    0,
    0,
    0,
    7.7,
    0,
    1512.8,
    1.9,
    110,
    1991,
    72
   ],
   [
    5.6,
    1.4,
    8.8,
    0,
    0,
    0,
    5.8,
    0,
    1868,
    0,
    111,
    1991,
    59
   ],
   [
    6.2,
    -1,
    11.3,
    0,
    0,
    0,
    3.1,
    0,
    2245.3,
    0,
    112,
    1991,
    61
   ],
   [
    8.2,
    2,
    12.8,
    0,
    0,
    0,
    4.1,
    0,
    1624.7,
    0,
    113,
    1991,
    59
   ],
   [
    6.5,
    3,
    9.4,
    0,
    0,
    0,
    2.3,
    0,
    938.8,
    0,
    114,
    1991,
    78
   ],
   [
    10.4,
    5.4,
    15.1,
    0,
    0,
    0,
    1.9,
    0,
    1198.2,
    0,
    115,
    1991,
    75
   ],
   [
    15.3,
    7.8,
    24.1,
    0,
    0,
    0,
    3.6,
    0,
    1880.3,
    1.7,
    116,
    1991,
    71
   ],
   [
    13.9,
    10.2,
    19,
    0,
    0,
    0,
    2,
    0,
    1285,
    2.8,
    117,
    1991,
    81
   ],
   [
    12.8,
    6.6,
    15.5,
    0,
    0,
    0,
    4.4,
    0,
    1421.3,
    0,
    118,
    1991,
    74
   ],
   [
    12.1,
    4.8,
    17,
    0,
    0,
    0,
    3.5,
    0,
    1388.5,
    0.1,
    119,
    1991,
    67
   ],
   [
    10.6,
    6.9,
    12.8,
    0,
    0,
    0,
    3.8,
    0,
    945.1,
    2.2,
    120,
    1991,
    86
   ],
   [
    9.6,
    2.8,
    14.8,
    0,
    0,
    0,
    2.3,
    0,
    1682.8,
    0,
    121,
    1991,
    70
   ],
   [
    12.4,
    6.1,
    17.1,
    0,
    0,
    0,
    4.9,
    0,
    1658.5,
    0.2,
    122,
    1991,
    68
   ],
   [
    8.2,
    5.7,
    10.2,
    0,
    0,
    0,
    2,
    0,
    774.4,
    3,
    123,
    1991,
    90
   ],
   [
    9.1,
    6,
    11.9,
    0,
    0,
    0,
    2.9,
    0,
    1568.6,
    0.1,
    124,
    1991,
    76
   ],
   [
    8.3,
    2.5,
    13,
    0,
    0,
    0,
    1.6,
    0,
    2597.4,
    0,
    125,
    1991,
    70
   ],
   [
    9.9,
    1.4,
    15.8,
    0,
    0,
    0,
    1.3,
    0,
    2576.3,
    0,
    126,
    1991,
    67
   ],
   [
    12.4,
    4.4,
    17.6,
    0,
    0,
    0,
    3.2,
    0,
    2162.5,
    0,
    127,
    1991,
    66
   ],
   [
    13.3,
    11.5,
    16.3,
    0,
    0,
    0,
    4.5,
    0,
    694,
    2.4,
    128,
    1991,
    87
   ],
   [
    10.5,
    5.1,
    17.1,
    0,
    0,
    0,
    5.3,
    0,
    478,
    2.7,
    129,
    1991,
    88
   ],
   [
    7.5,
    4.3,
    11.4,
    0,
    0,
    0,
    4.4,
    0,
    1322.1,
    2.4,
    130,
    1991,
    85
   ],
   [
    7.9,
    5.8,
    11,
    0,
    0,
    0,
    4.5,
    0,
    1266.1,
    3.1,
    131,
    1991,
    84
   ],
   [
    7,
    4.8,
    10,
    0,
    0,
    0,
    2.6,
    0,
    555.5,
    10.9,
    132,
    1991,
    95
   ],
   [
    9.8,
    3.3,
    14.6,
    0,
    0,
    0,
    4.4,
    0,
    1678.7,
    0.3,
    133,
    1991,
    80
   ],
   [
    15.6,
    12.2,
    20,
    0,
    0,
    0,
    4.1,
    0,
    1808.4,
    0,
    134,
    1991,
    78
   ],
   [
    16.6,
    11.1,
    22,
    0,
    0,
    0,
    2.7,
    0,
    2321.7,
    0,
    135,
    1991,
    76
   ],
   [
    17.9,
    11.2,
    24.4,
    0,
    0,
    0,
    3.7,
    0,
    2655.3,
    0,
    136,
    1991,
    64
   ],
   [
    15.2,
    8.9,
    24.3,
    0,
    0,
    0,
    2.1,
    0,
    2210.4,
    0,
    137,
    1991,
    68
   ],
   [
    12.2,
    7.7,
    17.1,
    0,
    0,
    0,
    3,
    0,
    2284.1,
    0,
    138,
    1991,
    77
   ],
   [
    12.3,
    4.4,
    18.3,
    0,
    0,
    0,
    2.5,
    0,
    2756.5,
    0,
    139,
    1991,
    67
   ],
   [
    14.6,
    6.9,
    21.4,
    0,
    0,
    0,
    2.4,
    0,
    2776.1,
    0,
    140,
    1991,
    71
   ],
   [
    17.4,
    9.1,
    24.3,
    0,
    0,
    0,
    2.2,
    0,
    2700.8,
    0,
    141,
    1991,
    65
   ],
   [
    19,
    10.4,
    25.8,
    0,
    0,
    0,
    1.8,
    0,
    2579.2,
    0,
    142,
    1991,
    65
   ],
   [
    20,
    13.1,
    26.4,
    0,
    0,
    0,
    2.3,
    0,
    2467.6,
    0,
    143,
    1991,
    66
   ],
   [
    19.6,
    12.6,
    26.7,
    0,
    0,
    0,
    4,
    0,
    2653.4,
    0,
    144,
    1991,
    64
   ],
   [
    17.4,
    10.5,
    23.8,
    0,
    0,
    0,
    4.7,
    0,
    2882.2,
    0,
    145,
    1991,
    57
   ],
   [
    16,
    9.3,
    22.2,
    0,
    0,
    0,
    4,
    0,
    2885.6,
    0,
    146,
    1991,
    52
   ],
   [
    15.9,
    8.3,
    21.7,
    0,
    0,
    0,
    3.4,
    0,
    2604.2,
    0,
    147,
    1991,
    60
   ],
   [
    17.5,
    12.2,
    24,
    0,
    0,
    0,
    2.8,
    0,
    2414.5,
    0,
    148,
    1991,
    72
   ],
   [
    15.3,
    9.2,
    20.7,
    0,
    0,
    0,
    2.8,
    0,
    2765,
    0,
    149,
    1991,
    66
   ],
   [
    16.5,
    10.6,
    22.1,
    0,
    0,
    0,
    3.2,
    0,
    2255.4,
    0,
    150,
    1991,
    67
   ],
   [
    17.3,
    8.2,
    24.1,
    0,
    0,
    0,
    1.9,
    0,
    2521.1,
    0,
    151,
    1991,
    66
   ],
   [
    17.9,
    10.4,
    24,
    0,
    0,
    0,
    2.1,
    0,
    2654.2,
    0,
    152,
    1991,
    65
   ],
   [
    19.6,
    10.8,
    26.4,
    0,
    0,
    0,
    3.5,
    0,
    2343.9,
    0,
    153,
    1991,
    61
   ],
   [
    21.9,
    13.5,
    28.5,
    0,
    0,
    0,
    5.1,
    0,
    2569.7,
    0,
    154,
    1991,
    57
   ],
   [
    20.9,
    15.4,
    27.9,
    0,
    0,
    0,
    3.7,
    0,
    1808.9,
    0,
    155,
    1991,
    69
   ],
   [
    22,
    14.2,
    29.2,
    0,
    0,
    0,
    4.3,
    0,
    2743.4,
    0,
    156,
    1991,
    59
   ],
   [
    21.5,
    12.9,
    28.3,
    0,
    0,
    0,
    3.6,
    0,
    2693.2,
    0,
    157,
    1991,
    58
   ],
   [
    19.2,
    14.8,
    25.3,
    0,
    0,
    0,
    3.4,
    0,
    2023.7,
    0.1,
    158,
    1991,
    67
   ],
   [
    18.7,
    12.7,
    23.3,
    0,
    0,
    0,
    4,
    0,
    2357.8,
    0,
    159,
    1991,
    53
   ],
   [
    18.8,
    14,
    23.9,
    0,
    0,
    0,
    3.6,
    0,
    2228.9,
    0,
    160,
    1991,
    61
   ],
   [
    18.4,
    12.5,
    24.7,
    0,
    0,
    0,
    2.6,
    0,
    1976.6,
    0.2,
    161,
    1991,
    66
   ],
   [
    13.2,
    9.8,
    19.5,
    0,
    0,
    0,
    2.9,
    0,
    1508.4,
    0.5,
    162,
    1991,
    80
   ],
   [
    12.9,
    10.1,
    15.6,
    0,
    0,
    0,
    1.9,
    0,
    923.6,
    3.7,
    163,
    1991,
    88
   ],
   [
    15.2,
    12,
    20.5,
    0,
    0,
    0,
    2.3,
    0,
    1318.6,
    7.5,
    164,
    1991,
    87
   ],
   [
    15.8,
    12,
    20.7,
    0,
    0,
    0,
    2.7,
    0,
    2219.2,
    0,
    165,
    1991,
    79
   ],
   [
    19.1,
    10.9,
    25.3,
    0,
    0,
    0,
    2.6,
    0,
    2704.9,
    0,
    166,
    1991,
    64
   ],
   [
    20.3,
    15.8,
    24.9,
    0,
    0,
    0,
    2,
    0,
    1706.9,
    0,
    167,
    1991,
    70
   ],
   [
    18.3,
    12.9,
    23.1,
    0,
    0,
    0,
    1.6,
    0,
    1344.6,
    0,
    168,
    1991,
    77
   ],
   [
    17.6,
    9.9,
    23.9,
    0,
    0,
    0,
    2,
    0,
    2839.6,
    0,
    169,
    1991,
    66
   ],
   [
    16.6,
    9.6,
    21.7,
    0,
    0,
    0,
    2.3,
    0,
    2466.2,
    0,
    170,
    1991,
    66
   ],
   [
    19.1,
    11.6,
    26,
    0,
    0,
    0,
    3.8,
    0,
    2703.7,
    0.5,
    171,
    1991,
    60
   ],
   [
    19.7,
    14.4,
    26,
    0,
    0,
    0,
    2.9,
    0,
    2145.7,
    0,
    172,
    1991,
    61
   ],
   [
    19.8,
    11.8,
    26.9,
    0,
    0,
    0,
    2.3,
    0,
    2690.9,
    0,
    173,
    1991,
    58
   ],
   [
    17,
    12.3,
    22,
    0,
    0,
    0,
    3.6,
    0,
    2797,
    0,
    174,
    1991,
    69
   ],
   [
    16.4,
    8.1,
    22.5,
    0,
    0,
    0,
    2,
    0,
    2568.7,
    0,
    175,
    1991,
    70
   ],
   [
    17.4,
    11.7,
    23.4,
    0,
    0,
    0,
    2.8,
    0,
    2811.3,
    0,
    176,
    1991,
    70
   ],
   [
    17.8,
    10.8,
    24.4,
    0,
    0,
    0,
    3,
    0,
    2801.6,
    0,
    177,
    1991,
    59
   ],
   [
    17.3,
    9.1,
    24,
    0,
    0,
    0,
    2.6,
    0,
    2954.2,
    0,
    178,
    1991,
    57
   ],
   [
    19,
    10,
    26.4,
    0,
    0,
    0,
    1.7,
    0,
    2909.1,
    0,
    179,
    1991,
    57
   ],
   [
    19,
    11.3,
    27.3,
    0,
    0,
    0,
    1.2,
    0,
    1551.1,
    0,
    180,
    1991,
    61
   ],
   [
    25.6,
    17.4,
    30,
    0,
    0,
    0,
    2,
    0,
    2749.3,
    10,
    181,
    1991,
    41
   ],
   [
    23.6,
    13.2,
    31.6,
    0,
    0,
    0,
    2.4,
    0,
    2611.3,
    0,
    182,
    1991,
    52
   ],
   [
    24.2,
    14.8,
    32.3,
    0,
    0,
    0,
    2,
    0,
    2632.3,
    0,
    183,
    1991,
    58
   ],
   [
    21.2,
    14.9,
    25.8,
    0,
    0,
    0,
    3.2,
    0,
    2149.9,
    0,
    184,
    1991,
    68
   ],
   [
    19,
    10.7,
    24.8,
    0,
    0,
    0,
    1.4,
    0,
    2431.4,
    0,
    185,
    1991,
    57
   ],
   [
    19.3,
    15.7,
    25.6,
    0,
    0,
    0,
    2.3,
    0,
    1551.2,
    8.5,
    186,
    1991,
    79
   ],
   [
    17.8,
    15.5,
    21.7,
    0,
    0,
    0,
    3.3,
    0,
    861.7,
    0.2,
    187,
    1991,
    72
   ],
   [
    14.1,
    12,
    15.6,
    0,
    0,
    0,
    3.7,
    0,
    538.1,
    2.3,
    188,
    1991,
    85
   ],
   [
    17.7,
    13,
    23,
    0,
    0,
    0,
    2.4,
    0,
    2346.1,
    0,
    189,
    1991,
    65
   ],
   [
    19.4,
    10.7,
    26.5,
    0,
    0,
    0,
    1.4,
    0,
    2788.5,
    0,
    190,
    1991,
    59
   ],
   [
    21.6,
    12.1,
    28.3,
    0,
    0,
    0,
    1.6,
    0,
    2403.2,
    0,
    191,
    1991,
    56
   ],
   [
    21.3,
    11.8,
    28.7,
    0,
    0,
    0,
    1.8,
    0,
    2359.6,
    0,
    192,
    1991,
    57
   ],
   [
    18.6,
    16,
    21.6,
    0,
    0,
    0,
    2.4,
    0,
    1301.5,
    0.5,
    193,
    1991,
    81
   ],
   [
    18.3,
    14.9,
    24.1,
    0,
    0,
    0,
    2.5,
    0,
    1516.3,
    0.8,
    194,
    1991,
    79
   ],
   [
    18.5,
    13.1,
    23.7,
    0,
    0,
    0,
    3.5,
    0,
    2217.4,
    0,
    195,
    1991,
    66
   ],
   [
    16.8,
    13.7,
    19.2,
    0,
    0,
    0,
    4.6,
    0,
    906.5,
    4.3,
    196,
    1991,
    87
   ],
   [
    15.8,
    11.1,
    19.5,
    0,
    0,
    0,
    4.1,
    0,
    1748.9,
    0,
    197,
    1991,
    67
   ],
   [
    15.2,
    8.5,
    20.4,
    0,
    0,
    0,
    2.7,
    0,
    2152.1,
    0,
    198,
    1991,
    68
   ],
   [
    19.8,
    9.7,
    26.8,
    0,
    0,
    0,
    2.1,
    0,
    1744.3,
    4,
    199,
    1991,
    66
   ],
   [
    18.5,
    13.8,
    22.5,
    0,
    0,
    0,
    4.2,
    0,
    1662.3,
    1,
    200,
    1991,
    81
   ],
   [
    14.5,
    13.5,
    17.1,
    0,
    0,
    0,
    2.1,
    0,
    268.3,
    0,
    201,
    1991,
    89
   ],
   [
    24.8,
    17.2,
    32.1,
    0,
    0,
    0,
    2,
    0,
    2420,
    0,
    202,
    1991,
    60
   ],
   [
    26.7,
    16.9,
    35.6,
    0,
    0,
    0,
    3,
    0,
    2410,
    4,
    203,
    1991,
    56
   ],
   [
    19.7,
    17,
    24.4,
    0,
    0,
    0,
    2,
    0,
    1300,
    0,
    204,
    1991,
    79
   ],
   [
    21.2,
    15.3,
    25.3,
    0,
    0,
    0,
    2.4,
    0,
    782.6,
    0,
    205,
    1991,
    56
   ],
   [
    20.3,
    11.4,
    27.6,
    0,
    0,
    0,
    2,
    0,
    2763.3,
    0,
    206,
    1991,
    59
   ],
   [
    20.9,
    12.6,
    29.5,
    0,
    0,
    0,
    3.2,
    0,
    2380.4,
    2.1,
    207,
    1991,
    65
   ],
   [
    19,
    13.9,
    24.6,
    0,
    0,
    0,
    3.2,
    0,
    1861.6,
    0,
    208,
    1991,
    74
   ],
   [
    21.3,
    14.3,
    29.8,
    0,
    0,
    0,
    3.9,
    0,
    1924,
    2.8,
    209,
    1991,
    65
   ],
   [
    16.1,
    11.4,
    21.1,
    0,
    0,
    0,
    5.8,
    0,
    1836.5,
    0,
    210,
    1991,
    66
   ],
   [
    17.1,
    9.9,
    23.1,
    0,
    0,
    0,
    2.6,
    0,
    2633.5,
    0,
    211,
    1991,
    66
   ],
   [
    21.8,
    10.5,
    31,
    0,
    0,
    0,
    2.8,
    0,
    2483,
    0,
    212,
    1991,
    57
   ],
   [
    20.9,
    14.7,
    26.8,
    0,
    0,
    0,
    2.1,
    0,
    1692.5,
    0,
    213,
    1991,
    64
   ],
   [
    21.4,
    13.9,
    28.3,
    0,
    0,
    0,
    2.3,
    0,
    2048.3,
    0,
    214,
    1991,
    69
   ],
   [
    21.5,
    16.2,
    26.5,
    0,
    0,
    0,
    2.9,
    0,
    1457.1,
    5.7,
    215,
    1991,
    77
   ],
   [
    23.6,
    13.7,
    32.2,
    0,
    0,
    0,
    3.4,
    0,
    2017.3,
    0,
    216,
    1991,
    66
   ],
   [
    19.9,
    13.1,
    23.6,
    0,
    0,
    0,
    4.1,
    0,
    1820.6,
    0,
    217,
    1991,
    65
   ],
   [
    19.8,
    10.5,
    27.1,
    0,
    0,
    0,
    3,
    0,
    2407.9,
    0,
    218,
    1991,
    59
   ],
   [
    22.8,
    13.4,
    31.6,
    0,
    0,
    0,
    2.7,
    0,
    2288.3,
    0,
    219,
    1991,
    55
   ],
   [
    20,
    13.5,
    26.7,
    0,
    0,
    0,
    3,
    0,
    2540,
    0,
    220,
    1991,
    55
   ],
   [
    22.8,
    13.7,
    33.8,
    0,
    0,
    0,
    1,
    0,
    2540,
    0,
    221,
    1991,
    63
   ],
   [
    29,
    15.3,
    37.6,
    0,
    0,
    0,
    4,
    0,
    2010,
    0,
    222,
    1991,
    50
   ],
   [
    26.5,
    22.3,
    35.5,
    0,
    0,
    0,
    7,
    0,
    2260,
    0,
    223,
    1991,
    50
   ],
   [
    20.4,
    14.4,
    23.8,
    0,
    0,
    0,
    4.3,
    0,
    1570.9,
    1.7,
    224,
    1991,
    63
   ],
   [
    19.5,
    13.8,
    25.6,
    0,
    0,
    0,
    3.7,
    0,
    1966.7,
    0.1,
    225,
    1991,
    63
   ],
   [
    16.9,
    15,
    19.8,
    0,
    0,
    0,
    5.1,
    0,
    1022.4,
    2.1,
    226,
    1991,
    75
   ],
   [
    14.9,
    13,
    16.9,
    0,
    0,
    0,
    4.8,
    0,
    618.8,
    10.9,
    227,
    1991,
    94
   ],
   [
    14.7,
    11.8,
    18.7,
    0,
    0,
    0,
    4.4,
    0,
    1386.8,
    0.1,
    228,
    1991,
    81
   ],
   [
    16.1,
    9.1,
    22,
    0,
    0,
    0,
    1.9,
    0,
    1980.8,
    0,
    229,
    1991,
    69
   ],
   [
    15.7,
    12.9,
    18.2,
    0,
    0,
    0,
    3.3,
    0,
    675.5,
    1.4,
    230,
    1991,
    84
   ],
   [
    16.4,
    11.5,
    20.7,
    0,
    0,
    0,
    3.5,
    0,
    1748.1,
    0,
    231,
    1991,
    72
   ],
   [
    18.3,
    14.2,
    22.4,
    0,
    0,
    0,
    2,
    0,
    1665.1,
    0,
    232,
    1991,
    69
   ],
   [
    20.4,
    14,
    26.7,
    0,
    0,
    0,
    2.9,
    0,
    1911.8,
    1.5,
    233,
    1991,
    66
   ],
   [
    19.4,
    14.9,
    22.8,
    0,
    0,
    0,
    4.5,
    0,
    1227.8,
    3.4,
    234,
    1991,
    76
   ],
   [
    16.8,
    11.2,
    22.8,
    0,
    0,
    0,
    3.4,
    0,
    2159,
    0,
    235,
    1991,
    74
   ],
   [
    15.3,
    10.7,
    22.6,
    0,
    0,
    0,
    2.7,
    0,
    1077.1,
    0.9,
    236,
    1991,
    87
   ],
   [
    16,
    9.3,
    21.1,
    0,
    0,
    0,
    3.6,
    0,
    1263.5,
    0,
    237,
    1991,
    72
   ],
   [
    18.1,
    15,
    22.7,
    0,
    0,
    0,
    4.2,
    0,
    740.5,
    1.4,
    238,
    1991,
    87
   ],
   [
    19.2,
    14.4,
    24.8,
    0,
    0,
    0,
    2.8,
    0,
    1346.8,
    23.1,
    239,
    1991,
    88
   ],
   [
    18.9,
    16.3,
    22.5,
    0,
    0,
    0,
    3.8,
    0,
    1094.5,
    0.6,
    240,
    1991,
    85
   ],
   [
    24.1,
    18.2,
    31.5,
    0,
    0,
    0,
    3.5,
    0,
    1889.8,
    0.1,
    241,
    1991,
    66
   ],
   [
    21.6,
    16.1,
    30.3,
    0,
    0,
    0,
    3.3,
    0,
    1713.7,
    0.5,
    242,
    1991,
    78
   ],
   [
    15.8,
    14.1,
    18.2,
    0,
    0,
    0,
    2,
    0,
    649,
    0.1,
    243,
    1991,
    92
   ],
   [
    16.5,
    13.1,
    20.7,
    0,
    0,
    0,
    3.2,
    0,
    844.3,
    14.8,
    244,
    1991,
    83
   ],
   [
    12.1,
    10,
    13.2,
    0,
    0,
    0,
    5.1,
    0,
    669.7,
    8,
    245,
    1991,
    89
   ],
   [
    13.2,
    8.1,
    16.4,
    0,
    0,
    0,
    5.4,
    0,
    1420.7,
    0,
    246,
    1991,
    73
   ],
   [
    15.5,
    12.8,
    18.9,
    0,
    0,
    0,
    5.5,
    0,
    933.5,
    5.1,
    247,
    1991,
    82
   ],
   [
    12,
    9.1,
    15.1,
    0,
    0,
    0,
    4.3,
    0,
    1196,
    1.5,
    248,
    1991,
    87
   ],
   [
    10.8,
    8.3,
    12.9,
    0,
    0,
    0,
    4.5,
    0,
    981,
    4.5,
    249,
    1991,
    91
   ],
   [
    11.5,
    8.2,
    15,
    0,
    0,
    0,
    4.9,
    0,
    1422,
    0,
    250,
    1991,
    76
   ],
   [
    12.3,
    5.8,
    17.8,
    0,
    0,
    0,
    3.5,
    0,
    1794.1,
    0.8,
    251,
    1991,
    76
   ],
   [
    13.3,
    10.2,
    15.9,
    0,
    0,
    0,
    3.4,
    0,
    951.2,
    1.2,
    252,
    1991,
    79
   ],
   [
    12.5,
    8.7,
    17.2,
    0,
    0,
    0,
    2.9,
    0,
    1598.5,
    0,
    253,
    1991,
    75
   ],
   [
    12.8,
    5.5,
    19.6,
    0,
    0,
    0,
    2,
    0,
    1740.5,
    0,
    254,
    1991,
    73
   ],
   [
    14.9,
    9,
    22.4,
    0,
    0,
    0,
    2.7,
    0,
    1289.7,
    0,
    255,
    1991,
    75
   ],
   [
    14,
    9.6,
    18.6,
    0,
    0,
    0,
    2.1,
    0,
    953.5,
    0,
    256,
    1991,
    83
   ],
   [
    12.4,
    5.8,
    18.1,
    0,
    0,
    0,
    1.5,
    0,
    1433.4,
    0,
    257,
    1991,
    79
   ],
   [
    13.7,
    10.8,
    17.5,
    0,
    0,
    0,
    3.5,
    0,
    755.9,
    0,
    258,
    1991,
    84
   ],
   [
    13.5,
    9.2,
    17.4,
    0,
    0,
    0,
    4.4,
    0,
    988.2,
    0,
    259,
    1991,
    79
   ],
   [
    14.9,
    12.6,
    17.2,
    0,
    0,
    0,
    5.7,
    0,
    603.1,
    0,
    260,
    1991,
    77
   ],
   [
    12.7,
    7.7,
    17.3,
    0,
    0,
    0,
    2.3,
    0,
    1648.4,
    0,
    261,
    1991,
    68
   ],
   [
    10.9,
    3.9,
    18.5,
    0,
    0,
    0,
    1.5,
    0,
    1638.8,
    0,
    262,
    1991,
    75
   ],
   [
    11.4,
    5.1,
    17.9,
    0,
    0,
    0,
    2.7,
    0,
    1565.4,
    0,
    263,
    1991,
    74
   ],
   [
    11.4,
    5.7,
    17,
    0,
    0,
    0,
    1.8,
    0,
    719.7,
    0.2,
    264,
    1991,
    83
   ],
   [
    13.1,
    6.9,
    19.8,
    0,
    0,
    0,
    2.2,
    0,
    1413.8,
    0,
    265,
    1991,
    77
   ],
   [
    15.1,
    9.1,
    21.8,
    0,
    0,
    0,
    5.3,
    0,
    1376.5,
    0,
    266,
    1991,
    68
   ],
   [
    15.8,
    9.8,
    22.6,
    0,
    0,
    0,
    3.3,
    0,
    1295.2,
    0,
    267,
    1991,
    71
   ],
   [
    14.6,
    12.1,
    16.6,
    0,
    0,
    0,
    1.4,
    0,
    480.1,
    0.4,
    268,
    1991,
    90
   ],
   [
    14.2,
    12.1,
    17.3,
    0,
    0,
    0,
    0.6,
    0,
    591.1,
    0.3,
    269,
    1991,
    90
   ],
   [
    14.1,
    8,
    22.2,
    0,
    0,
    0,
    0.9,
    0,
    1302.4,
    0.2,
    270,
    1991,
    76
   ],
   [
    14.3,
    7.5,
    22.4,
    0,
    0,
    0,
    0.7,
    0,
    1343.3,
    0,
    271,
    1991,
    75
   ],
   [
    13.2,
    7.8,
    21.1,
    0,
    0,
    0,
    1.7,
    0,
    1234.9,
    0,
    272,
    1991,
    81
   ],
   [
    11.1,
    7.1,
    15.7,
    0,
    0,
    0,
    2.5,
    0,
    1324.4,
    0,
    273,
    1991,
    77
   ],
   [
    11.1,
    9.5,
    14,
    0,
    0,
    0,
    0.7,
    0,
    568.4,
    0,
    274,
    1991,
    81
   ],
   [
    8.8,
    2.8,
    16.3,
    0,
    0,
    0,
    0,
    0,
    760,
    0,
    275,
    1991,
    88
   ],
   [
    8.7,
    3,
    16.4,
    0,
    0,
    0,
    2.2,
    0,
    940,
    0,
    276,
    1991,
    82
   ],
   [
    10.8,
    3.9,
    16.8,
    0,
    0,
    0,
    3.6,
    0,
    750,
    0,
    277,
    1991,
    77
   ],
   [
    9.3,
    5.1,
    15.5,
    0,
    0,
    0,
    9.2,
    0,
    1100,
    0,
    278,
    1991,
    70
   ],
   [
    9,
    4.6,
    10.7,
    0,
    0,
    0,
    7.2,
    0,
    1280,
    3,
    279,
    1991,
    83
   ],
   [
    11.3,
    9.8,
    12.3,
    0,
    0,
    0,
    5,
    0,
    340,
    1,
    280,
    1991,
    99
   ],
   [
    8.8,
    5.9,
    13.3,
    0,
    0,
    0,
    3.6,
    0,
    340,
    0,
    281,
    1991,
    95
   ],
   [
    9.4,
    2.9,
    11.3,
    0,
    0,
    0,
    6.7,
    0,
    330,
    0,
    282,
    1991,
    93
   ],
   [
    8,
    4.7,
    13.7,
    0,
    0,
    0,
    1.4,
    0,
    320,
    1,
    283,
    1991,
    96
   ],
   [
    4.9,
    1.7,
    12.6,
    0,
    0,
    0,
    4.7,
    0,
    500,
    0,
    284,
    1991,
    88
   ],
   [
    6,
    1.8,
    11.4,
    0,
    0,
    0,
    4.2,
    0,
    1000,
    0,
    285,
    1991,
    95
   ],
   [
    4.1,
    -1.9,
    8,
    0,
    0,
    0,
    2.5,
    0,
    794.3,
    0,
    286,
    1991,
    61
   ],
   [
    1.9,
    -3.1,
    8.6,
    0,
    0,
    0,
    1.8,
    0,
    1119.7,
    0,
    287,
    1991,
    62
   ],
   [
    0.6,
    -3.2,
    8.1,
    0,
    0,
    0,
    2.3,
    0,
    556.4,
    0,
    288,
    1991,
    61
   ],
   [
    5.7,
    4.1,
    8.8,
    0,
    0,
    0,
    5,
    0,
    290,
    0,
    289,
    1991,
    92
   ],
   [
    4.7,
    2.1,
    7.1,
    0,
    0,
    0,
    4.2,
    0,
    100.2,
    0,
    290,
    1991,
    80
   ],
   [
    2.9,
    0.1,
    7.2,
    0,
    0,
    0,
    3.5,
    0,
    698.1,
    0,
    291,
    1991,
    85
   ],
   [
    2.9,
    -1.9,
    8.9,
    0,
    0,
    0,
    2.1,
    0,
    850.1,
    0,
    292,
    1991,
    84
   ],
   [
    5,
    -0.2,
    11.9,
    0,
    0,
    0,
    3.7,
    0,
    869.3,
    0,
    293,
    1991,
    79
   ],
   [
    4.2,
    -0.3,
    10.7,
    0,
    0,
    0,
    1.7,
    0,
    926.4,
    0,
    294,
    1991,
    80
   ],
   [
    4.4,
    -2,
    12.2,
    0,
    0,
    0,
    2.6,
    0,
    713.9,
    0,
    295,
    1991,
    84
   ],
   [
    4,
    1.2,
    6,
    0,
    0,
    0,
    5.1,
    0,
    376.1,
    0.6,
    296,
    1991,
    88
   ],
   [
    3.5,
    -0.4,
    6.5,
    0,
    0,
    0,
    3.4,
    0,
    731.9,
    1.2,
    297,
    1991,
    81
   ],
   [
    5.1,
    3.2,
    6.3,
    0,
    0,
    0,
    4.2,
    0,
    383.1,
    2.1,
    298,
    1991,
    91
   ],
   [
    4.6,
    3.6,
    6.9,
    0,
    0,
    0,
    3.8,
    0,
    410.5,
    2.7,
    299,
    1991,
    85
   ],
   [
    3.2,
    0,
    6,
    0,
    0,
    0,
    2.8,
    0,
    149,
    2.5,
    300,
    1991,
    91
   ],
   [
    0,
    1.8,
    1.7,
    0,
    0,
    0,
    2.1,
    0,
    307.6,
    0,
    301,
    1991,
    94
   ],
   [
    3.7,
    0.6,
    6.8,
    0,
    0,
    0,
    2.5,
    0,
    201.5,
    2.6,
    302,
    1991,
    93
   ],
   [
    4.9,
    2.6,
    7.2,
    0,
    0,
    0,
    4.5,
    0,
    358.1,
    3,
    303,
    1991,
    91
   ],
   [
    3.7,
    -1.7,
    5.8,
    0,
    0,
    0,
    2.9,
    0,
    426.3,
    0.1,
    304,
    1991,
    76
   ],
   [
    -1.2,
    -3.7,
    3.8,
    0,
    0,
    0,
    1,
    0,
    691.5,
    0,
    305,
    1991,
    89
   ],
   [
    0.2,
    -1.2,
    2.9,
    0,
    0,
    0,
    2.2,
    0,
    413.2,
    0,
    306,
    1991,
    91
   ],
   [
    3,
    -0.6,
    7.1,
    0,
    0,
    0,
    6.1,
    0,
    746.7,
    0.9,
    307,
    1991,
    73
   ],
   [
    7.2,
    4.2,
    9.6,
    0,
    0,
    0,
    6.3,
    0,
    351.6,
    2.4,
    308,
    1991,
    57
   ],
   [
    5.4,
    2.9,
    7.9,
    0,
    0,
    0,
    5.6,
    0,
    330.3,
    0.6,
    309,
    1991,
    57
   ],
   [
    7.7,
    5.2,
    10.9,
    0,
    0,
    0,
    4.4,
    0,
    187.9,
    1,
    310,
    1991,
    57
   ],
   [
    10.8,
    10.4,
    11.3,
    0,
    0,
    0,
    6.6,
    0,
    190,
    0,
    311,
    1991,
    57
   ],
   [
    10.8,
    6.8,
    12.4,
    0,
    0,
    0,
    7.4,
    0,
    116.5,
    1.8,
    312,
    1991,
    57
   ],
   [
    3.6,
    -1.8,
    6.1,
    0,
    0,
    0,
    3.1,
    0,
    631.9,
    0,
    313,
    1991,
    68
   ],
   [
    -1.6,
    -6.5,
    3.8,
    0,
    0,
    0,
    1.8,
    0,
    663.9,
    0,
    314,
    1991,
    79
   ],
   [
    4.5,
    0.4,
    7.2,
    0,
    0,
    0,
    4.8,
    0,
    181.6,
    0.6,
    315,
    1991,
    84
   ],
   [
    6.2,
    4.4,
    8.9,
    0,
    0,
    0,
    5,
    0,
    355.5,
    0.4,
    316,
    1991,
    87
   ],
   [
    5.2,
    3.6,
    9.3,
    0,
    0,
    0,
    6.1,
    0,
    145,
    3,
    317,
    1991,
    87
   ],
   [
    3,
    1.7,
    4.6,
    0,
    0,
    0,
    5.8,
    0,
    56,
    1,
    318,
    1991,
    96
   ],
   [
    2,
    0.5,
    3.9,
    0,
    0,
    0,
    1.4,
    0,
    137,
    1,
    319,
    1991,
    99
   ],
   [
    1.2,
    -0.6,
    2.4,
    0,
    0,
    0,
    3.1,
    0,
    56,
    1,
    320,
    1991,
    100
   ],
   [
    4.1,
    0.6,
    6.3,
    0,
    0,
    0,
    4.7,
    0,
    56,
    2,
    321,
    1991,
    100
   ],
   [
    5.9,
    3.5,
    8.4,
    0,
    0,
    0,
    3.8,
    0,
    240.2,
    0,
    322,
    1991,
    80
   ],
   [
    3.8,
    2.6,
    5,
    0,
    0,
    0,
    5.4,
    0,
    160.6,
    4.3,
    323,
    1991,
    89
   ],
   [
    4.1,
    2.5,
    5.7,
    0,
    0,
    0,
    7.5,
    0,
    251.5,
    1.9,
    324,
    1991,
    88
   ],
   [
    4.3,
    2.8,
    5.4,
    0,
    0,
    0,
    9.2,
    0,
    265.1,
    0.2,
    325,
    1991,
    77
   ],
   [
    3.3,
    1.4,
    5.2,
    0,
    0,
    0,
    6.4,
    0,
    350.6,
    1.8,
    326,
    1991,
    87
   ],
   [
    1.6,
    -0.6,
    4.5,
    0,
    0,
    0,
    1.9,
    0,
    285.9,
    0,
    327,
    1991,
    95
   ],
   [
    0.7,
    -1.4,
    2.5,
    0,
    0,
    0,
    1.5,
    0,
    122.2,
    0.7,
    328,
    1991,
    97
   ],
   [
    5.6,
    2.6,
    7.2,
    0,
    0,
    0,
    2.4,
    0,
    189.7,
    0.6,
    329,
    1991,
    96
   ],
   [
    7,
    5.6,
    8.9,
    0,
    0,
    0,
    4.8,
    0,
    150.5,
    1.8,
    330,
    1991,
    90
   ],
   [
    7.3,
    5.8,
    10.6,
    0,
    0,
    0,
    7.6,
    0,
    51.8,
    4,
    331,
    1991,
    88
   ],
   [
    3.9,
    2.3,
    6.6,
    0,
    0,
    0,
    4.2,
    0,
    249,
    2,
    332,
    1991,
    94
   ],
   [
    3.9,
    1.7,
    6.6,
    0,
    0,
    0,
    7.2,
    0,
    40,
    2,
    333,
    1991,
    99
   ],
   [
    2,
    1.1,
    3.6,
    0,
    0,
    0,
    5.8,
    0,
    40,
    0,
    334,
    1991,
    100
   ],
   [
    3.8,
    -0.1,
    5,
    0,
    0,
    0,
    7.2,
    0,
    83,
    0,
    335,
    1991,
    92
   ],
   [
    6.4,
    4.6,
    10.1,
    0,
    0,
    0,
    5.5,
    0,
    185.4,
    0,
    336,
    1991,
    89
   ],
   [
    4.9,
    2.7,
    7.4,
    0,
    0,
    0,
    6.5,
    0,
    342.2,
    3.9,
    337,
    1991,
    88
   ],
   [
    6.7,
    3.4,
    10,
    0,
    0,
    0,
    5.6,
    0,
    298.8,
    1.5,
    338,
    1991,
    81
   ],
   [
    4.9,
    1.8,
    6.3,
    0,
    0,
    0,
    5.3,
    0,
    305.3,
    3.1,
    339,
    1991,
    84
   ],
   [
    2.5,
    0.2,
    4.7,
    0,
    0,
    0,
    3.9,
    0,
    221.5,
    0,
    340,
    1991,
    90
   ],
   [
    1.6,
    0.3,
    3.1,
    0,
    0,
    0,
    2.4,
    0,
    222.5,
    0,
    341,
    1991,
    94
   ],
   [
    0.8,
    0.3,
    1.6,
    0,
    0,
    0,
    4.7,
    0,
    214.6,
    0,
    342,
    1991,
    92
   ],
   [
    1.7,
    0.5,
    2.9,
    0,
    0,
    0,
    2.3,
    0,
    109.7,
    0,
    343,
    1991,
    96
   ],
   [
    2.4,
    1.7,
    3.5,
    0,
    0,
    0,
    2.3,
    0,
    102.5,
    0,
    344,
    1991,
    94
   ],
   [
    2.8,
    2.3,
    3.3,
    0,
    0,
    0,
    1.6,
    0,
    96.6,
    0,
    345,
    1991,
    95
   ],
   [
    2.3,
    0.5,
    3.3,
    0,
    0,
    0,
    4,
    0,
    122.6,
    2.7,
    346,
    1991,
    93
   ],
   [
    3.3,
    0.2,
    4.8,
    0,
    0,
    0,
    6.4,
    0,
    195.8,
    5.1,
    347,
    1991,
    92
   ],
   [
    2.8,
    1.5,
    4.1,
    0,
    0,
    0,
    6,
    0,
    203.2,
    0,
    348,
    1991,
    87
   ],
   [
    6.3,
    2.7,
    8.5,
    0,
    0,
    0,
    6.1,
    0,
    116.1,
    2.2,
    349,
    1991,
    91
   ],
   [
    5.4,
    0.4,
    7.6,
    0,
    0,
    0,
    2.8,
    0,
    296.3,
    0,
    350,
    1991,
    88
   ],
   [
    0,
    -2.4,
    3.6,
    0,
    0,
    0,
    1.1,
    0,
    384.2,
    0,
    351,
    1991,
    94
   ],
   [
    -0.8,
    -3.9,
    2.5,
    0,
    0,
    0,
    0.5,
    0,
    344.9,
    0,
    352,
    1991,
    94
   ],
   [
    -1.5,
    -3.8,
    0,
    0,
    0,
    0,
    2.7,
    0,
    289.2,
    0,
    353,
    1991,
    95
   ],
   [
    1.8,
    -1.5,
    3,
    0,
    0,
    0,
    5.4,
    0,
    120.2,
    1.3,
    354,
    1991,
    85
   ],
   [
    1.8,
    0.3,
    2.5,
    0,
    0,
    0,
    1.9,
    0,
    89.5,
    7.3,
    355,
    1991,
    93
   ],
   [
    -0.2,
    -2.4,
    1.3,
    0,
    0,
    0,
    1.4,
    0,
    156.6,
    0,
    356,
    1991,
    93
   ],
   [
    -3.2,
    -3.8,
    -2.7,
    0,
    0,
    0,
    2.3,
    0,
    186.1,
    0,
    357,
    1991,
    91
   ],
   [
    -4.8,
    -7.8,
    -2.2,
    0,
    0,
    0,
    4.9,
    0,
    400.3,
    0,
    358,
    1991,
    83
   ],
   [
    -8.2,
    -9.6,
    -6.2,
    0,
    0,
    0,
    3.2,
    0,
    319.8,
    0,
    359,
    1991,
    88
   ],
   [
    -9.8,
    -11.3,
    -7.7,
    0,
    0,
    0,
    2.5,
    0,
    278.5,
    0,
    360,
    1991,
    89
   ],
   [
    -9,
    -12.1,
    -4.7,
    0,
    0,
    0,
    0.7,
    0,
    296,
    0,
    361,
    1991,
    88
   ],
   [
    -2.3,
    -4.5,
    0.9,
    0,
    0,
    0,
    1.5,
    0,
    338.4,
    0,
    362,
    1991,
    90
   ],
   [
    -6,
    -8.5,
    -2.4,
    0,
    0,
    0,
    2.2,
    0,
    363.3,
    0,
    363,
    1991,
    92
   ],
   [
    -4.1,
    -5.3,
    -3,
    0,
    0,
    0,
    4.3,
    0,
    103.9,
    0,
    364,
    1991,
    92
   ],
   [
    -1.6,
    -2.8,
    -0.6,
    0,
    0,
    0,
    2.3,
    0,
    133,
    0,
    365,
    1991,
    92
   ],
   [
    -0.6,
    -1.5,
    1,
    0,
    0,
    0,
    6.7,
    0,
    52,
    0,
    1,
    1992,
    90
   ],
   [
    2.8,
    0,
    6,
    0,
    0,
    0,
    12.8,
    0,
    52,
    0,
    2,
    1992,
    85
   ],
   [
    7,
    6,
    8,
    0,
    0,
    0,
    11.4,
    0,
    163,
    0,
    3,
    1992,
    77
   ],
   [
    5.7,
    4,
    8,
    0,
    0,
    0,
    8.6,
    0,
    52,
    0,
    4,
    1992,
    70
   ],
   [
    5.6,
    4,
    7,
    0,
    0,
    0,
    7.8,
    0,
    52,
    1,
    5,
    1992,
    76
   ],
   [
    4,
    3.5,
    5,
    0,
    0,
    0,
    1.1,
    0,
    52,
    1,
    6,
    1992,
    85
   ],
   [
    4.7,
    3,
    8,
    0,
    0,
    0,
    7.2,
    0,
    69,
    0,
    7,
    1992,
    79
   ],
   [
    3.9,
    0.2,
    7,
    0,
    0,
    0,
    3.1,
    0,
    75,
    1,
    8,
    1992,
    67
   ],
   [
    5.7,
    2.5,
    9,
    0,
    0,
    0,
    6.1,
    0,
    52,
    1,
    9,
    1992,
    71
   ],
   [
    -0.1,
    -3.5,
    2,
    0,
    0,
    0,
    4.2,
    0,
    479,
    0,
    10,
    1992,
    71
   ],
   [
    -3.2,
    -7,
    1,
    0,
    0,
    0,
    0,
    0,
    377,
    0,
    11,
    1992,
    74
   ],
   [
    1,
    -3,
    3.5,
    0,
    0,
    0,
    7.8,
    0,
    194,
    0,
    12,
    1992,
    77
   ],
   [
    -1,
    -1.5,
    0,
    0,
    0,
    0,
    2.5,
    0,
    72,
    1,
    13,
    1992,
    79
   ],
   [
    3.6,
    0,
    6,
    0,
    0,
    0,
    8.3,
    0,
    72,
    0,
    14,
    1992,
    78
   ],
   [
    5.7,
    5,
    6,
    0,
    0,
    0,
    8.6,
    0,
    72,
    0,
    15,
    1992,
    70
   ],
   [
    4.6,
    3,
    6,
    0,
    0,
    0,
    8.3,
    0,
    72,
    1,
    16,
    1992,
    69
   ],
   [
    2.8,
    -1,
    4,
    0,
    0,
    0,
    7.8,
    0,
    536,
    0,
    17,
    1992,
    59
   ],
   [
    2.8,
    -1,
    6,
    0,
    0,
    0,
    6.1,
    0,
    72,
    3,
    18,
    1992,
    76
   ],
   [
    4.4,
    0,
    6,
    0,
    0,
    0,
    6.1,
    0,
    72,
    12,
    19,
    1992,
    78
   ],
   [
    -0.4,
    -5,
    4.5,
    0,
    0,
    0,
    7.8,
    0,
    103,
    0,
    20,
    1992,
    81
   ],
   [
    -6.2,
    -9,
    -3,
    0,
    0,
    0,
    0,
    0,
    260,
    0,
    21,
    1992,
    73
   ],
   [
    -7.5,
    -10.5,
    -4,
    0,
    0,
    0,
    2.2,
    0,
    579,
    0,
    22,
    1992,
    71
   ],
   [
    -8.2,
    -13,
    -4,
    0,
    0,
    0,
    3.6,
    0,
    368,
    0,
    23,
    1992,
    68
   ],
   [
    -6.9,
    -9,
    -4,
    0,
    0,
    0,
    2.2,
    0,
    354,
    0,
    24,
    1992,
    70
   ],
   [
    -7.5,
    -9,
    -6.5,
    0,
    0,
    0,
    0,
    0,
    79,
    0,
    25,
    1992,
    79
   ],
   [
    -4.3,
    -7,
    -2,
    0,
    0,
    0,
    1.1,
    0,
    79,
    0,
    26,
    1992,
    79
   ],
   [
    0,
    -1.5,
    1,
    0,
    0,
    0,
    1.4,
    0,
    79,
    0,
    27,
    1992,
    80
   ],
   [
    -1.2,
    -2.5,
    0,
    0,
    0,
    0,
    2.5,
    0,
    79,
    0,
    28,
    1992,
    79
   ],
   [
    -0.3,
    -1,
    0.5,
    0,
    0,
    0,
    2.2,
    0,
    79,
    0,
    29,
    1992,
    79
   ],
   [
    -0.1,
    -1.5,
    1,
    0,
    0,
    0,
    1.1,
    0,
    224,
    0,
    30,
    1992,
    77
   ],
   [
    -2.1,
    -2.5,
    -1.5,
    0,
    0,
    0,
    1.1,
    0,
    79,
    0,
    31,
    1992,
    78
   ],
   [
    -1.5,
    -2,
    -1,
    0,
    0,
    0,
    2.5,
    0,
    86,
    0,
    32,
    1992,
    78
   ],
   [
    -1.3,
    -2,
    -0.5,
    0,
    0,
    0,
    5,
    0,
    86,
    1,
    33,
    1992,
    78
   ],
   [
    1.2,
    -1,
    4,
    0,
    0,
    0,
    6.7,
    0,
    178,
    6,
    34,
    1992,
    74
   ],
   [
    1.9,
    0,
    3,
    0,
    0,
    0,
    9.2,
    0,
    514,
    0,
    35,
    1992,
    68
   ],
   [
    1.3,
    0,
    2.5,
    0,
    0,
    0,
    8.6,
    0,
    86,
    1,
    36,
    1992,
    75
   ],
   [
    2.1,
    -1,
    6,
    0,
    0,
    0,
    1.4,
    0,
    86,
    1,
    37,
    1992,
    78
   ],
   [
    6.3,
    6,
    7.5,
    0,
    0,
    0,
    8.6,
    0,
    254,
    0,
    38,
    1992,
    70
   ],
   [
    3.7,
    0,
    6,
    0,
    0,
    0,
    4.2,
    0,
    86,
    0,
    39,
    1992,
    72
   ],
   [
    1.9,
    -2,
    8,
    0,
    0,
    0,
    3.6,
    0,
    397,
    0,
    40,
    1992,
    77
   ],
   [
    3.4,
    1,
    6.5,
    0,
    0,
    0,
    3.1,
    0,
    271,
    1,
    41,
    1992,
    75
   ],
   [
    2.5,
    1,
    4,
    0,
    0,
    0,
    4.7,
    0,
    92,
    4,
    42,
    1992,
    79
   ],
   [
    4.4,
    3,
    6,
    0,
    0,
    0,
    1.1,
    0,
    168,
    0,
    43,
    1992,
    77
   ],
   [
    6.6,
    4.5,
    9,
    0,
    0,
    0,
    3.6,
    0,
    92,
    2,
    44,
    1992,
    76
   ],
   [
    2.8,
    1,
    5,
    0,
    0,
    0,
    5.8,
    0,
    340,
    3,
    45,
    1992,
    75
   ],
   [
    4,
    1,
    7,
    0,
    0,
    0,
    6.1,
    0,
    92,
    1,
    46,
    1992,
    73
   ],
   [
    1.4,
    -1,
    3.5,
    0,
    0,
    0,
    9.2,
    0,
    140,
    2,
    47,
    1992,
    70
   ],
   [
    -1.8,
    -4.5,
    0,
    0,
    0,
    0,
    4.7,
    0,
    474,
    1,
    48,
    1992,
    73
   ],
   [
    -3.1,
    -6,
    -1,
    0,
    0,
    0,
    3.1,
    0,
    531,
    0,
    49,
    1992,
    69
   ],
   [
    -0.7,
    -3,
    0.5,
    0,
    0,
    0,
    5.8,
    0,
    92,
    1,
    50,
    1992,
    72
   ],
   [
    -1.2,
    -4,
    1.5,
    0,
    0,
    0,
    3.6,
    0,
    216,
    0,
    51,
    1992,
    78
   ],
   [
    1.3,
    0,
    2.5,
    0,
    0,
    0,
    6.1,
    0,
    164,
    0,
    52,
    1992,
    80
   ],
   [
    3.1,
    1,
    4.5,
    0,
    0,
    0,
    4.7,
    0,
    245,
    2,
    53,
    1992,
    72
   ],
   [
    4.8,
    2.5,
    8,
    0,
    0,
    0,
    10.8,
    0,
    350,
    0,
    54,
    1992,
    70
   ],
   [
    3.5,
    1.5,
    6.5,
    0,
    0,
    0,
    4.7,
    0,
    734,
    0,
    55,
    1992,
    72
   ],
   [
    3.7,
    1,
    7,
    0,
    0,
    0,
    0,
    0,
    164,
    0,
    56,
    1992,
    74
   ],
   [
    2.5,
    -2,
    7.5,
    0,
    0,
    0,
    1.4,
    0,
    397,
    0,
    57,
    1992,
    73
   ],
   [
    4.3,
    1,
    9,
    0,
    0,
    0,
    3.1,
    0,
    664,
    0,
    58,
    1992,
    74
   ],
   [
    1.1,
    -4,
    6,
    0,
    0,
    0,
    1.1,
    0,
    699,
    0,
    59,
    1992,
    79
   ],
   [
    6.8,
    3,
    12,
    0,
    0,
    0,
    4.2,
    0,
    408,
    0,
    60,
    1992,
    68
   ],
   [
    8,
    4,
    14,
    0,
    0,
    0,
    3.1,
    0,
    1375,
    0,
    61,
    1992,
    68
   ],
   [
    6.9,
    5,
    13,
    0,
    0,
    0,
    3.1,
    0,
    812,
    1,
    62,
    1992,
    61
   ],
   [
    5.5,
    4,
    7,
    0,
    0,
    0,
    11.7,
    0,
    290,
    0,
    63,
    1992,
    70
   ],
   [
    6.9,
    4,
    11,
    0,
    0,
    0,
    5,
    0,
    1265,
    0,
    64,
    1992,
    61
   ],
   [
    7.5,
    4,
    13,
    0,
    0,
    0,
    1.4,
    0,
    2185,
    0,
    65,
    1992,
    68
   ],
   [
    5,
    1.5,
    10,
    0,
    0,
    0,
    3.6,
    0,
    345,
    1,
    66,
    1992,
    72
   ],
   [
    6,
    5.5,
    7,
    0,
    0,
    0,
    3.1,
    0,
    235,
    0,
    67,
    1992,
    77
   ],
   [
    5.7,
    0,
    11,
    0,
    0,
    0,
    3.1,
    0,
    1279,
    0,
    68,
    1992,
    57
   ],
   [
    4.5,
    -0.5,
    11.5,
    0,
    0,
    0,
    4.2,
    0,
    1320,
    0,
    69,
    1992,
    55
   ],
   [
    4.7,
    -2.5,
    12.5,
    0,
    0,
    0,
    2.2,
    0,
    1348,
    0,
    70,
    1992,
    53
   ],
   [
    4,
    1,
    6.5,
    0,
    0,
    0,
    5.8,
    0,
    766,
    2,
    71,
    1992,
    65
   ],
   [
    3.1,
    -0.5,
    6,
    0,
    0,
    0,
    5.8,
    0,
    323,
    14,
    72,
    1992,
    75
   ],
   [
    2.8,
    0,
    6,
    0,
    0,
    0,
    7.8,
    0,
    323,
    3,
    73,
    1992,
    74
   ],
   [
    1.1,
    -0.5,
    3,
    0,
    0,
    0,
    9.7,
    0,
    1494,
    1,
    74,
    1992,
    50
   ],
   [
    0.4,
    -2.5,
    2,
    0,
    0,
    0,
    2.5,
    0,
    703,
    2,
    75,
    1992,
    71
   ],
   [
    2.5,
    -1,
    6,
    0,
    0,
    0,
    7.2,
    0,
    1352,
    0,
    76,
    1992,
    55
   ],
   [
    2.3,
    -2,
    5,
    0,
    0,
    0,
    2.5,
    0,
    434,
    0,
    77,
    1992,
    70
   ],
   [
    6.8,
    3.5,
    11,
    0,
    0,
    0,
    3.1,
    0,
    1067,
    0,
    78,
    1992,
    71
   ],
   [
    4.7,
    -1,
    11.5,
    0,
    0,
    0,
    4.7,
    0,
    1020,
    1,
    79,
    1992,
    71
   ],
   [
    6.1,
    4,
    8,
    0,
    0,
    0,
    3.1,
    0,
    307,
    12,
    80,
    1992,
    74
   ],
   [
    8.3,
    4.5,
    11,
    0,
    0,
    0,
    2.5,
    0,
    396,
    6,
    81,
    1992,
    75
   ],
   [
    5.5,
    4,
    8,
    0,
    0,
    0,
    8.6,
    0,
    694,
    5,
    82,
    1992,
    66
   ],
   [
    3.7,
    0.1,
    7.3,
    0,
    0,
    0,
    0.9,
    0,
    94.1,
    1,
    83,
    1992,
    86
   ],
   [
    2.7,
    -1.5,
    6.2,
    0,
    0,
    0,
    3.3,
    0,
    698.2,
    0,
    84,
    1992,
    90
   ],
   [
    2.1,
    0.3,
    2.8,
    0,
    0,
    0,
    4.1,
    0,
    165.7,
    6.3,
    85,
    1992,
    95
   ],
   [
    3.5,
    1.1,
    6.7,
    0,
    0,
    0,
    3.2,
    0,
    750,
    0.2,
    86,
    1992,
    84
   ],
   [
    2.5,
    1.5,
    4.5,
    0,
    0,
    0,
    2.8,
    0,
    619.5,
    1.4,
    87,
    1992,
    92
   ],
   [
    1.9,
    0.5,
    3.7,
    0,
    0,
    0,
    4.9,
    0,
    776,
    3.2,
    88,
    1992,
    92
   ],
   [
    1.5,
    -0.6,
    4.1,
    0,
    0,
    0,
    3.7,
    0,
    897.1,
    0.7,
    89,
    1992,
    89
   ],
   [
    1.2,
    -3.2,
    5,
    0,
    0,
    0,
    2.9,
    0,
    1185.7,
    0,
    90,
    1992,
    85
   ],
   [
    5.6,
    -0.3,
    12.4,
    0,
    0,
    0,
    5.7,
    0,
    1745.9,
    0,
    91,
    1992,
    76
   ],
   [
    7.4,
    2.4,
    14.9,
    0,
    0,
    0,
    5.5,
    0,
    1106.8,
    2.6,
    92,
    1992,
    83
   ],
   [
    7.2,
    2.8,
    12.9,
    0,
    0,
    0,
    4.5,
    0,
    1732.5,
    0,
    93,
    1992,
    75
   ],
   [
    5.9,
    0.6,
    10.3,
    0,
    0,
    0,
    3.4,
    0,
    1322.5,
    0,
    94,
    1992,
    84
   ],
   [
    5.3,
    1.6,
    8.5,
    0,
    0,
    0,
    4.2,
    0,
    1240.8,
    0,
    95,
    1992,
    79
   ],
   [
    3.7,
    -0.4,
    7.1,
    0,
    0,
    0,
    3,
    0,
    1172.5,
    0,
    96,
    1992,
    80
   ],
   [
    4.1,
    -1.1,
    8.2,
    0,
    0,
    0,
    2.5,
    0,
    857.1,
    0.1,
    97,
    1992,
    84
   ],
   [
    6.7,
    2.1,
    11.1,
    0,
    0,
    0,
    1.8,
    0,
    1208.2,
    0,
    98,
    1992,
    75
   ],
   [
    7.2,
    3,
    12.3,
    0,
    0,
    0,
    1.4,
    0,
    1390.4,
    0,
    99,
    1992,
    70
   ],
   [
    5.8,
    -0.5,
    11.5,
    0,
    0,
    0,
    2.4,
    0,
    1894,
    0,
    100,
    1992,
    73
   ],
   [
    6.8,
    -1.5,
    13.2,
    0,
    0,
    0,
    0.9,
    0,
    1984.4,
    0,
    101,
    1992,
    68
   ],
   [
    10.2,
    4.4,
    15.6,
    0,
    0,
    0,
    2.7,
    0,
    1573.1,
    0,
    102,
    1992,
    68
   ],
   [
    11.5,
    6.8,
    16.6,
    0,
    0,
    0,
    3.4,
    0,
    1625.8,
    0,
    103,
    1992,
    71
   ],
   [
    8.5,
    7.3,
    10.1,
    0,
    0,
    0,
    4.3,
    0,
    85.3,
    2.1,
    104,
    1992,
    87
   ],
   [
    7.3,
    5,
    10,
    0,
    0,
    0,
    5.5,
    0,
    781.3,
    0.1,
    105,
    1992,
    82
   ],
   [
    7.6,
    2.4,
    14,
    0,
    0,
    0,
    3.7,
    0,
    926,
    1,
    106,
    1992,
    79
   ],
   [
    5.1,
    1.6,
    7.1,
    0,
    0,
    0,
    4.9,
    0,
    642.1,
    2.3,
    107,
    1992,
    86
   ],
   [
    2.7,
    -0.1,
    6,
    0,
    0,
    0,
    3.8,
    0,
    1391.3,
    2.1,
    108,
    1992,
    87
   ],
   [
    6.3,
    1.7,
    9.9,
    0,
    0,
    0,
    5.2,
    0,
    1161,
    1.7,
    109,
    1992,
    88
   ],
   [
    8.2,
    5.4,
    10,
    0,
    0,
    0,
    7.7,
    0,
    1512.8,
    1.9,
    110,
    1992,
    72
   ],
   [
    5.6,
    1.4,
    8.8,
    0,
    0,
    0,
    5.8,
    0,
    1868,
    0,
    111,
    1992,
    59
   ],
   [
    6.2,
    -1,
    11.3,
    0,
    0,
    0,
    3.1,
    0,
    2245.3,
    0,
    112,
    1992,
    61
   ],
   [
    8.2,
    2,
    12.8,
    0,
    0,
    0,
    4.1,
    0,
    1624.7,
    0,
    113,
    1992,
    59
   ],
   [
    6.5,
    3,
    9.4,
    0,
    0,
    0,
    2.3,
    0,
    938.8,
    0,
    114,
    1992,
    78
   ],
   [
    10.4,
    5.4,
    15.1,
    0,
    0,
    0,
    1.9,
    0,
    1198.2,
    0,
    115,
    1992,
    75
   ],
   [
    15.3,
    7.8,
    24.1,
    0,
    0,
    0,
    3.6,
    0,
    1880.3,
    1.7,
    116,
    1992,
    71
   ],
   [
    13.9,
    10.2,
    19,
    0,
    0,
    0,
    2,
    0,
    1285,
    2.8,
    117,
    1992,
    81
   ],
   [
    12.8,
    6.6,
    15.5,
    0,
    0,
    0,
    4.4,
    0,
    1421.3,
    0,
    118,
    1992,
    74
   ],
   [
    12.1,
    4.8,
    17,
    0,
    0,
    0,
    3.5,
    0,
    1388.5,
    0.1,
    119,
    1992,
    67
   ],
   [
    10.6,
    6.9,
    12.8,
    0,
    0,
    0,
    3.8,
    0,
    945.1,
    2.2,
    120,
    1992,
    86
   ],
   [
    9.6,
    2.8,
    14.8,
    0,
    0,
    0,
    2.3,
    0,
    1682.8,
    0,
    121,
    1992,
    70
   ],
   [
    12.4,
    6.1,
    17.1,
    0,
    0,
    0,
    4.9,
    0,
    1658.5,
    0.2,
    122,
    1992,
    68
   ],
   [
    8.2,
    5.7,
    10.2,
    0,
    0,
    0,
    2,
    0,
    774.4,
    3,
    123,
    1992,
    90
   ],
   [
    9.1,
    6,
    11.9,
    0,
    0,
    0,
    2.9,
    0,
    1568.6,
    0.1,
    124,
    1992,
    76
   ],
   [
    8.3,
    2.5,
    13,
    0,
    0,
    0,
    1.6,
    0,
    2597.4,
    0,
    125,
    1992,
    70
   ],
   [
    9.9,
    1.4,
    15.8,
    0,
    0,
    0,
    1.3,
    0,
    2576.3,
    0,
    126,
    1992,
    67
   ],
   [
    12.4,
    4.4,
    17.6,
    0,
    0,
    0,
    3.2,
    0,
    2162.5,
    0,
    127,
    1992,
    66
   ],
   [
    13.3,
    11.5,
    16.3,
    0,
    0,
    0,
    4.5,
    0,
    694,
    2.4,
    128,
    1992,
    87
   ],
   [
    10.5,
    5.1,
    17.1,
    0,
    0,
    0,
    5.3,
    0,
    478,
    2.7,
    129,
    1992,
    88
   ],
   [
    7.5,
    4.3,
    11.4,
    0,
    0,
    0,
    4.4,
    0,
    1322.1,
    2.4,
    130,
    1992,
    85
   ],
   [
    7.9,
    5.8,
    11,
    0,
    0,
    0,
    4.5,
    0,
    1266.1,
    3.1,
    131,
    1992,
    84
   ],
   [
    7,
    4.8,
    10,
    0,
    0,
    0,
    2.6,
    0,
    555.5,
    10.9,
    132,
    1992,
    95
   ],
   [
    9.8,
    3.3,
    14.6,
    0,
    0,
    0,
    4.4,
    0,
    1678.7,
    0.3,
    133,
    1992,
    80
   ],
   [
    15.6,
    12.2,
    20,
    0,
    0,
    0,
    4.1,
    0,
    1808.4,
    0,
    134,
    1992,
    78
   ],
   [
    16.6,
    11.1,
    22,
    0,
    0,
    0,
    2.7,
    0,
    2321.7,
    0,
    135,
    1992,
    76
   ],
   [
    17.9,
    11.2,
    24.4,
    0,
    0,
    0,
    3.7,
    0,
    2655.3,
    0,
    136,
    1992,
    64
   ],
   [
    15.2,
    8.9,
    24.3,
    0,
    0,
    0,
    2.1,
    0,
    2210.4,
    0,
    137,
    1992,
    68
   ],
   [
    12.2,
    7.7,
    17.1,
    0,
    0,
    0,
    3,
    0,
    2284.1,
    0,
    138,
    1992,
    77
   ],
   [
    12.3,
    4.4,
    18.3,
    0,
    0,
    0,
    2.5,
    0,
    2756.5,
    0,
    139,
    1992,
    67
   ],
   [
    14.6,
    6.9,
    21.4,
    0,
    0,
    0,
    2.4,
    0,
    2776.1,
    0,
    140,
    1992,
    71
   ],
   [
    17.4,
    9.1,
    24.3,
    0,
    0,
    0,
    2.2,
    0,
    2700.8,
    0,
    141,
    1992,
    65
   ],
   [
    19,
    10.4,
    25.8,
    0,
    0,
    0,
    1.8,
    0,
    2579.2,
    0,
    142,
    1992,
    65
   ],
   [
    20,
    13.1,
    26.4,
    0,
    0,
    0,
    2.3,
    0,
    2467.6,
    0,
    143,
    1992,
    66
   ],
   [
    19.6,
    12.6,
    26.7,
    0,
    0,
    0,
    4,
    0,
    2653.4,
    0,
    144,
    1992,
    64
   ],
   [
    17.4,
    10.5,
    23.8,
    0,
    0,
    0,
    4.7,
    0,
    2882.2,
    0,
    145,
    1992,
    57
   ],
   [
    16,
    9.3,
    22.2,
    0,
    0,
    0,
    4,
    0,
    2885.6,
    0,
    146,
    1992,
    52
   ],
   [
    15.9,
    8.3,
    21.7,
    0,
    0,
    0,
    3.4,
    0,
    2604.2,
    0,
    147,
    1992,
    60
   ],
   [
    17.5,
    12.2,
    24,
    0,
    0,
    0,
    2.8,
    0,
    2414.5,
    0,
    148,
    1992,
    72
   ],
   [
    15.3,
    9.2,
    20.7,
    0,
    0,
    0,
    2.8,
    0,
    2765,
    0,
    149,
    1992,
    66
   ],
   [
    16.5,
    10.6,
    22.1,
    0,
    0,
    0,
    3.2,
    0,
    2255.4,
    0,
    150,
    1992,
    67
   ],
   [
    17.3,
    8.2,
    24.1,
    0,
    0,
    0,
    1.9,
    0,
    2521.1,
    0,
    151,
    1992,
    66
   ],
   [
    17.9,
    10.4,
    24,
    0,
    0,
    0,
    2.1,
    0,
    2654.2,
    0,
    152,
    1992,
    65
   ],
   [
    19.6,
    10.8,
    26.4,
    0,
    0,
    0,
    3.5,
    0,
    2343.9,
    0,
    153,
    1992,
    61
   ],
   [
    21.9,
    13.5,
    28.5,
    0,
    0,
    0,
    5.1,
    0,
    2569.7,
    0,
    154,
    1992,
    57
   ],
   [
    20.9,
    15.4,
    27.9,
    0,
    0,
    0,
    3.7,
    0,
    1808.9,
    0,
    155,
    1992,
    69
   ],
   [
    22,
    14.2,
    29.2,
    0,
    0,
    0,
    4.3,
    0,
    2743.4,
    0,
    156,
    1992,
    59
   ],
   [
    21.5,
    12.9,
    28.3,
    0,
    0,
    0,
    3.6,
    0,
    2693.2,
    0,
    157,
    1992,
    58
   ],
   [
    19.2,
    14.8,
    25.3,
    0,
    0,
    0,
    3.4,
    0,
    2023.7,
    0.1,
    158,
    1992,
    67
   ],
   [
    18.7,
    12.7,
    23.3,
    0,
    0,
    0,
    4,
    0,
    2357.8,
    0,
    159,
    1992,
    53
   ],
   [
    18.8,
    14,
    23.9,
    0,
    0,
    0,
    3.6,
    0,
    2228.9,
    0,
    160,
    1992,
    61
   ],
   [
    18.4,
    12.5,
    24.7,
    0,
    0,
    0,
    2.6,
    0,
    1976.6,
    0.2,
    161,
    1992,
    66
   ],
   [
    13.2,
    9.8,
    19.5,
    0,
    0,
    0,
    2.9,
    0,
    1508.4,
    0.5,
    162,
    1992,
    80
   ],
   [
    12.9,
    10.1,
    15.6,
    0,
    0,
    0,
    1.9,
    0,
    923.6,
    3.7,
    163,
    1992,
    88
   ],
   [
    15.2,
    12,
    20.5,
    0,
    0,
    0,
    2.3,
    0,
    1318.6,
    7.5,
    164,
    1992,
    87
   ],
   [
    15.8,
    12,
    20.7,
    0,
    0,
    0,
    2.7,
    0,
    2219.2,
    0,
    165,
    1992,
    79
   ],
   [
    19.1,
    10.9,
    25.3,
    0,
    0,
    0,
    2.6,
    0,
    2704.9,
    0,
    166,
    1992,
    64
   ],
   [
    20.3,
    15.8,
    24.9,
    0,
    0,
    0,
    2,
    0,
    1706.9,
    0,
    167,
    1992,
    70
   ],
   [
    18.3,
    12.9,
    23.1,
    0,
    0,
    0,
    1.6,
    0,
    1344.6,
    0,
    168,
    1992,
    77
   ],
   [
    17.6,
    9.9,
    23.9,
    0,
    0,
    0,
    2,
    0,
    2839.6,
    0,
    169,
    1992,
    66
   ],
   [
    16.6,
    9.6,
    21.7,
    0,
    0,
    0,
    2.3,
    0,
    2466.2,
    0,
    170,
    1992,
    66
   ],
   [
    19.1,
    11.6,
    26,
    0,
    0,
    0,
    3.8,
    0,
    2703.7,
    0.5,
    171,
    1992,
    60
   ],
   [
    19.7,
    14.4,
    26,
    0,
    0,
    0,
    2.9,
    0,
    2145.7,
    0,
    172,
    1992,
    61
   ],
   [
    19.8,
    11.8,
    26.9,
    0,
    0,
    0,
    2.3,
    0,
    2690.9,
    0,
    173,
    1992,
    58
   ],
   [
    17,
    12.3,
    22,
    0,
    0,
    0,
    3.6,
    0,
    2797,
    0,
    174,
    1992,
    69
   ],
   [
    16.4,
    8.1,
    22.5,
    0,
    0,
    0,
    2,
    0,
    2568.7,
    0,
    175,
    1992,
    70
   ],
   [
    17.4,
    11.7,
    23.4,
    0,
    0,
    0,
    2.8,
    0,
    2811.3,
    0,
    176,
    1992,
    70
   ],
   [
    17.8,
    10.8,
    24.4,
    0,
    0,
    0,
    3,
    0,
    2801.6,
    0,
    177,
    1992,
    59
   ],
   [
    17.3,
    9.1,
    24,
    0,
    0,
    0,
    2.6,
    0,
    2954.2,
    0,
    178,
    1992,
    57
   ],
   [
    19,
    10,
    26.4,
    0,
    0,
    0,
    1.7,
    0,
    2909.1,
    0,
    179,
    1992,
    57
   ],
   [
    19,
    11.3,
    27.3,
    0,
    0,
    0,
    1.2,
    0,
    1551.1,
    0,
    180,
    1992,
    61
   ],
   [
    25.6,
    17.4,
    30,
    0,
    0,
    0,
    2,
    0,
    2749.3,
    10,
    181,
    1992,
    41
   ],
   [
    23.6,
    13.2,
    31.6,
    0,
    0,
    0,
    2.4,
    0,
    2611.3,
    0,
    182,
    1992,
    52
   ],
   [
    24.2,
    14.8,
    32.3,
    0,
    0,
    0,
    2,
    0,
    2632.3,
    0,
    183,
    1992,
    58
   ],
   [
    21.2,
    14.9,
    25.8,
    0,
    0,
    0,
    3.2,
    0,
    2149.9,
    0,
    184,
    1992,
    68
   ],
   [
    19,
    10.7,
    24.8,
    0,
    0,
    0,
    1.4,
    0,
    2431.4,
    0,
    185,
    1992,
    57
   ],
   [
    19.3,
    15.7,
    25.6,
    0,
    0,
    0,
    2.3,
    0,
    1551.2,
    8.5,
    186,
    1992,
    79
   ],
   [
    17.8,
    15.5,
    21.7,
    0,
    0,
    0,
    3.3,
    0,
    861.7,
    0.2,
    187,
    1992,
    72
   ],
   [
    14.1,
    12,
    15.6,
    0,
    0,
    0,
    3.7,
    0,
    538.1,
    2.3,
    188,
    1992,
    85
   ],
   [
    17.7,
    13,
    23,
    0,
    0,
    0,
    2.4,
    0,
    2346.1,
    0,
    189,
    1992,
    65
   ],
   [
    19.4,
    10.7,
    26.5,
    0,
    0,
    0,
    1.4,
    0,
    2788.5,
    0,
    190,
    1992,
    59
   ],
   [
    21.6,
    12.1,
    28.3,
    0,
    0,
    0,
    1.6,
    0,
    2403.2,
    0,
    191,
    1992,
    56
   ],
   [
    21.3,
    11.8,
    28.7,
    0,
    0,
    0,
    1.8,
    0,
    2359.6,
    0,
    192,
    1992,
    57
   ],
   [
    18.6,
    16,
    21.6,
    0,
    0,
    0,
    2.4,
    0,
    1301.5,
    0.5,
    193,
    1992,
    81
   ],
   [
    18.3,
    14.9,
    24.1,
    0,
    0,
    0,
    2.5,
    0,
    1516.3,
    0.8,
    194,
    1992,
    79
   ],
   [
    18.5,
    13.1,
    23.7,
    0,
    0,
    0,
    3.5,
    0,
    2217.4,
    0,
    195,
    1992,
    66
   ],
   [
    16.8,
    13.7,
    19.2,
    0,
    0,
    0,
    4.6,
    0,
    906.5,
    4.3,
    196,
    1992,
    87
   ],
   [
    15.8,
    11.1,
    19.5,
    0,
    0,
    0,
    4.1,
    0,
    1748.9,
    0,
    197,
    1992,
    67
   ],
   [
    15.2,
    8.5,
    20.4,
    0,
    0,
    0,
    2.7,
    0,
    2152.1,
    0,
    198,
    1992,
    68
   ],
   [
    19.8,
    9.7,
    26.8,
    0,
    0,
    0,
    2.1,
    0,
    1744.3,
    4,
    199,
    1992,
    66
   ],
   [
    18.5,
    13.8,
    22.5,
    0,
    0,
    0,
    4.2,
    0,
    1662.3,
    1,
    200,
    1992,
    81
   ],
   [
    14.5,
    13.5,
    17.1,
    0,
    0,
    0,
    2.1,
    0,
    268.3,
    0,
    201,
    1992,
    89
   ],
   [
    24.8,
    17.2,
    32.1,
    0,
    0,
    0,
    2,
    0,
    2420,
    0,
    202,
    1992,
    60
   ],
   [
    26.7,
    16.9,
    35.6,
    0,
    0,
    0,
    3,
    0,
    2410,
    4,
    203,
    1992,
    56
   ],
   [
    19.7,
    17,
    24.4,
    0,
    0,
    0,
    2,
    0,
    1300,
    0,
    204,
    1992,
    79
   ],
   [
    21.2,
    15.3,
    25.3,
    0,
    0,
    0,
    2.4,
    0,
    782.6,
    0,
    205,
    1992,
    56
   ],
   [
    20.3,
    11.4,
    27.6,
    0,
    0,
    0,
    2,
    0,
    2763.3,
    0,
    206,
    1992,
    59
   ],
   [
    20.9,
    12.6,
    29.5,
    0,
    0,
    0,
    3.2,
    0,
    2380.4,
    2.1,
    207,
    1992,
    65
   ],
   [
    19,
    13.9,
    24.6,
    0,
    0,
    0,
    3.2,
    0,
    1861.6,
    0,
    208,
    1992,
    74
   ],
   [
    21.3,
    14.3,
    29.8,
    0,
    0,
    0,
    3.9,
    0,
    1924,
    2.8,
    209,
    1992,
    65
   ],
   [
    16.1,
    11.4,
    21.1,
    0,
    0,
    0,
    5.8,
    0,
    1836.5,
    0,
    210,
    1992,
    66
   ],
   [
    17.1,
    9.9,
    23.1,
    0,
    0,
    0,
    2.6,
    0,
    2633.5,
    0,
    211,
    1992,
    66
   ],
   [
    21.8,
    10.5,
    31,
    0,
    0,
    0,
    2.8,
    0,
    2483,
    0,
    212,
    1992,
    57
   ],
   [
    20.9,
    14.7,
    26.8,
    0,
    0,
    0,
    2.1,
    0,
    1692.5,
    0,
    213,
    1992,
    64
   ],
   [
    21.4,
    13.9,
    28.3,
    0,
    0,
    0,
    2.3,
    0,
    2048.3,
    0,
    214,
    1992,
    69
   ],
   [
    21.5,
    16.2,
    26.5,
    0,
    0,
    0,
    2.9,
    0,
    1457.1,
    5.7,
    215,
    1992,
    77
   ],
   [
    23.6,
    13.7,
    32.2,
    0,
    0,
    0,
    3.4,
    0,
    2017.3,
    0,
    216,
    1992,
    66
   ],
   [
    19.9,
    13.1,
    23.6,
    0,
    0,
    0,
    4.1,
    0,
    1820.6,
    0,
    217,
    1992,
    65
   ],
   [
    19.8,
    10.5,
    27.1,
    0,
    0,
    0,
    3,
    0,
    2407.9,
    0,
    218,
    1992,
    59
   ],
   [
    22.8,
    13.4,
    31.6,
    0,
    0,
    0,
    2.7,
    0,
    2288.3,
    0,
    219,
    1992,
    55
   ],
   [
    20,
    13.5,
    26.7,
    0,
    0,
    0,
    3,
    0,
    2540,
    0,
    220,
    1992,
    55
   ],
   [
    22.8,
    13.7,
    33.8,
    0,
    0,
    0,
    1,
    0,
    2540,
    0,
    221,
    1992,
    63
   ],
   [
    29,
    15.3,
    37.6,
    0,
    0,
    0,
    4,
    0,
    2010,
    0,
    222,
    1992,
    50
   ],
   [
    26.5,
    22.3,
    35.5,
    0,
    0,
    0,
    7,
    0,
    2260,
    0,
    223,
    1992,
    50
   ],
   [
    20.4,
    14.4,
    23.8,
    0,
    0,
    0,
    4.3,
    0,
    1570.9,
    1.7,
    224,
    1992,
    63
   ],
   [
    19.5,
    13.8,
    25.6,
    0,
    0,
    0,
    3.7,
    0,
    1966.7,
    0.1,
    225,
    1992,
    63
   ],
   [
    16.9,
    15,
    19.8,
    0,
    0,
    0,
    5.1,
    0,
    1022.4,
    2.1,
    226,
    1992,
    75
   ],
   [
    14.9,
    13,
    16.9,
    0,
    0,
    0,
    4.8,
    0,
    618.8,
    10.9,
    227,
    1992,
    94
   ],
   [
    14.7,
    11.8,
    18.7,
    0,
    0,
    0,
    4.4,
    0,
    1386.8,
    0.1,
    228,
    1992,
    81
   ],
   [
    16.1,
    9.1,
    22,
    0,
    0,
    0,
    1.9,
    0,
    1980.8,
    0,
    229,
    1992,
    69
   ],
   [
    15.7,
    12.9,
    18.2,
    0,
    0,
    0,
    3.3,
    0,
    675.5,
    1.4,
    230,
    1992,
    84
   ],
   [
    16.4,
    11.5,
    20.7,
    0,
    0,
    0,
    3.5,
    0,
    1748.1,
    0,
    231,
    1992,
    72
   ],
   [
    18.3,
    14.2,
    22.4,
    0,
    0,
    0,
    2,
    0,
    1665.1,
    0,
    232,
    1992,
    69
   ],
   [
    20.4,
    14,
    26.7,
    0,
    0,
    0,
    2.9,
    0,
    1911.8,
    1.5,
    233,
    1992,
    66
   ],
   [
    19.4,
    14.9,
    22.8,
    0,
    0,
    0,
    4.5,
    0,
    1227.8,
    3.4,
    234,
    1992,
    76
   ],
   [
    16.8,
    11.2,
    22.8,
    0,
    0,
    0,
    3.4,
    0,
    2159,
    0,
    235,
    1992,
    74
   ],
   [
    15.3,
    10.7,
    22.6,
    0,
    0,
    0,
    2.7,
    0,
    1077.1,
    0.9,
    236,
    1992,
    87
   ],
   [
    16,
    9.3,
    21.1,
    0,
    0,
    0,
    3.6,
    0,
    1263.5,
    0,
    237,
    1992,
    72
   ],
   [
    18.1,
    15,
    22.7,
    0,
    0,
    0,
    4.2,
    0,
    740.5,
    1.4,
    238,
    1992,
    87
   ],
   [
    19.2,
    14.4,
    24.8,
    0,
    0,
    0,
    2.8,
    0,
    1346.8,
    23.1,
    239,
    1992,
    88
   ],
   [
    18.9,
    16.3,
    22.5,
    0,
    0,
    0,
    3.8,
    0,
    1094.5,
    0.6,
    240,
    1992,
    85
   ],
   [
    24.1,
    18.2,
    31.5,
    0,
    0,
    0,
    3.5,
    0,
    1889.8,
    0.1,
    241,
    1992,
    66
   ],
   [
    21.6,
    16.1,
    30.3,
    0,
    0,
    0,
    3.3,
    0,
    1713.7,
    0.5,
    242,
    1992,
    78
   ],
   [
    15.8,
    14.1,
    18.2,
    0,
    0,
    0,
    2,
    0,
    649,
    0.1,
    243,
    1992,
    92
   ],
   [
    16.5,
    13.1,
    20.7,
    0,
    0,
    0,
    3.2,
    0,
    844.3,
    14.8,
    244,
    1992,
    83
   ],
   [
    12.1,
    10,
    13.2,
    0,
    0,
    0,
    5.1,
    0,
    669.7,
    8,
    245,
    1992,
    89
   ],
   [
    13.2,
    8.1,
    16.4,
    0,
    0,
    0,
    5.4,
    0,
    1420.7,
    0,
    246,
    1992,
    73
   ],
   [
    15.5,
    12.8,
    18.9,
    0,
    0,
    0,
    5.5,
    0,
    933.5,
    5.1,
    247,
    1992,
    82
   ],
   [
    12,
    9.1,
    15.1,
    0,
    0,
    0,
    4.3,
    0,
    1196,
    1.5,
    248,
    1992,
    87
   ],
   [
    10.8,
    8.3,
    12.9,
    0,
    0,
    0,
    4.5,
    0,
    981,
    4.5,
    249,
    1992,
    91
   ],
   [
    11.5,
    8.2,
    15,
    0,
    0,
    0,
    4.9,
    0,
    1422,
    0,
    250,
    1992,
    76
   ],
   [
    12.3,
    5.8,
    17.8,
    0,
    0,
    0,
    3.5,
    0,
    1794.1,
    0.8,
    251,
    1992,
    76
   ],
   [
    13.3,
    10.2,
    15.9,
    0,
    0,
    0,
    3.4,
    0,
    951.2,
    1.2,
    252,
    1992,
    79
   ],
   [
    12.5,
    8.7,
    17.2,
    0,
    0,
    0,
    2.9,
    0,
    1598.5,
    0,
    253,
    1992,
    75
   ],
   [
    12.8,
    5.5,
    19.6,
    0,
    0,
    0,
    2,
    0,
    1740.5,
    0,
    254,
    1992,
    73
   ],
   [
    14.9,
    9,
    22.4,
    0,
    0,
    0,
    2.7,
    0,
    1289.7,
    0,
    255,
    1992,
    75
   ],
   [
    14,
    9.6,
    18.6,
    0,
    0,
    0,
    2.1,
    0,
    953.5,
    0,
    256,
    1992,
    83
   ],
   [
    12.4,
    5.8,
    18.1,
    0,
    0,
    0,
    1.5,
    0,
    1433.4,
    0,
    257,
    1992,
    79
   ],
   [
    13.7,
    10.8,
    17.5,
    0,
    0,
    0,
    3.5,
    0,
    755.9,
    0,
    258,
    1992,
    84
   ],
   [
    13.5,
    9.2,
    17.4,
    0,
    0,
    0,
    4.4,
    0,
    988.2,
    0,
    259,
    1992,
    79
   ],
   [
    14.9,
    12.6,
    17.2,
    0,
    0,
    0,
    5.7,
    0,
    603.1,
    0,
    260,
    1992,
    77
   ],
   [
    12.7,
    7.7,
    17.3,
    0,
    0,
    0,
    2.3,
    0,
    1648.4,
    0,
    261,
    1992,
    68
   ],
   [
    10.9,
    3.9,
    18.5,
    0,
    0,
    0,
    1.5,
    0,
    1638.8,
    0,
    262,
    1992,
    75
   ],
   [
    11.4,
    5.1,
    17.9,
    0,
    0,
    0,
    2.7,
    0,
    1565.4,
    0,
    263,
    1992,
    74
   ],
   [
    11.4,
    5.7,
    17,
    0,
    0,
    0,
    1.8,
    0,
    719.7,
    0.2,
    264,
    1992,
    83
   ],
   [
    13.1,
    6.9,
    19.8,
    0,
    0,
    0,
    2.2,
    0,
    1413.8,
    0,
    265,
    1992,
    77
   ],
   [
    15.1,
    9.1,
    21.8,
    0,
    0,
    0,
    5.3,
    0,
    1376.5,
    0,
    266,
    1992,
    68
   ],
   [
    15.8,
    9.8,
    22.6,
    0,
    0,
    0,
    3.3,
    0,
    1295.2,
    0,
    267,
    1992,
    71
   ],
   [
    14.6,
    12.1,
    16.6,
    0,
    0,
    0,
    1.4,
    0,
    480.1,
    0.4,
    268,
    1992,
    90
   ],
   [
    14.2,
    12.1,
    17.3,
    0,
    0,
    0,
    0.6,
    0,
    591.1,
    0.3,
    269,
    1992,
    90
   ],
   [
    14.1,
    8,
    22.2,
    0,
    0,
    0,
    0.9,
    0,
    1302.4,
    0.2,
    270,
    1992,
    76
   ],
   [
    14.3,
    7.5,
    22.4,
    0,
    0,
    0,
    0.7,
    0,
    1343.3,
    0,
    271,
    1992,
    75
   ],
   [
    13.2,
    7.8,
    21.1,
    0,
    0,
    0,
    1.7,
    0,
    1234.9,
    0,
    272,
    1992,
    81
   ],
   [
    11.1,
    7.1,
    15.7,
    0,
    0,
    0,
    2.5,
    0,
    1324.4,
    0,
    273,
    1992,
    77
   ],
   [
    11.1,
    9.5,
    14,
    0,
    0,
    0,
    0.7,
    0,
    568.4,
    0,
    274,
    1992,
    81
   ],
   [
    8.8,
    2.8,
    16.3,
    0,
    0,
    0,
    0,
    0,
    760,
    0,
    275,
    1992,
    88
   ],
   [
    8.7,
    3,
    16.4,
    0,
    0,
    0,
    2.2,
    0,
    940,
    0,
    276,
    1992,
    82
   ],
   [
    10.8,
    3.9,
    16.8,
    0,
    0,
    0,
    3.6,
    0,
    750,
    0,
    277,
    1992,
    77
   ],
   [
    9.3,
    5.1,
    15.5,
    0,
    0,
    0,
    9.2,
    0,
    1100,
    0,
    278,
    1992,
    70
   ],
   [
    9,
    4.6,
    10.7,
    0,
    0,
    0,
    7.2,
    0,
    1280,
    3,
    279,
    1992,
    83
   ],
   [
    11.3,
    9.8,
    12.3,
    0,
    0,
    0,
    5,
    0,
    340,
    1,
    280,
    1992,
    99
   ],
   [
    8.8,
    5.9,
    13.3,
    0,
    0,
    0,
    3.6,
    0,
    340,
    0,
    281,
    1992,
    95
   ],
   [
    9.4,
    2.9,
    11.3,
    0,
    0,
    0,
    6.7,
    0,
    330,
    0,
    282,
    1992,
    93
   ],
   [
    8,
    4.7,
    13.7,
    0,
    0,
    0,
    1.4,
    0,
    320,
    1,
    283,
    1992,
    96
   ],
   [
    4.9,
    1.7,
    12.6,
    0,
    0,
    0,
    4.7,
    0,
    500,
    0,
    284,
    1992,
    88
   ],
   [
    6,
    1.8,
    11.4,
    0,
    0,
    0,
    4.2,
    0,
    1000,
    0,
    285,
    1992,
    95
   ],
   [
    4.1,
    -1.9,
    8,
    0,
    0,
    0,
    2.5,
    0,
    794.3,
    0,
    286,
    1992,
    61
   ],
   [
    1.9,
    -3.1,
    8.6,
    0,
    0,
    0,
    1.8,
    0,
    1119.7,
    0,
    287,
    1992,
    62
   ],
   [
    0.6,
    -3.2,
    8.1,
    0,
    0,
    0,
    2.3,
    0,
    556.4,
    0,
    288,
    1992,
    61
   ],
   [
    5.7,
    4.1,
    8.8,
    0,
    0,
    0,
    5,
    0,
    290,
    0,
    289,
    1992,
    92
   ],
   [
    4.7,
    2.1,
    7.1,
    0,
    0,
    0,
    4.2,
    0,
    100.2,
    0,
    290,
    1992,
    80
   ],
   [
    2.9,
    0.1,
    7.2,
    0,
    0,
    0,
    3.5,
    0,
    698.1,
    0,
    291,
    1992,
    85
   ],
   [
    2.9,
    -1.9,
    8.9,
    0,
    0,
    0,
    2.1,
    0,
    850.1,
    0,
    292,
    1992,
    84
   ],
   [
    5,
    -0.2,
    11.9,
    0,
    0,
    0,
    3.7,
    0,
    869.3,
    0,
    293,
    1992,
    79
   ],
   [
    4.2,
    -0.3,
    10.7,
    0,
    0,
    0,
    1.7,
    0,
    926.4,
    0,
    294,
    1992,
    80
   ],
   [
    4.4,
    -2,
    12.2,
    0,
    0,
    0,
    2.6,
    0,
    713.9,
    0,
    295,
    1992,
    84
   ],
   [
    4,
    1.2,
    6,
    0,
    0,
    0,
    5.1,
    0,
    376.1,
    0.6,
    296,
    1992,
    88
   ],
   [
    3.5,
    -0.4,
    6.5,
    0,
    0,
    0,
    3.4,
    0,
    731.9,
    1.2,
    297,
    1992,
    81
   ],
   [
    5.1,
    3.2,
    6.3,
    0,
    0,
    0,
    4.2,
    0,
    383.1,
    2.1,
    298,
    1992,
    91
   ],
   [
    4.6,
    3.6,
    6.9,
    0,
    0,
    0,
    3.8,
    0,
    410.5,
    2.7,
    299,
    1992,
    85
   ],
   [
    3.2,
    0,
    6,
    0,
    0,
    0,
    2.8,
    0,
    149,
    2.5,
    300,
    1992,
    91
   ],
   [
    0,
    1.8,
    1.7,
    0,
    0,
    0,
    2.1,
    0,
    307.6,
    0,
    301,
    1992,
    94
   ],
   [
    3.7,
    0.6,
    6.8,
    0,
    0,
    0,
    2.5,
    0,
    201.5,
    2.6,
    302,
    1992,
    93
   ],
   [
    4.9,
    2.6,
    7.2,
    0,
    0,
    0,
    4.5,
    0,
    358.1,
    3,
    303,
    1992,
    91
   ],
   [
    3.7,
    -1.7,
    5.8,
    0,
    0,
    0,
    2.9,
    0,
    426.3,
    0.1,
    304,
    1992,
    76
   ],
   [
    -1.2,
    -3.7,
    3.8,
    0,
    0,
    0,
    1,
    0,
    691.5,
    0,
    305,
    1992,
    89
   ],
   [
    0.2,
    -1.2,
    2.9,
    0,
    0,
    0,
    2.2,
    0,
    413.2,
    0,
    306,
    1992,
    91
   ],
   [
    3,
    -0.6,
    7.1,
    0,
    0,
    0,
    6.1,
    0,
    746.7,
    0.9,
    307,
    1992,
    73
   ],
   [
    7.2,
    4.2,
    9.6,
    0,
    0,
    0,
    6.3,
    0,
    351.6,
    2.4,
    308,
    1992,
    57
   ],
   [
    5.4,
    2.9,
    7.9,
    0,
    0,
    0,
    5.6,
    0,
    330.3,
    0.6,
    309,
    1992,
    57
   ],
   [
    7.7,
    5.2,
    10.9,
    0,
    0,
    0,
    4.4,
    0,
    187.9,
    1,
    310,
    1992,
    57
   ],
   [
    10.8,
    10.4,
    11.3,
    0,
    0,
    0,
    6.6,
    0,
    190,
    0,
    311,
    1992,
    57
   ],
   [
    10.8,
    6.8,
    12.4,
    0,
    0,
    0,
    7.4,
    0,
    116.5,
    1.8,
    312,
    1992,
    57
   ],
   [
    3.6,
    -1.8,
    6.1,
    0,
    0,
    0,
    3.1,
    0,
    631.9,
    0,
    313,
    1992,
    68
   ],
   [
    -1.6,
    -6.5,
    3.8,
    0,
    0,
    0,
    1.8,
    0,
    663.9,
    0,
    314,
    1992,
    79
   ],
   [
    4.5,
    0.4,
    7.2,
    0,
    0,
    0,
    4.8,
    0,
    181.6,
    0.6,
    315,
    1992,
    84
   ],
   [
    6.2,
    4.4,
    8.9,
    0,
    0,
    0,
    5,
    0,
    355.5,
    0.4,
    316,
    1992,
    87
   ],
   [
    5.2,
    3.6,
    9.3,
    0,
    0,
    0,
    6.1,
    0,
    145,
    3,
    317,
    1992,
    87
   ],
   [
    3,
    1.7,
    4.6,
    0,
    0,
    0,
    5.8,
    0,
    56,
    1,
    318,
    1992,
    96
   ],
   [
    2,
    0.5,
    3.9,
    0,
    0,
    0,
    1.4,
    0,
    137,
    1,
    319,
    1992,
    99
   ],
   [
    1.2,
    -0.6,
    2.4,
    0,
    0,
    0,
    3.1,
    0,
    56,
    1,
    320,
    1992,
    100
   ],
   [
    4.1,
    0.6,
    6.3,
    0,
    0,
    0,
    4.7,
    0,
    56,
    2,
    321,
    1992,
    100
   ],
   [
    5.9,
    3.5,
    8.4,
    0,
    0,
    0,
    3.8,
    0,
    240.2,
    0,
    322,
    1992,
    80
   ],
   [
    3.8,
    2.6,
    5,
    0,
    0,
    0,
    5.4,
    0,
    160.6,
    4.3,
    323,
    1992,
    89
   ],
   [
    4.1,
    2.5,
    5.7,
    0,
    0,
    0,
    7.5,
    0,
    251.5,
    1.9,
    324,
    1992,
    88
   ],
   [
    4.3,
    2.8,
    5.4,
    0,
    0,
    0,
    9.2,
    0,
    265.1,
    0.2,
    325,
    1992,
    77
   ],
   [
    3.3,
    1.4,
    5.2,
    0,
    0,
    0,
    6.4,
    0,
    350.6,
    1.8,
    326,
    1992,
    87
   ],
   [
    1.6,
    -0.6,
    4.5,
    0,
    0,
    0,
    1.9,
    0,
    285.9,
    0,
    327,
    1992,
    95
   ],
   [
    0.7,
    -1.4,
    2.5,
    0,
    0,
    0,
    1.5,
    0,
    122.2,
    0.7,
    328,
    1992,
    97
   ],
   [
    5.6,
    2.6,
    7.2,
    0,
    0,
    0,
    2.4,
    0,
    189.7,
    0.6,
    329,
    1992,
    96
   ],
   [
    7,
    5.6,
    8.9,
    0,
    0,
    0,
    4.8,
    0,
    150.5,
    1.8,
    330,
    1992,
    90
   ],
   [
    7.3,
    5.8,
    10.6,
    0,
    0,
    0,
    7.6,
    0,
    51.8,
    4,
    331,
    1992,
    88
   ],
   [
    3.9,
    2.3,
    6.6,
    0,
    0,
    0,
    4.2,
    0,
    249,
    2,
    332,
    1992,
    94
   ],
   [
    3.9,
    1.7,
    6.6,
    0,
    0,
    0,
    7.2,
    0,
    40,
    2,
    333,
    1992,
    99
   ],
   [
    2,
    1.1,
    3.6,
    0,
    0,
    0,
    5.8,
    0,
    40,
    0,
    334,
    1992,
    100
   ],
   [
    3.8,
    -0.1,
    5,
    0,
    0,
    0,
    7.2,
    0,
    83,
    0,
    335,
    1992,
    92
   ],
   [
    6.4,
    4.6,
    10.1,
    0,
    0,
    0,
    5.5,
    0,
    185.4,
    0,
    336,
    1992,
    89
   ],
   [
    4.9,
    2.7,
    7.4,
    0,
    0,
    0,
    6.5,
    0,
    342.2,
    3.9,
    337,
    1992,
    88
   ],
   [
    6.7,
    3.4,
    10,
    0,
    0,
    0,
    5.6,
    0,
    298.8,
    1.5,
    338,
    1992,
    81
   ],
   [
    4.9,
    1.8,
    6.3,
    0,
    0,
    0,
    5.3,
    0,
    305.3,
    3.1,
    339,
    1992,
    84
   ],
   [
    2.5,
    0.2,
    4.7,
    0,
    0,
    0,
    3.9,
    0,
    221.5,
    0,
    340,
    1992,
    90
   ],
   [
    1.6,
    0.3,
    3.1,
    0,
    0,
    0,
    2.4,
    0,
    222.5,
    0,
    341,
    1992,
    94
   ],
   [
    0.8,
    0.3,
    1.6,
    0,
    0,
    0,
    4.7,
    0,
    214.6,
    0,
    342,
    1992,
    92
   ],
   [
    1.7,
    0.5,
    2.9,
    0,
    0,
    0,
    2.3,
    0,
    109.7,
    0,
    343,
    1992,
    96
   ],
   [
    2.4,
    1.7,
    3.5,
    0,
    0,
    0,
    2.3,
    0,
    102.5,
    0,
    344,
    1992,
    94
   ],
   [
    2.8,
    2.3,
    3.3,
    0,
    0,
    0,
    1.6,
    0,
    96.6,
    0,
    345,
    1992,
    95
   ],
   [
    2.3,
    0.5,
    3.3,
    0,
    0,
    0,
    4,
    0,
    122.6,
    2.7,
    346,
    1992,
    93
   ],
   [
    3.3,
    0.2,
    4.8,
    0,
    0,
    0,
    6.4,
    0,
    195.8,
    5.1,
    347,
    1992,
    92
   ],
   [
    2.8,
    1.5,
    4.1,
    0,
    0,
    0,
    6,
    0,
    203.2,
    0,
    348,
    1992,
    87
   ],
   [
    6.3,
    2.7,
    8.5,
    0,
    0,
    0,
    6.1,
    0,
    116.1,
    2.2,
    349,
    1992,
    91
   ],
   [
    5.4,
    0.4,
    7.6,
    0,
    0,
    0,
    2.8,
    0,
    296.3,
    0,
    350,
    1992,
    88
   ],
   [
    0,
    2.4,
    3.6,
    0,
    0,
    0,
    1.1,
    0,
    384.2,
    0,
    351,
    1992,
    94
   ],
   [
    -0.8,
    -3.9,
    2.5,
    0,
    0,
    0,
    0.5,
    0,
    344.9,
    0,
    352,
    1992,
    94
   ],
   [
    -1.5,
    -3.8,
    0,
    0,
    0,
    0,
    2.7,
    0,
    289.2,
    0,
    353,
    1992,
    95
   ],
   [
    1.8,
    -1.5,
    3,
    0,
    0,
    0,
    5.4,
    0,
    120.2,
    1.3,
    354,
    1992,
    85
   ],
   [
    1.8,
    0.3,
    2.5,
    0,
    0,
    0,
    1.9,
    0,
    89.5,
    7.3,
    355,
    1992,
    93
   ],
   [
    -0.2,
    -2.4,
    1.3,
    0,
    0,
    0,
    1.4,
    0,
    156.6,
    0,
    356,
    1992,
    93
   ],
   [
    -3.2,
    -3.8,
    -2.7,
    0,
    0,
    0,
    2.3,
    0,
    186.1,
    0,
    357,
    1992,
    91
   ],
   [
    -4.8,
    -7.8,
    -2.2,
    0,
    0,
    0,
    4.9,
    0,
    400.3,
    0,
    358,
    1992,
    83
   ],
   [
    -8.2,
    -9.6,
    -6.2,
    0,
    0,
    0,
    3.2,
    0,
    319.8,
    0,
    359,
    1992,
    88
   ],
   [
    -9.8,
    -11.3,
    -7.7,
    0,
    0,
    0,
    2.5,
    0,
    278.5,
    0,
    360,
    1992,
    89
   ],
   [
    -9,
    -12.1,
    -4.7,
    0,
    0,
    0,
    0.7,
    0,
    296,
    0,
    361,
    1992,
    88
   ],
   [
    -2.3,
    -4.5,
    0.9,
    0,
    0,
    0,
    1.5,
    0,
    338.4,
    0,
    362,
    1992,
    90
   ],
   [
    -6,
    -8.5,
    -2.4,
    0,
    0,
    0,
    2.2,
    0,
    363.3,
    0,
    363,
    1992,
    92
   ],
   [
    -4.1,
    -5.3,
    -3,
    0,
    0,
    0,
    4.3,
    0,
    103.9,
    0,
    364,
    1992,
    92
   ],
   [
    -1.6,
    -2.8,
    -0.6,
    0,
    0,
    0,
    2.3,
    0,
    133,
    0,
    365,
    1992,
    92
   ],
   [
    -2.1,
    -3.3,
    -0.9,
    0,
    0,
    0,
    1.9,
    0,
    142.2,
    0,
    366,
    1992,
    92
   ],
   [
    -7.4,
    -9.9,
    -3.1,
    0,
    0,
    0,
    2.1,
    0,
    382.1,
    0,
    1,
    1993,
    92
   ],
   [
    -10.7,
    -13.6,
    -8.5,
    0,
    0,
    0,
    3.3,
    0,
    424.9,
    0,
    2,
    1993,
    85
   ],
   [
    -13.2,
    -15.8,
    -9.1,
    0,
    0,
    0,
    3.8,
    0,
    405.1,
    0,
    3,
    1993,
    79
   ],
   [
    -12.6,
    -15.3,
    -9.9,
    0,
    0,
    0,
    4.4,
    0,
    394.6,
    0,
    4,
    1993,
    79
   ],
   [
    -5.9,
    -13.1,
    0.1,
    0,
    0,
    0,
    4.7,
    0,
    412.1,
    0,
    5,
    1993,
    68
   ],
   [
    2.3,
    -0.1,
    4.1,
    0,
    0,
    0,
    6.3,
    0,
    96.6,
    3,
    6,
    1993,
    54
   ],
   [
    3.1,
    0.4,
    5.3,
    0,
    0,
    0,
    3.3,
    0,
    212.7,
    6.9,
    7,
    1993,
    54
   ],
   [
    2.9,
    0.2,
    7.1,
    0,
    0,
    0,
    5.7,
    0,
    188.1,
    0.1,
    8,
    1993,
    54
   ],
   [
    2.2,
    -0.5,
    5.7,
    0,
    0,
    0,
    6,
    0,
    321.4,
    2.5,
    9,
    1993,
    54
   ],
   [
    7.4,
    6.4,
    8.4,
    0,
    0,
    0,
    6.8,
    0,
    207.3,
    1.3,
    10,
    1993,
    54
   ],
   [
    9.1,
    7.6,
    10.4,
    0,
    0,
    0,
    8.8,
    0,
    169,
    1.2,
    11,
    1993,
    54
   ],
   [
    4,
    1.8,
    7.6,
    0,
    0,
    0,
    5.9,
    0,
    118.3,
    7.9,
    12,
    1993,
    54
   ],
   [
    4.2,
    2.5,
    8.5,
    0,
    0,
    0,
    7.7,
    0,
    366.1,
    0,
    13,
    1993,
    54
   ],
   [
    6.8,
    3.5,
    12.3,
    0,
    0,
    0,
    9.6,
    0,
    361,
    1.1,
    14,
    1993,
    51
   ],
   [
    3.9,
    0.5,
    8.4,
    0,
    0,
    0,
    6.4,
    0,
    390.2,
    0,
    15,
    1993,
    50
   ],
   [
    10.9,
    9.2,
    12.1,
    0,
    0,
    0,
    8.5,
    0,
    368.9,
    0,
    16,
    1993,
    47
   ],
   [
    9.2,
    7.2,
    11.8,
    0,
    0,
    0,
    6.7,
    0,
    505.3,
    0,
    17,
    1993,
    47
   ],
   [
    5.3,
    2,
    8.6,
    0,
    0,
    0,
    5.9,
    0,
    378.8,
    0,
    18,
    1993,
    47
   ],
   [
    2.9,
    0.2,
    5.4,
    0,
    0,
    0,
    6.5,
    0,
    279.9,
    1,
    19,
    1993,
    47
   ],
   [
    6.6,
    3.8,
    9.1,
    0,
    0,
    0,
    6.7,
    0,
    127.3,
    3,
    20,
    1993,
    47
   ],
   [
    7.7,
    6.3,
    9.6,
    0,
    0,
    0,
    7.9,
    0,
    340.3,
    2.2,
    21,
    1993,
    47
   ],
   [
    9.4,
    4.3,
    12.6,
    0,
    0,
    0,
    10.3,
    0,
    226.1,
    1.2,
    22,
    1993,
    46
   ],
   [
    4,
    2.1,
    5.3,
    0,
    0,
    0,
    8.4,
    0,
    354.6,
    3.4,
    23,
    1993,
    45
   ],
   [
    7.6,
    2.8,
    10.2,
    0,
    0,
    0,
    11.8,
    0,
    316.1,
    1.9,
    24,
    1993,
    44
   ],
   [
    2.1,
    -0.9,
    4.8,
    0,
    0,
    0,
    8.5,
    0,
    248.2,
    0.7,
    25,
    1993,
    44
   ],
   [
    1,
    -0.5,
    2.1,
    0,
    0,
    0,
    9.8,
    0,
    142.2,
    7.2,
    26,
    1993,
    44
   ],
   [
    -1.9,
    -4.7,
    0.2,
    0,
    0,
    0,
    3.7,
    0,
    739.6,
    1.1,
    27,
    1993,
    44
   ],
   [
    -2.4,
    -5.8,
    -0.8,
    0,
    0,
    0,
    2.7,
    0,
    436.2,
    0,
    28,
    1993,
    44
   ],
   [
    -4.3,
    -6.3,
    -2.8,
    0,
    0,
    0,
    1.7,
    0,
    324.2,
    0,
    29,
    1993,
    44
   ],
   [
    -5.4,
    -7.7,
    -2.8,
    0,
    0,
    0,
    1.6,
    0,
    586,
    0,
    30,
    1993,
    44
   ],
   [
    -6.2,
    -9.4,
    -0.4,
    0,
    0,
    0,
    1.1,
    0,
    758.8,
    0,
    31,
    1993,
    44
   ],
   [
    -2.7,
    -7.8,
    -0.1,
    0,
    0,
    0,
    1.1,
    0,
    199.9,
    0,
    32,
    1993,
    44
   ],
   [
    -2.9,
    -6.7,
    -0.3,
    0,
    0,
    0,
    2.5,
    0,
    655.3,
    0,
    33,
    1993,
    44
   ],
   [
    -0.6,
    -2.1,
    -0.1,
    0,
    0,
    0,
    4.2,
    0,
    245.9,
    0,
    34,
    1993,
    44
   ],
   [
    -1,
    -2.4,
    0.6,
    0,
    0,
    0,
    4.6,
    0,
    300.5,
    0,
    35,
    1993,
    44
   ],
   [
    0.1,
    -0.7,
    1.5,
    0,
    0,
    0,
    6.8,
    0,
    177.9,
    0,
    36,
    1993,
    44
   ],
   [
    1.6,
    0.5,
    2.5,
    0,
    0,
    0,
    4.4,
    0,
    146.3,
    2.4,
    37,
    1993,
    44
   ],
   [
    -0.2,
    -2.5,
    1.6,
    0,
    0,
    0,
    1.4,
    0,
    448.9,
    0,
    38,
    1993,
    44
   ],
   [
    1.8,
    -0.2,
    4,
    0,
    0,
    0,
    2.7,
    0,
    402.6,
    0,
    39,
    1993,
    44
   ],
   [
    2.8,
    2.2,
    3.8,
    0,
    0,
    0,
    1.4,
    0,
    191.2,
    0.1,
    40,
    1993,
    44
   ],
   [
    0.5,
    -0.6,
    2.3,
    0,
    0,
    0,
    2.4,
    0,
    182.2,
    0,
    41,
    1993,
    44
   ],
   [
    -0.6,
    -1.2,
    0.1,
    0,
    0,
    0,
    1.7,
    0,
    221.1,
    0,
    42,
    1993,
    44
   ],
   [
    0.6,
    -1,
    5,
    0,
    0,
    0,
    2.4,
    0,
    646.3,
    0,
    43,
    1993,
    44
   ],
   [
    -0.7,
    -1.2,
    -0.3,
    0,
    0,
    0,
    0.8,
    0,
    132.4,
    0,
    44,
    1993,
    44
   ],
   [
    0.7,
    -0.6,
    2.4,
    0,
    0,
    0,
    2,
    0,
    280.1,
    0,
    45,
    1993,
    44
   ],
   [
    1.1,
    -2,
    3,
    0,
    0,
    0,
    3.3,
    0,
    540.1,
    0,
    46,
    1993,
    44
   ],
   [
    -0.8,
    -2.3,
    0.3,
    0,
    0,
    0,
    3.9,
    0,
    374.2,
    0.8,
    47,
    1993,
    44
   ],
   [
    2.8,
    0,
    6.3,
    0,
    0,
    0,
    5.8,
    0,
    231.2,
    4.1,
    48,
    1993,
    44
   ],
   [
    1.9,
    -0.9,
    3.5,
    0,
    0,
    0,
    4.5,
    0,
    538,
    0.4,
    49,
    1993,
    44
   ],
   [
    2.8,
    1.8,
    3.9,
    0,
    0,
    0,
    7.1,
    0,
    400.1,
    3.9,
    50,
    1993,
    44
   ],
   [
    1.6,
    -0.5,
    4.1,
    0,
    0,
    0,
    7,
    0,
    891.7,
    3.4,
    51,
    1993,
    41
   ],
   [
    -1,
    -4,
    1.3,
    0,
    0,
    0,
    6.1,
    0,
    472,
    0.8,
    52,
    1993,
    39
   ],
   [
    -4.4,
    -7.8,
    -1.8,
    0,
    0,
    0,
    3.8,
    0,
    1169,
    0,
    53,
    1993,
    39
   ],
   [
    -3.4,
    -7.2,
    -0.9,
    0,
    0,
    0,
    3.9,
    0,
    637.6,
    0,
    54,
    1993,
    39
   ],
   [
    -0.9,
    -1.3,
    -0.5,
    0,
    0,
    0,
    5.3,
    0,
    348.7,
    0.8,
    55,
    1993,
    39
   ],
   [
    -0.8,
    -1.2,
    -0.4,
    0,
    0,
    0,
    3.3,
    0,
    261.4,
    0.3,
    56,
    1993,
    39
   ],
   [
    -2,
    -5.5,
    1.5,
    0,
    0,
    0,
    2.2,
    0,
    736,
    0.1,
    57,
    1993,
    39
   ],
   [
    -2.7,
    -8.1,
    2.4,
    0,
    0,
    0,
    2.3,
    0,
    611.2,
    0.7,
    58,
    1993,
    39
   ],
   [
    -1.1,
    -4.2,
    1.4,
    0,
    0,
    0,
    2.6,
    0,
    524.9,
    0,
    59,
    1993,
    39
   ],
   [
    0.5,
    -1.1,
    3.7,
    0,
    0,
    0,
    5.6,
    0,
    1033.1,
    0,
    60,
    1993,
    39
   ],
   [
    -1.3,
    -4.3,
    1.8,
    0,
    0,
    0,
    6.6,
    0,
    1057.6,
    0,
    61,
    1993,
    39
   ],
   [
    -4,
    -6.7,
    -1.1,
    0,
    0,
    0,
    4.1,
    0,
    945.8,
    0,
    62,
    1993,
    39
   ],
   [
    -3.8,
    -5.8,
    -0.9,
    0,
    0,
    0,
    1.6,
    0,
    1088.6,
    0.1,
    63,
    1993,
    39
   ],
   [
    -2.8,
    -7.6,
    0,
    0,
    0,
    0,
    4.1,
    0,
    654.8,
    0,
    64,
    1993,
    39
   ],
   [
    2.5,
    0.2,
    5.6,
    0,
    0,
    0,
    4,
    0,
    1010,
    0,
    65,
    1993,
    39
   ],
   [
    1.8,
    -1.1,
    5,
    0,
    0,
    0,
    2.5,
    0,
    1058.1,
    0,
    66,
    1993,
    39
   ],
   [
    -0.3,
    -2.2,
    2.9,
    0,
    0,
    0,
    1.3,
    0,
    795.5,
    0,
    67,
    1993,
    39
   ],
   [
    -0.7,
    -4.7,
    4,
    0,
    0,
    0,
    2.1,
    0,
    1379.9,
    0,
    68,
    1993,
    39
   ],
   [
    1.9,
    -4.7,
    7.6,
    0,
    0,
    0,
    2.7,
    0,
    1177,
    0,
    69,
    1993,
    39
   ],
   [
    1.5,
    -1,
    4.3,
    0,
    0,
    0,
    2,
    0,
    810.5,
    0,
    70,
    1993,
    39
   ],
   [
    2.7,
    -3.9,
    8.6,
    0,
    0,
    0,
    0.9,
    0,
    1013.8,
    0,
    71,
    1993,
    39
   ],
   [
    5.4,
    -0.1,
    12.3,
    0,
    0,
    0,
    1.4,
    0,
    997.7,
    0,
    72,
    1993,
    39
   ],
   [
    6.7,
    1.6,
    13.6,
    0,
    0,
    0,
    1.5,
    0,
    1043.6,
    0,
    73,
    1993,
    39
   ],
   [
    8.3,
    2.1,
    15.1,
    0,
    0,
    0,
    2.2,
    0,
    1260.2,
    0,
    74,
    1993,
    37
   ],
   [
    10.4,
    7.6,
    15.5,
    0,
    0,
    0,
    6.1,
    0,
    899.1,
    1.8,
    75,
    1993,
    34
   ],
   [
    8.1,
    7,
    9.6,
    0,
    0,
    0,
    7.9,
    0,
    279.5,
    0.5,
    76,
    1993,
    34
   ],
   [
    9.8,
    5.8,
    10.7,
    0,
    0,
    0,
    7.6,
    0,
    310.1,
    1.4,
    77,
    1993,
    34
   ],
   [
    5.4,
    2.6,
    8.1,
    0,
    0,
    0,
    7.8,
    0,
    983.6,
    0.2,
    78,
    1993,
    34
   ],
   [
    6.6,
    4.1,
    10,
    0,
    0,
    0,
    6.3,
    0,
    1225.3,
    0,
    79,
    1993,
    34
   ],
   [
    8,
    1.2,
    15,
    0,
    0,
    0,
    3.3,
    0,
    1357.6,
    0,
    80,
    1993,
    34
   ],
   [
    10.3,
    6.4,
    14.3,
    0,
    0,
    0,
    2.9,
    0,
    709.6,
    0.1,
    81,
    1993,
    34
   ],
   [
    8.1,
    4.6,
    9.7,
    0,
    0,
    0,
    6.2,
    0,
    1117.7,
    0.8,
    82,
    1993,
    34
   ],
   [
    4.7,
    2,
    7.9,
    0,
    0,
    0,
    5.7,
    0,
    1319.8,
    0,
    83,
    1993,
    34
   ],
   [
    2.5,
    -0.4,
    5.7,
    0,
    0,
    0,
    4.2,
    0,
    1046.2,
    0.7,
    84,
    1993,
    34
   ],
   [
    1.1,
    -2.3,
    5.6,
    0,
    0,
    0,
    3.2,
    0,
    1391.9,
    0,
    85,
    1993,
    34
   ],
   [
    -0.1,
    -2.8,
    2.7,
    0,
    0,
    0,
    2.4,
    0,
    1084.3,
    0.1,
    86,
    1993,
    34
   ],
   [
    0.7,
    -1.9,
    4.4,
    0,
    0,
    0,
    3.7,
    0,
    1089.5,
    0,
    87,
    1993,
    34
   ],
   [
    0.1,
    -1.1,
    2.1,
    0,
    0,
    0,
    4.4,
    0,
    607.2,
    0.8,
    88,
    1993,
    34
   ],
   [
    0.8,
    -0.6,
    2.4,
    0,
    0,
    0,
    4,
    0,
    628.5,
    0,
    89,
    1993,
    34
   ],
   [
    3.1,
    -0.5,
    6.8,
    0,
    0,
    0,
    3,
    0,
    1407.1,
    0,
    90,
    1993,
    34
   ],
   [
    4.8,
    0.9,
    11,
    0,
    0,
    0,
    5.3,
    0,
    1163.8,
    0,
    91,
    1993,
    34
   ],
   [
    5.2,
    -0.6,
    11,
    0,
    0,
    0,
    5.2,
    0,
    1906.7,
    0,
    92,
    1993,
    34
   ],
   [
    5.5,
    4.2,
    7.1,
    0,
    0,
    0,
    2.4,
    0,
    459.3,
    0,
    93,
    1993,
    34
   ],
   [
    5.4,
    2.6,
    8.8,
    0,
    0,
    0,
    1.4,
    0,
    653.8,
    0,
    94,
    1993,
    34
   ],
   [
    5.5,
    -0.2,
    10.3,
    0,
    0,
    0,
    2.2,
    0,
    938.7,
    0,
    95,
    1993,
    34
   ],
   [
    6.9,
    4.6,
    11,
    0,
    0,
    0,
    3.6,
    0,
    1067.5,
    2,
    96,
    1993,
    34
   ],
   [
    6.7,
    4.9,
    9.9,
    0,
    0,
    0,
    3.2,
    0,
    971.9,
    3.8,
    97,
    1993,
    34
   ],
   [
    4.9,
    2.5,
    6.4,
    0,
    0,
    0,
    4.1,
    0,
    307.6,
    0,
    98,
    1993,
    34
   ],
   [
    1.4,
    -2.6,
    3.4,
    0,
    0,
    0,
    3.6,
    0,
    1105.5,
    0,
    99,
    1993,
    34
   ],
   [
    0.9,
    -4.2,
    6.2,
    0,
    0,
    0,
    2.6,
    0,
    2128.3,
    0,
    100,
    1993,
    34
   ],
   [
    2.3,
    -3.3,
    8.1,
    0,
    0,
    0,
    3.7,
    0,
    2278.3,
    0,
    101,
    1993,
    34
   ],
   [
    4,
    -2.1,
    10.1,
    0,
    0,
    0,
    3.1,
    0,
    2241.1,
    0,
    102,
    1993,
    34
   ],
   [
    5.6,
    -1,
    11.7,
    0,
    0,
    0,
    3,
    0,
    1974.1,
    0,
    103,
    1993,
    34
   ],
   [
    8.1,
    1.5,
    14.5,
    0,
    0,
    0,
    3.5,
    0,
    1722,
    0,
    104,
    1993,
    34
   ],
   [
    8.6,
    2.2,
    14.8,
    0,
    0,
    0,
    3.5,
    0,
    1989.6,
    0,
    105,
    1993,
    34
   ],
   [
    7.2,
    0.3,
    13.9,
    0,
    0,
    0,
    1.3,
    0,
    2149.9,
    0,
    106,
    1993,
    33
   ],
   [
    10.7,
    2,
    16.7,
    0,
    0,
    0,
    4,
    0,
    1742.9,
    0,
    107,
    1993,
    32
   ],
   [
    9.9,
    8.1,
    13,
    0,
    0,
    0,
    5.3,
    0,
    997.9,
    7.5,
    108,
    1993,
    32
   ],
   [
    6.7,
    3.2,
    10.4,
    0,
    0,
    0,
    5.6,
    0,
    2092.8,
    0,
    109,
    1993,
    32
   ],
   [
    7,
    0.4,
    12.6,
    0,
    0,
    0,
    2.4,
    0,
    1944.4,
    0,
    110,
    1993,
    32
   ],
   [
    13.8,
    3.6,
    22.9,
    0,
    0,
    0,
    4.2,
    0,
    1968.6,
    0,
    111,
    1993,
    32
   ],
   [
    16.1,
    9.6,
    22,
    0,
    0,
    0,
    2.4,
    0,
    2048.1,
    0,
    112,
    1993,
    32
   ],
   [
    15.1,
    9.2,
    20,
    0,
    0,
    0,
    2.6,
    0,
    2011.1,
    0,
    113,
    1993,
    32
   ],
   [
    18.1,
    9.4,
    26.9,
    0,
    0,
    0,
    4.7,
    0,
    2185.7,
    0,
    114,
    1993,
    30
   ],
   [
    20.1,
    12.4,
    27.1,
    0,
    0,
    0,
    5.3,
    0,
    2078.9,
    0,
    115,
    1993,
    29
   ],
   [
    20.2,
    12,
    27.6,
    0,
    0,
    0,
    4.4,
    0,
    2342.5,
    0,
    116,
    1993,
    29
   ],
   [
    18.7,
    9.8,
    26.7,
    0,
    0,
    0,
    1.7,
    0,
    2117.8,
    0,
    117,
    1993,
    28
   ],
   [
    19.5,
    11.9,
    27.2,
    0,
    0,
    0,
    2.9,
    0,
    2159.8,
    0,
    118,
    1993,
    27
   ],
   [
    19.3,
    11.3,
    26.7,
    0,
    0,
    0,
    3.6,
    0,
    2253.1,
    0,
    119,
    1993,
    27
   ],
   [
    19.2,
    11.9,
    26.4,
    0,
    0,
    0,
    3.9,
    0,
    2303,
    3.3,
    120,
    1993,
    27
   ],
   [
    18.6,
    10.8,
    25.9,
    0,
    0,
    0,
    2.8,
    0,
    2296,
    0,
    121,
    1993,
    27
   ],
   [
    16.7,
    10.9,
    25,
    0,
    0,
    0,
    2.9,
    0,
    1873.8,
    0.1,
    122,
    1993,
    27
   ],
   [
    11.2,
    7.6,
    14,
    0,
    0,
    0,
    3,
    0,
    545.8,
    0,
    123,
    1993,
    27
   ],
   [
    8.9,
    2.8,
    13.5,
    0,
    0,
    0,
    2.4,
    0,
    2599.2,
    0,
    124,
    1993,
    27
   ],
   [
    8.7,
    1.1,
    14.1,
    0,
    0,
    0,
    2.2,
    0,
    2450.5,
    0,
    125,
    1993,
    27
   ],
   [
    8.3,
    5.8,
    11.2,
    0,
    0,
    0,
    2.7,
    0,
    582.4,
    0.4,
    126,
    1993,
    27
   ],
   [
    14.9,
    8,
    23.6,
    0,
    0,
    0,
    2,
    0,
    1995.2,
    0.3,
    127,
    1993,
    27
   ],
   [
    17.9,
    10.3,
    24.8,
    0,
    0,
    0,
    2.8,
    0,
    2153.9,
    0,
    128,
    1993,
    26
   ],
   [
    18.7,
    12.1,
    26,
    0,
    0,
    0,
    3.5,
    0,
    2212.7,
    0,
    129,
    1993,
    26
   ],
   [
    18.2,
    11.4,
    24.5,
    0,
    0,
    0,
    2.5,
    0,
    2164.6,
    0,
    130,
    1993,
    25
   ],
   [
    19.7,
    13.1,
    26.6,
    0,
    0,
    0,
    3.4,
    0,
    2175.2,
    0,
    131,
    1993,
    25
   ],
   [
    19.5,
    11.3,
    26.1,
    0,
    0,
    0,
    3.2,
    0,
    2389.7,
    0,
    132,
    1993,
    24
   ],
   [
    19.6,
    10.5,
    27.8,
    0,
    0,
    0,
    2.4,
    0,
    2403.4,
    0,
    133,
    1993,
    24
   ],
   [
    19.8,
    13.1,
    25.8,
    0,
    0,
    0,
    2.2,
    0,
    2574.6,
    0,
    134,
    1993,
    24
   ],
   [
    16,
    11.2,
    19.9,
    0,
    0,
    0,
    2.1,
    0,
    1846.5,
    0,
    135,
    1993,
    24
   ],
   [
    12.6,
    5.7,
    16.4,
    0,
    0,
    0,
    2.6,
    0,
    1782.3,
    0.5,
    136,
    1993,
    24
   ],
   [
    14.2,
    5.3,
    21.5,
    0,
    0,
    0,
    2.8,
    0,
    2834.4,
    0,
    137,
    1993,
    24
   ],
   [
    17,
    8.3,
    24.4,
    0,
    0,
    0,
    3.7,
    0,
    2850.3,
    0,
    138,
    1993,
    24
   ],
   [
    20.4,
    12.2,
    27.5,
    0,
    0,
    0,
    3.5,
    0,
    2614,
    0,
    139,
    1993,
    24
   ],
   [
    22.1,
    13.7,
    29.2,
    0,
    0,
    0,
    3,
    0,
    2466.7,
    0,
    140,
    1993,
    24
   ],
   [
    19.2,
    15.3,
    28.7,
    0,
    0,
    0,
    3,
    0,
    1684.7,
    8.6,
    141,
    1993,
    24
   ],
   [
    13.2,
    11.8,
    15.5,
    0,
    0,
    0,
    2.7,
    0,
    327.2,
    2.6,
    142,
    1993,
    24
   ],
   [
    15.2,
    12.1,
    19,
    0,
    0,
    0,
    1.8,
    0,
    1274.8,
    0,
    143,
    1993,
    24
   ],
   [
    16,
    11.6,
    22.1,
    0,
    0,
    0,
    1.7,
    0,
    1898.3,
    0,
    144,
    1993,
    24
   ],
   [
    17.2,
    10.5,
    23.3,
    0,
    0,
    0,
    1.9,
    0,
    2238,
    0,
    145,
    1993,
    24
   ],
   [
    12.5,
    9.8,
    15.9,
    0,
    0,
    0,
    2.5,
    0,
    1280.2,
    0,
    146,
    1993,
    24
   ],
   [
    10.7,
    8.6,
    12.4,
    0,
    0,
    0,
    2.6,
    0,
    553,
    7.1,
    147,
    1993,
    24
   ],
   [
    14,
    11.1,
    19.1,
    0,
    0,
    0,
    2.5,
    0,
    1200.2,
    0.7,
    148,
    1993,
    24
   ],
   [
    11.5,
    8.8,
    15.5,
    0,
    0,
    0,
    5,
    0,
    1347.5,
    0.1,
    149,
    1993,
    24
   ],
   [
    16.1,
    7.9,
    22.9,
    0,
    0,
    0,
    2.3,
    0,
    2562.7,
    10.2,
    150,
    1993,
    24
   ],
   [
    14.7,
    10.8,
    19.1,
    0,
    0,
    0,
    4.4,
    0,
    2185.1,
    2.3,
    151,
    1993,
    24
   ],
   [
    14.5,
    9.3,
    18.9,
    0,
    0,
    0,
    3.8,
    0,
    2229,
    0,
    152,
    1993,
    24
   ],
   [
    16.3,
    8.6,
    21.9,
    0,
    0,
    0,
    1.7,
    0,
    2266.8,
    0,
    153,
    1993,
    24
   ],
   [
    14.8,
    12.1,
    18.3,
    0,
    0,
    0,
    2.6,
    0,
    1001,
    1.8,
    154,
    1993,
    24
   ],
   [
    15.4,
    9.6,
    21.5,
    0,
    0,
    0,
    2.8,
    0,
    2905,
    0,
    155,
    1993,
    24
   ],
   [
    15.8,
    5.6,
    23.5,
    0,
    0,
    0,
    1,
    0,
    3043.4,
    0,
    156,
    1993,
    24
   ],
   [
    18.1,
    9.8,
    24.1,
    0,
    0,
    0,
    1.2,
    0,
    1949.2,
    0,
    157,
    1993,
    24
   ],
   [
    16.5,
    10,
    21,
    0,
    0,
    0,
    2.7,
    0,
    2823.5,
    0,
    158,
    1993,
    24
   ],
   [
    16.8,
    9.4,
    22.7,
    0,
    0,
    0,
    1.6,
    0,
    2632.5,
    0,
    159,
    1993,
    24
   ],
   [
    18.6,
    9.8,
    25.4,
    0,
    0,
    0,
    2.5,
    0,
    3001.7,
    0,
    160,
    1993,
    24
   ],
   [
    22,
    12.8,
    29.8,
    0,
    0,
    0,
    3,
    0,
    2787.2,
    0,
    161,
    1993,
    24
   ],
   [
    21.6,
    16,
    25.1,
    0,
    0,
    0,
    2.8,
    0,
    1819.4,
    0,
    162,
    1993,
    24
   ],
   [
    14.1,
    11.5,
    17.8,
    0,
    0,
    0,
    4.7,
    0,
    343,
    32,
    163,
    1993,
    24
   ],
   [
    12.1,
    11.5,
    13.5,
    0,
    0,
    0,
    6.3,
    0,
    385.9,
    27.1,
    164,
    1993,
    24
   ],
   [
    13.2,
    10.4,
    16.5,
    0,
    0,
    0,
    4.1,
    0,
    1738.8,
    0,
    165,
    1993,
    24
   ],
   [
    12.5,
    8.9,
    15.8,
    0,
    0,
    0,
    3.9,
    0,
    1831.2,
    0.1,
    166,
    1993,
    24
   ],
   [
    12.5,
    7,
    17.3,
    0,
    0,
    0,
    3.9,
    0,
    1535.6,
    0.4,
    167,
    1993,
    24
   ],
   [
    14.2,
    12.2,
    17.4,
    0,
    0,
    0,
    4.7,
    0,
    1778.7,
    4.2,
    168,
    1993,
    24
   ],
   [
    14.8,
    10.1,
    17.8,
    0,
    0,
    0,
    3.8,
    0,
    1411.5,
    0.5,
    169,
    1993,
    24
   ],
   [
    15,
    13.8,
    16.1,
    0,
    0,
    0,
    3.2,
    0,
    783.3,
    6.4,
    170,
    1993,
    24
   ],
   [
    14.4,
    11,
    17.5,
    0,
    0,
    0,
    3.8,
    0,
    1777.1,
    7.5,
    171,
    1993,
    24
   ],
   [
    14,
    8.5,
    17.6,
    0,
    0,
    0,
    2.9,
    0,
    2402.1,
    0,
    172,
    1993,
    24
   ],
   [
    14.4,
    11.1,
    17.7,
    0,
    0,
    0,
    1.4,
    0,
    1873.6,
    0,
    173,
    1993,
    24
   ],
   [
    14.6,
    10.5,
    18.4,
    0,
    0,
    0,
    1.5,
    0,
    1604.4,
    1,
    174,
    1993,
    24
   ],
   [
    11.7,
    9.7,
    14.5,
    0,
    0,
    0,
    5.4,
    0,
    1964.2,
    5.6,
    175,
    1993,
    24
   ],
   [
    11.2,
    8.5,
    14.2,
    0,
    0,
    0,
    5.5,
    0,
    1863.7,
    0.1,
    176,
    1993,
    52
   ],
   [
    11.6,
    8.1,
    15,
    0,
    0,
    0,
    4.6,
    0,
    1629.2,
    0,
    177,
    1993,
    76
   ],
   [
    12.4,
    9.6,
    16.1,
    0,
    0,
    0,
    3.3,
    0,
    1249,
    0.7,
    178,
    1993,
    80
   ],
   [
    13,
    8.6,
    17.7,
    0,
    0,
    0,
    2.8,
    0,
    1862,
    2,
    179,
    1993,
    77
   ],
   [
    15.3,
    7.8,
    21.1,
    0,
    0,
    0,
    2.1,
    0,
    2057.3,
    0,
    180,
    1993,
    75
   ],
   [
    14.6,
    9.5,
    19.7,
    0,
    0,
    0,
    3.3,
    0,
    2738.6,
    0,
    181,
    1993,
    69
   ],
   [
    14.5,
    6.8,
    21.1,
    0,
    0,
    0,
    1,
    0,
    2475.7,
    0,
    182,
    1993,
    73
   ],
   [
    18.4,
    8.6,
    26.4,
    0,
    0,
    0,
    1.2,
    0,
    2975.1,
    0,
    183,
    1993,
    63
   ],
   [
    18.8,
    11.8,
    22.9,
    0,
    0,
    0,
    3.5,
    0,
    2136.5,
    0,
    184,
    1993,
    66
   ],
   [
    19.9,
    16.5,
    22.8,
    0,
    0,
    0,
    4,
    0,
    1574.9,
    0,
    185,
    1993,
    75
   ],
   [
    17.1,
    12.9,
    22.5,
    0,
    0,
    0,
    2.1,
    0,
    1365.3,
    0.1,
    186,
    1993,
    81
   ],
   [
    13.3,
    10.9,
    16,
    0,
    0,
    0,
    4.6,
    0,
    1454.1,
    14,
    187,
    1993,
    74
   ],
   [
    12.6,
    10.6,
    16.6,
    0,
    0,
    0,
    6.2,
    0,
    1800.9,
    4.1,
    188,
    1993,
    81
   ],
   [
    14.2,
    10.2,
    18.7,
    0,
    0,
    0,
    4.1,
    0,
    2031.4,
    0,
    189,
    1993,
    72
   ],
   [
    20.1,
    11.9,
    26.6,
    0,
    0,
    0,
    4.2,
    0,
    2774.2,
    0,
    190,
    1993,
    57
   ],
   [
    17,
    12,
    26.7,
    0,
    0,
    0,
    2.3,
    0,
    1470,
    0.8,
    191,
    1993,
    82
   ],
   [
    11.7,
    9.9,
    13.4,
    0,
    0,
    0,
    2.2,
    0,
    399.6,
    21,
    192,
    1993,
    97
   ],
   [
    12.5,
    9.7,
    16.3,
    0,
    0,
    0,
    4,
    0,
    1686,
    2.7,
    193,
    1993,
    81
   ],
   [
    11.9,
    8.8,
    15.4,
    0,
    0,
    0,
    3.9,
    0,
    1920.1,
    0.3,
    194,
    1993,
    82
   ],
   [
    14.5,
    7.8,
    19.2,
    0,
    0,
    0,
    2.1,
    0,
    2023.9,
    0,
    195,
    1993,
    70
   ],
   [
    15,
    12.5,
    18.2,
    0,
    0,
    0,
    2,
    0,
    1020,
    8,
    196,
    1993,
    91
   ],
   [
    16.5,
    12.8,
    21.3,
    0,
    0,
    0,
    1.3,
    0,
    1945.6,
    4.6,
    197,
    1993,
    78
   ],
   [
    18,
    12.9,
    22.3,
    0,
    0,
    0,
    3.1,
    0,
    1672.1,
    1.8,
    198,
    1993,
    85
   ],
   [
    17.1,
    13,
    22,
    0,
    0,
    0,
    3,
    0,
    2036,
    0.3,
    199,
    1993,
    79
   ],
   [
    17.1,
    12.1,
    21.8,
    0,
    0,
    0,
    1.2,
    0,
    1299.7,
    0.1,
    200,
    1993,
    82
   ],
   [
    16.8,
    12.3,
    21.1,
    0,
    0,
    0,
    2.5,
    0,
    1706,
    2.4,
    201,
    1993,
    78
   ],
   [
    13.8,
    10.7,
    17,
    0,
    0,
    0,
    4,
    0,
    1050.7,
    0.1,
    202,
    1993,
    84
   ],
   [
    14.7,
    10.7,
    18.8,
    0,
    0,
    0,
    3.8,
    0,
    1963.7,
    0.4,
    203,
    1993,
    75
   ],
   [
    14.6,
    11.6,
    18.3,
    0,
    0,
    0,
    4.4,
    0,
    1516.2,
    1.2,
    204,
    1993,
    79
   ],
   [
    18.2,
    14.2,
    22.8,
    0,
    0,
    0,
    4.5,
    0,
    1547.3,
    6.7,
    205,
    1993,
    83
   ],
   [
    17.3,
    11.9,
    22.9,
    0,
    0,
    0,
    4.6,
    0,
    1775.5,
    0.4,
    206,
    1993,
    75
   ],
   [
    13.8,
    10.1,
    20.2,
    0,
    0,
    0,
    4.9,
    0,
    1928.6,
    2.3,
    207,
    1993,
    80
   ],
   [
    13.8,
    10,
    18.9,
    0,
    0,
    0,
    4.6,
    0,
    1676,
    2.3,
    208,
    1993,
    85
   ],
   [
    16,
    13.3,
    19.2,
    0,
    0,
    0,
    4.4,
    0,
    1399.3,
    0.5,
    209,
    1993,
    89
   ],
   [
    17.2,
    11.8,
    21.3,
    0,
    0,
    0,
    2.5,
    0,
    1615,
    0,
    210,
    1993,
    78
   ],
   [
    22.8,
    15.9,
    28.8,
    0,
    0,
    0,
    2.4,
    0,
    2037.2,
    0,
    211,
    1993,
    69
   ],
   [
    16.9,
    12.6,
    21.7,
    0,
    0,
    0,
    3.4,
    0,
    903.7,
    3.4,
    212,
    1993,
    89
   ],
   [
    15.5,
    10.6,
    20,
    0,
    0,
    0,
    2.7,
    0,
    1851.3,
    0,
    213,
    1993,
    76
   ],
   [
    18.2,
    10.6,
    25.1,
    0,
    0,
    0,
    2.5,
    0,
    2164.3,
    0.1,
    214,
    1993,
    68
   ],
   [
    20.8,
    13,
    27.3,
    0,
    0,
    0,
    2.2,
    0,
    2153.9,
    1.6,
    215,
    1993,
    67
   ],
   [
    18.8,
    14.2,
    24,
    0,
    0,
    0,
    1.3,
    0,
    1819.9,
    0,
    216,
    1993,
    79
   ],
   [
    17.4,
    13.5,
    21.3,
    0,
    0,
    0,
    1.3,
    0,
    884.9,
    0.1,
    217,
    1993,
    91
   ],
   [
    15.2,
    13.5,
    16.9,
    0,
    0,
    0,
    5.9,
    0,
    1096.3,
    10.4,
    218,
    1993,
    87
   ],
   [
    15.6,
    12.6,
    19.3,
    0,
    0,
    0,
    5.4,
    0,
    1507.8,
    0.3,
    219,
    1993,
    78
   ],
   [
    16.4,
    13.3,
    19.3,
    0,
    0,
    0,
    1.6,
    0,
    935,
    1.5,
    220,
    1993,
    88
   ],
   [
    16.7,
    11.9,
    20.9,
    0,
    0,
    0,
    2.1,
    0,
    1665.4,
    2.2,
    221,
    1993,
    85
   ],
   [
    14.9,
    10.9,
    18.6,
    0,
    0,
    0,
    3.9,
    0,
    959.1,
    8.6,
    222,
    1993,
    90
   ],
   [
    13.8,
    9.1,
    17.6,
    0,
    0,
    0,
    4.2,
    0,
    1886.8,
    0.8,
    223,
    1993,
    71
   ],
   [
    19.5,
    12.9,
    24.6,
    0,
    0,
    0,
    4.4,
    0,
    1745.9,
    0,
    224,
    1993,
    67
   ],
   [
    15.5,
    9.7,
    19.2,
    0,
    0,
    0,
    4.1,
    0,
    1967.4,
    0.1,
    225,
    1993,
    70
   ],
   [
    16.8,
    7.3,
    25,
    0,
    0,
    0,
    2.9,
    0,
    2331.8,
    0,
    226,
    1993,
    65
   ],
   [
    21.6,
    13,
    30.5,
    0,
    0,
    0,
    2.1,
    0,
    1845.8,
    0,
    227,
    1993,
    72
   ],
   [
    21.1,
    16,
    26.3,
    0,
    0,
    0,
    2.5,
    0,
    1757.5,
    0,
    228,
    1993,
    74
   ],
   [
    16.5,
    10.7,
    19.6,
    0,
    0,
    0,
    3.6,
    0,
    2339.5,
    0,
    229,
    1993,
    65
   ],
   [
    13.8,
    8.5,
    18,
    0,
    0,
    0,
    3.2,
    0,
    1544.4,
    0,
    230,
    1993,
    73
   ],
   [
    14.1,
    9.8,
    19.1,
    0,
    0,
    0,
    2,
    0,
    1350.2,
    0,
    231,
    1993,
    79
   ],
   [
    16.8,
    9.4,
    22.9,
    0,
    0,
    0,
    2.9,
    0,
    1777.3,
    0,
    232,
    1993,
    67
   ],
   [
    16.5,
    11.9,
    20.4,
    0,
    0,
    0,
    4.5,
    0,
    1337.5,
    0,
    233,
    1993,
    77
   ],
   [
    14.7,
    10.5,
    19.3,
    0,
    0,
    0,
    2.6,
    0,
    1127.5,
    2.3,
    234,
    1993,
    80
   ],
   [
    12.7,
    10,
    16.7,
    0,
    0,
    0,
    4,
    0,
    1571.8,
    0.1,
    235,
    1993,
    73
   ],
   [
    12.9,
    7.9,
    17.7,
    0,
    0,
    0,
    4.2,
    0,
    1612.8,
    0,
    236,
    1993,
    74
   ],
   [
    12.5,
    9.8,
    17.6,
    0,
    0,
    0,
    3.9,
    0,
    1395.7,
    0,
    237,
    1993,
    81
   ],
   [
    12.3,
    9.8,
    16.3,
    0,
    0,
    0,
    2.5,
    0,
    1377.5,
    10.5,
    238,
    1993,
    87
   ],
   [
    11.3,
    7.7,
    16,
    0,
    0,
    0,
    1.4,
    0,
    986.6,
    8.6,
    239,
    1993,
    90
   ],
   [
    11.5,
    6.8,
    16,
    0,
    0,
    0,
    2.2,
    0,
    1878.6,
    0,
    240,
    1993,
    79
   ],
   [
    12.2,
    5.4,
    18.1,
    0,
    0,
    0,
    3,
    0,
    1640.3,
    0,
    241,
    1993,
    75
   ],
   [
    11.7,
    9.2,
    13.7,
    0,
    0,
    0,
    4.9,
    0,
    620.9,
    5.5,
    242,
    1993,
    92
   ],
   [
    11.8,
    8.8,
    14.8,
    0,
    0,
    0,
    3.3,
    0,
    732,
    2.2,
    243,
    1993,
    90
   ],
   [
    13.3,
    9.5,
    16,
    0,
    0,
    0,
    2.8,
    0,
    1145.5,
    2.2,
    244,
    1993,
    90
   ],
   [
    11.2,
    7,
    12.9,
    0,
    0,
    0,
    3.6,
    0,
    764.8,
    2.4,
    245,
    1993,
    96
   ],
   [
    13.1,
    11.3,
    14.8,
    0,
    0,
    0,
    4,
    0,
    989.9,
    5.7,
    246,
    1993,
    92
   ],
   [
    11.1,
    7.9,
    14.6,
    0,
    0,
    0,
    3.6,
    0,
    1132.3,
    8.7,
    247,
    1993,
    86
   ],
   [
    10.2,
    6.4,
    15,
    0,
    0,
    0,
    2.3,
    0,
    1388,
    5.7,
    248,
    1993,
    84
   ],
   [
    10.2,
    5.8,
    13.6,
    0,
    0,
    0,
    4.2,
    0,
    1023.3,
    0.9,
    249,
    1993,
    89
   ],
   [
    11.5,
    7.4,
    16.1,
    0,
    0,
    0,
    1.8,
    0,
    1065.7,
    0,
    250,
    1993,
    85
   ],
   [
    12.1,
    5.7,
    18.6,
    0,
    0,
    0,
    3,
    0,
    1132.1,
    1.4,
    251,
    1993,
    88
   ],
   [
    17.4,
    13.2,
    22.4,
    0,
    0,
    0,
    2.2,
    0,
    1446.5,
    11.7,
    252,
    1993,
    85
   ],
   [
    14.9,
    12,
    17.2,
    0,
    0,
    0,
    2.4,
    0,
    600.2,
    5,
    253,
    1993,
    97
   ],
   [
    14.4,
    10.8,
    18.5,
    0,
    0,
    0,
    3,
    0,
    1151.2,
    0,
    254,
    1993,
    87
   ],
   [
    10.7,
    7.9,
    13.4,
    0,
    0,
    0,
    1.4,
    0,
    404.3,
    0,
    255,
    1993,
    96
   ],
   [
    10.2,
    8.9,
    11.8,
    0,
    0,
    0,
    4.6,
    0,
    895.6,
    1.2,
    256,
    1993,
    85
   ],
   [
    12,
    9.8,
    14.6,
    0,
    0,
    0,
    3.3,
    0,
    590,
    13.7,
    257,
    1993,
    93
   ],
   [
    13.8,
    11.7,
    17.2,
    0,
    0,
    0,
    4.5,
    0,
    860,
    2,
    258,
    1993,
    79
   ],
   [
    11.6,
    10.1,
    13.1,
    0,
    0,
    0,
    3.6,
    0,
    320,
    17.4,
    259,
    1993,
    97
   ],
   [
    8.2,
    6.7,
    9.8,
    0,
    0,
    0,
    3.4,
    0,
    618,
    0.8,
    260,
    1993,
    93
   ],
   [
    8.3,
    6.5,
    10.7,
    0,
    0,
    0,
    2.7,
    0,
    715.1,
    1.4,
    261,
    1993,
    93
   ],
   [
    7.8,
    2.3,
    13.5,
    0,
    0,
    0,
    1.9,
    0,
    1711.8,
    0,
    262,
    1993,
    78
   ],
   [
    10.1,
    3.1,
    17.7,
    0,
    0,
    0,
    3.6,
    0,
    1567.6,
    0,
    263,
    1993,
    77
   ],
   [
    15.2,
    7.3,
    22.8,
    0,
    0,
    0,
    3.1,
    0,
    1181.3,
    0,
    264,
    1993,
    84
   ],
   [
    16.5,
    12,
    21.9,
    0,
    0,
    0,
    2.2,
    0,
    899.1,
    0.3,
    265,
    1993,
    91
   ],
   [
    15.4,
    12.4,
    17.8,
    0,
    0,
    0,
    3.6,
    0,
    803.2,
    0,
    266,
    1993,
    91
   ],
   [
    13.4,
    11.2,
    15.3,
    0,
    0,
    0,
    3.3,
    0,
    402.4,
    0,
    267,
    1993,
    92
   ],
   [
    15.6,
    10.8,
    21.3,
    0,
    0,
    0,
    3.1,
    0,
    1122.4,
    0.3,
    268,
    1993,
    86
   ],
   [
    12.4,
    9.6,
    14.8,
    0,
    0,
    0,
    3,
    0,
    524.9,
    12.9,
    269,
    1993,
    90
   ],
   [
    10.9,
    10,
    11.9,
    0,
    0,
    0,
    2.8,
    0,
    439.2,
    0,
    270,
    1993,
    87
   ],
   [
    11.1,
    7.6,
    14.1,
    0,
    0,
    0,
    1.3,
    0,
    756.5,
    0,
    271,
    1993,
    92
   ],
   [
    9.1,
    4.6,
    13.3,
    0,
    0,
    0,
    3,
    0,
    1397.8,
    0,
    272,
    1993,
    79
   ],
   [
    6,
    2.2,
    10.5,
    0,
    0,
    0,
    3.9,
    0,
    1340.9,
    0,
    273,
    1993,
    74
   ],
   [
    6.2,
    1.6,
    12.2,
    0,
    0,
    0,
    5.2,
    0,
    980.8,
    0,
    274,
    1993,
    78
   ],
   [
    11.9,
    6.5,
    17.4,
    0,
    0,
    0,
    4.8,
    0,
    1023.2,
    0,
    275,
    1993,
    80
   ],
   [
    12.7,
    10.7,
    15.4,
    0,
    0,
    0,
    5.6,
    0,
    386.5,
    1.9,
    276,
    1993,
    79
   ],
   [
    13,
    10,
    17.8,
    0,
    0,
    0,
    4.6,
    0,
    1219.7,
    0,
    277,
    1993,
    78
   ],
   [
    14.2,
    9.4,
    19.7,
    0,
    0,
    0,
    2.4,
    0,
    1089,
    0,
    278,
    1993,
    82
   ],
   [
    12.1,
    8.4,
    16.3,
    0,
    0,
    0,
    2.3,
    0,
    730.2,
    0,
    279,
    1993,
    91
   ],
   [
    12.7,
    8.4,
    17.5,
    0,
    0,
    0,
    2,
    0,
    850.1,
    0,
    280,
    1993,
    89
   ],
   [
    10.8,
    4,
    17.1,
    0,
    0,
    0,
    3.2,
    0,
    845,
    0.1,
    281,
    1993,
    90
   ],
   [
    12.4,
    8.6,
    14.2,
    0,
    0,
    0,
    3.3,
    0,
    290.3,
    6,
    282,
    1993,
    96
   ],
   [
    11,
    7.8,
    15.5,
    0,
    0,
    0,
    3.4,
    0,
    1069.3,
    0,
    283,
    1993,
    82
   ],
   [
    11.1,
    6.2,
    15.5,
    0,
    0,
    0,
    2.6,
    0,
    484.8,
    0.4,
    284,
    1993,
    94
   ],
   [
    13.4,
    7.6,
    18.9,
    0,
    0,
    0,
    4.1,
    0,
    522.7,
    0.3,
    285,
    1993,
    86
   ],
   [
    13.6,
    10.9,
    17.3,
    0,
    0,
    0,
    5.3,
    0,
    962.5,
    0,
    286,
    1993,
    80
   ],
   [
    12,
    9.4,
    13.6,
    0,
    0,
    0,
    3.7,
    0,
    356.4,
    1.4,
    287,
    1993,
    91
   ],
   [
    6.2,
    2.5,
    8.8,
    0,
    0,
    0,
    3.1,
    0,
    310.9,
    1.4,
    288,
    1993,
    95
   ],
   [
    4.9,
    1.6,
    8.6,
    0,
    0,
    0,
    3.6,
    0,
    828.7,
    0,
    289,
    1993,
    88
   ],
   [
    4.4,
    0.7,
    9.3,
    0,
    0,
    0,
    3,
    0,
    1077.7,
    0,
    290,
    1993,
    82
   ],
   [
    1.5,
    -2.5,
    7.8,
    0,
    0,
    0,
    1.8,
    0,
    973.4,
    0,
    291,
    1993,
    85
   ],
   [
    1.2,
    -2.9,
    9.5,
    0,
    0,
    0,
    1.1,
    0,
    900,
    0,
    292,
    1993,
    79
   ],
   [
    5.2,
    5,
    8.7,
    0,
    0,
    0,
    3.1,
    0,
    570,
    1,
    293,
    1993,
    85
   ],
   [
    6.2,
    4.3,
    8.1,
    0,
    0,
    0,
    1.1,
    0,
    420,
    0.3,
    294,
    1993,
    86
   ],
   [
    6.8,
    5,
    9,
    0,
    0,
    0,
    8.6,
    0,
    400,
    0,
    295,
    1993,
    88
   ],
   [
    5.6,
    4.8,
    6.3,
    0,
    0,
    0,
    6.1,
    0,
    240,
    0,
    296,
    1993,
    82
   ],
   [
    5.7,
    1,
    7.5,
    0,
    0,
    0,
    4.2,
    0,
    230,
    0,
    297,
    1993,
    81
   ],
   [
    4.7,
    1.8,
    8.9,
    0,
    0,
    0,
    2.5,
    0,
    380,
    0,
    298,
    1993,
    87
   ],
   [
    5.4,
    5.5,
    7.8,
    0,
    0,
    0,
    1.1,
    0,
    210,
    0,
    299,
    1993,
    93
   ],
   [
    7.2,
    6.4,
    8.6,
    0,
    0,
    0,
    0,
    0,
    200,
    0,
    300,
    1993,
    93
   ],
   [
    6.9,
    5.3,
    8.1,
    0,
    0,
    0,
    3.1,
    0,
    200,
    0,
    301,
    1993,
    87
   ],
   [
    3.6,
    0.1,
    5.5,
    0,
    0,
    0,
    2.1,
    0,
    131.4,
    1.5,
    302,
    1993,
    90
   ],
   [
    1.9,
    -1.2,
    7.8,
    0,
    0,
    0,
    2,
    0,
    822.5,
    0,
    303,
    1993,
    89
   ],
   [
    0.3,
    -3.1,
    5.8,
    0,
    0,
    0,
    0.8,
    0,
    564,
    0,
    304,
    1993,
    95
   ],
   [
    -0.5,
    -2.7,
    4.6,
    0,
    0,
    0,
    0.6,
    0,
    496.6,
    0,
    305,
    1993,
    98
   ],
   [
    0,
    -3,
    1.6,
    0,
    0,
    0,
    1.8,
    0,
    286.1,
    0,
    306,
    1993,
    99
   ],
   [
    0.3,
    -1,
    1.2,
    0,
    0,
    0,
    2.1,
    0,
    253,
    0,
    307,
    1993,
    99
   ],
   [
    1.3,
    0.2,
    2.7,
    0,
    0,
    0,
    1.8,
    0,
    145.5,
    0,
    308,
    1993,
    99
   ],
   [
    2.6,
    0.6,
    5,
    0,
    0,
    0,
    3.3,
    0,
    204.9,
    0,
    309,
    1993,
    99
   ],
   [
    2.2,
    0.6,
    4.1,
    0,
    0,
    0,
    5.4,
    0,
    128,
    0,
    310,
    1993,
    98
   ],
   [
    4.9,
    4.5,
    5.2,
    0,
    0,
    0,
    2.3,
    0,
    114,
    4.8,
    311,
    1993,
    98
   ],
   [
    5.5,
    4.8,
    6.2,
    0,
    0,
    0,
    1.6,
    0,
    181.1,
    1.1,
    312,
    1993,
    98
   ],
   [
    5.5,
    4.8,
    6.2,
    0,
    0,
    0,
    3.4,
    0,
    141.1,
    3.1,
    313,
    1993,
    97
   ],
   [
    5.1,
    4,
    6.9,
    0,
    0,
    0,
    2.3,
    0,
    240.4,
    0,
    314,
    1993,
    96
   ],
   [
    2.5,
    1.2,
    5.5,
    0,
    0,
    0,
    4.8,
    0,
    224,
    0.5,
    315,
    1993,
    91
   ],
   [
    3.7,
    0.8,
    6.4,
    0,
    0,
    0,
    3.2,
    0,
    345.4,
    0,
    316,
    1993,
    94
   ],
   [
    1.5,
    -2.7,
    6.3,
    0,
    0,
    0,
    1.6,
    0,
    510.1,
    0,
    317,
    1993,
    95
   ],
   [
    0.8,
    -1.4,
    2.7,
    0,
    0,
    0,
    4.1,
    0,
    175.3,
    7.5,
    318,
    1993,
    97
   ],
   [
    1.2,
    -0.1,
    3.3,
    0,
    0,
    0,
    3.5,
    0,
    76,
    1.1,
    319,
    1993,
    97
   ],
   [
    1.1,
    0.6,
    1.7,
    0,
    0,
    0,
    2,
    0,
    134.2,
    0,
    320,
    1993,
    93
   ],
   [
    -0.1,
    -2.6,
    1.2,
    0,
    0,
    0,
    0.7,
    0,
    183.8,
    0,
    321,
    1993,
    93
   ],
   [
    -2.5,
    -4.2,
    -1.4,
    0,
    0,
    0,
    0.9,
    0,
    357.6,
    0,
    322,
    1993,
    94
   ],
   [
    -1.3,
    -3.1,
    0.2,
    0,
    0,
    0,
    2.6,
    0,
    158.5,
    0.5,
    323,
    1993,
    94
   ],
   [
    -4.5,
    -8.1,
    -0.4,
    0,
    0,
    0,
    4.9,
    0,
    345.6,
    0.3,
    324,
    1993,
    88
   ],
   [
    -7.3,
    -8.4,
    -5.8,
    0,
    0,
    0,
    5.9,
    0,
    241.2,
    0,
    325,
    1993,
    83
   ],
   [
    -4.4,
    -5.5,
    -3.3,
    0,
    0,
    0,
    3.1,
    0,
    181.1,
    6,
    326,
    1993,
    94
   ],
   [
    -4.8,
    -10.3,
    -3.2,
    0,
    0,
    0,
    3.3,
    0,
    406.3,
    0,
    327,
    1993,
    92
   ],
   [
    -8.6,
    -13,
    -5.3,
    0,
    0,
    0,
    1.8,
    0,
    273.4,
    0,
    328,
    1993,
    96
   ],
   [
    -5.6,
    -7.6,
    -2.7,
    0,
    0,
    0,
    0.8,
    0,
    402.5,
    0,
    329,
    1993,
    98
   ],
   [
    -5.3,
    -8.3,
    -2.6,
    0,
    0,
    0,
    0.8,
    0,
    152,
    0,
    330,
    1993,
    99
   ],
   [
    -2.9,
    -3.6,
    -2.1,
    0,
    0,
    0,
    2.5,
    0,
    151.3,
    0,
    331,
    1993,
    92
   ],
   [
    -3.1,
    -5,
    -1.7,
    0,
    0,
    0,
    2.9,
    0,
    244.6,
    0.1,
    332,
    1993,
    92
   ],
   [
    -5.1,
    -6.9,
    -4.6,
    0,
    0,
    0,
    1.5,
    0,
    176.8,
    0,
    333,
    1993,
    94
   ],
   [
    -8.3,
    -10.3,
    -6.4,
    0,
    0,
    0,
    2.9,
    0,
    175.3,
    0,
    334,
    1993,
    97
   ],
   [
    -6.6,
    -7.6,
    -5.7,
    0,
    0,
    0,
    5.2,
    0,
    226.5,
    0,
    335,
    1993,
    96
   ],
   [
    -0.7,
    -6.4,
    3.9,
    0,
    0,
    0,
    5.7,
    0,
    206.9,
    0.8,
    336,
    1993,
    94
   ],
   [
    6.2,
    3.6,
    8.5,
    0,
    0,
    0,
    6.6,
    0,
    114.5,
    0,
    337,
    1993,
    94
   ],
   [
    6.9,
    4.9,
    8.8,
    0,
    0,
    0,
    6.3,
    0,
    303,
    0,
    338,
    1993,
    82
   ],
   [
    5.1,
    3.3,
    8.4,
    0,
    0,
    0,
    6.1,
    0,
    196.6,
    0,
    339,
    1993,
    85
   ],
   [
    6.1,
    4.9,
    6.9,
    0,
    0,
    0,
    4.6,
    0,
    109.4,
    0,
    340,
    1993,
    91
   ],
   [
    3.2,
    1.3,
    4.9,
    0,
    0,
    0,
    5.8,
    0,
    321.8,
    3.1,
    341,
    1993,
    87
   ],
   [
    2.4,
    1,
    3.3,
    0,
    0,
    0,
    5.7,
    0,
    139.3,
    3.5,
    342,
    1993,
    90
   ],
   [
    5.8,
    3,
    7.7,
    0,
    0,
    0,
    9.2,
    0,
    119.8,
    19,
    343,
    1993,
    88
   ],
   [
    4.1,
    1.2,
    5.6,
    0,
    0,
    0,
    6.3,
    0,
    284.5,
    3.4,
    344,
    1993,
    90
   ],
   [
    4,
    2.3,
    5.6,
    0,
    0,
    0,
    7.3,
    0,
    184.1,
    0.5,
    345,
    1993,
    82
   ],
   [
    3.1,
    2.1,
    3.9,
    0,
    0,
    0,
    6.9,
    0,
    161.7,
    1.5,
    346,
    1993,
    91
   ],
   [
    1.9,
    -0.1,
    6.3,
    0,
    0,
    0,
    3.5,
    0,
    78.7,
    5.3,
    347,
    1993,
    98
   ],
   [
    2.3,
    -1.1,
    5.8,
    0,
    0,
    0,
    3.3,
    0,
    103,
    1.6,
    348,
    1993,
    96
   ],
   [
    1,
    -1.1,
    2.9,
    0,
    0,
    0,
    2.7,
    0,
    202.6,
    0.8,
    349,
    1993,
    92
   ],
   [
    4.3,
    2.6,
    5.5,
    0,
    0,
    0,
    6.8,
    0,
    206,
    2.4,
    350,
    1993,
    79
   ],
   [
    4.2,
    3,
    5.2,
    0,
    0,
    0,
    8.2,
    0,
    166.6,
    1.4,
    351,
    1993,
    81
   ],
   [
    3.5,
    0.3,
    6.5,
    0,
    0,
    0,
    5,
    0,
    242,
    0.3,
    352,
    1993,
    95
   ],
   [
    8.5,
    6.3,
    10.9,
    0,
    0,
    0,
    9.3,
    0,
    127,
    7.4,
    353,
    1993,
    83
   ],
   [
    4,
    2.1,
    7.2,
    0,
    0,
    0,
    6.2,
    0,
    149.5,
    0,
    354,
    1993,
    77
   ],
   [
    0.3,
    -1.5,
    2.1,
    0,
    0,
    0,
    1.2,
    0,
    223.6,
    0.1,
    355,
    1993,
    98
   ],
   [
    0.5,
    -1.1,
    1.2,
    0,
    0,
    0,
    5.5,
    0,
    178.1,
    1.6,
    356,
    1993,
    93
   ],
   [
    2.4,
    0.8,
    3.6,
    0,
    0,
    0,
    6.5,
    0,
    193.8,
    5.1,
    357,
    1993,
    88
   ],
   [
    0.7,
    0.1,
    1.2,
    0,
    0,
    0,
    2.9,
    0,
    85.7,
    2.4,
    358,
    1993,
    98
   ],
   [
    -0.1,
    -0.4,
    0.5,
    0,
    0,
    0,
    0.2,
    0,
    59.9,
    9,
    359,
    1993,
    99
   ],
   [
    0.1,
    -0.5,
    0.5,
    0,
    0,
    0,
    1.2,
    0,
    61,
    3.2,
    360,
    1993,
    99
   ],
   [
    -1.1,
    -1.9,
    0.3,
    0,
    0,
    0,
    1.8,
    0,
    235.2,
    0,
    361,
    1993,
    98
   ],
   [
    -1.9,
    -5.7,
    -0.6,
    0,
    0,
    0,
    2.2,
    0,
    244.4,
    0,
    362,
    1993,
    97
   ],
   [
    -4.8,
    -6.5,
    -1.4,
    0,
    0,
    0,
    1.4,
    0,
    357.8,
    0,
    363,
    1993,
    96
   ],
   [
    2.3,
    -0.7,
    5.5,
    0,
    0,
    0,
    6.2,
    0,
    307.5,
    2.5,
    364,
    1993,
    93
   ],
   [
    6,
    4.4,
    8.5,
    0,
    0,
    0,
    6,
    0,
    229.7,
    2.2,
    365,
    1993,
    88
   ]
  ]
 },
 "capillary_rise_rate": {
  "columns": [
   "id",
   "soil_type",
   "distance",
   "capillary_rate"
  ],
  "rows": [
   {
    "id": 10,
    "soil_type": "Su3",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 13,
    "soil_type": "Sl3",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 12,
    "soil_type": "Sl2",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 11,
    "soil_type": "Su4",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 9,
    "soil_type": "Su2",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 14,
    "soil_type": "Sl4",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 15,
    "soil_type": "Slu",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 16,
    "soil_type": "St2",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 17,
    "soil_type": "St3",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 18,
    "soil_type": "fS",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 19,
    "soil_type": "gS",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 20,
    "soil_type": "mS",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 21,
    "soil_type": "Ss",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 22,
    "soil_type": "Us",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 23,
    "soil_type": "Uu",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 24,
    "soil_type": "Uls",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 25,
    "soil_type": "Ut2",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 26,
    "soil_type": "Ut3",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 27,
    "soil_type": "Ut4",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 28,
    "soil_type": "Ls2",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 29,
    "soil_type": "Ls3",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 30,
    "soil_type": "Ls4",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 31,
    "soil_type": "Lt2",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 32,
    "soil_type": "Lt3",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 33,
    "soil_type": "Lu",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 34,
    "soil_type": "Lts",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 35,
    "soil_type": "Tt",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 36,
    "soil_type": "Tl",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 37,
    "soil_type": "Tu2",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 38,
    "soil_type": "Tu3",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 39,
    "soil_type": "Tu4",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 40,
    "soil_type": "Ts2",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 41,
    "soil_type": "Ts3",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 42,
    "soil_type": "Ts4",
    "distance": 1,
    "capillary_rate": 0.0055
   },
   {
    "id": 43,
    "soil_type": "Su2",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 44,
    "soil_type": "Su3",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 45,
    "soil_type": "Su4",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 46,
    "soil_type": "Sl2",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 47,
    "soil_type": "Sl3",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 48,
    "soil_type": "Sl4",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 49,
    "soil_type": "Slu",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 50,
    "soil_type": "St2",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 51,
    "soil_type": "St3",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 52,
    "soil_type": "fS",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 53,
    "soil_type": "gS",
    "distance": 2,
    "capillary_rate": 0.005
   },
   {
    "id": 54,
    "soil_type": "mS",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 55,
    "soil_type": "Ss",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 56,
    "soil_type": "Us",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 57,
    "soil_type": "Uu",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 58,
    "soil_type": "Uls",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 59,
    "soil_type": "Ut2",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 60,
    "soil_type": "Ut3",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 61,
    "soil_type": "Ut4",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 62,
    "soil_type": "Ls2",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 63,
    "soil_type": "Ls3",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 64,
    "soil_type": "Ls4",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 65,
    "soil_type": "Lt2",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 66,
    "soil_type": "Lt3",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 67,
    "soil_type": "Lu",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 68,
    "soil_type": "Lts",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 69,
    "soil_type": "Tt",
    "distance": 2,
    "capillary_rate": 0.005
   },
   {
    "id": 70,
    "soil_type": "Tl",
    "distance": 2,
    "capillary_rate": 0.005
   },
   {
    "id": 71,
    "soil_type": "Tu2",
    "distance": 2,
    "capillary_rate": 0.005
   },
   {
    "id": 72,
    "soil_type": "Tu3",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 73,
    "soil_type": "Tu4",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 74,
    "soil_type": "Ts2",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 75,
    "soil_type": "Ts3",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 76,
    "soil_type": "Ts4",
    "distance": 2,
    "capillary_rate": 0.0055
   },
   {
    "id": 77,
    "soil_type": "Su2",
    "distance": 3,
    "capillary_rate": 0.0055
   },
   {
    "id": 78,
    "soil_type": "Su3",
    "distance": 3,
    "capillary_rate": 0.0055
   },
   {
    "id": 79,
    "soil_type": "Su4",
    "distance": 3,
    "capillary_rate": 0.0055
   },
   {
    "id": 80,
    "soil_type": "Sl2",
    "distance": 3,
    "capillary_rate": 0.005
   },
   {
    "id": 81,
    "soil_type": "Sl3",
    "distance": 3,
    "capillary_rate": 0.0055
   },
   {
    "id": 82,
    "soil_type": "Sl4",
    "distance": 3,
    "capillary_rate": 0.0055
   },
   {
    "id": 83,
    "soil_type": "Slu",
    "distance": 3,
    "capillary_rate": 0.0055
   },
   {
    "id": 84,
    "soil_type": "St2",
    "distance": 3,
    "capillary_rate": 0.005
   },
   {
    "id": 85,
    "soil_type": "St3",
    "distance": 3,
    "capillary_rate": 0.005
   },
   {
    "id": 86,
    "soil_type": "fS",
    "distance": 3,
    "capillary_rate": 0.0055
   },
   {
    "id": 87,
    "soil_type": "gS",
    "distance": 3,
    "capillary_rate": 0.0014
   },
   {
    "id": 88,
    "soil_type": "mS",
    "distance": 3,
    "capillary_rate": 0.005
   },
   {
    "id": 89,
    "soil_type": "Ss",
    "distance": 3,
    "capillary_rate": 0.005
   },
   {
    "id": 90,
    "soil_type": "Us",
    "distance": 3,
    "capillary_rate": 0.0055
   },
   {
    "id": 91,
    "soil_type": "Uu",
    "distance": 3,
    "capillary_rate": 0.0055
   },
   {
    "id": 92,
    "soil_type": "Uls",
    "distance": 3,
    "capillary_rate": 0.0055
   },
   {
    "id": 93,
    "soil_type": "Ut2",
    "distance": 3,
    "capillary_rate": 0.0055
   },
   {
    "id": 94,
    "soil_type": "Ut3",
    "distance": 3,
    "capillary_rate": 0.0055
   },
   {
    "id": 95,
    "soil_type": "Ut4",
    "distance": 3,
    "capillary_rate": 0.0055
   },
   {
    "id": 96,
    "soil_type": "Ls2",
    "distance": 3,
    "capillary_rate": 0.0055
   },
   {
    "id": 97,
    "soil_type": "Ls3",
    "distance": 3,
    "capillary_rate": 0.0055
   },
   {
    "id": 98,
    "soil_type": "Ls4",
    "distance": 3,
    "capillary_rate": 0.0055
   },
   {
    "id": 99,
    "soil_type": "Lt2",
    "distance": 3,
    "capillary_rate": 0.0055
   },
   {
    "id": 100,
    "soil_type": "Lt3",
    "distance": 3,
    "capillary_rate": 0.0055
   },
   {
    "id": 101,
    "soil_type": "Lu",
    "distance": 3,
    "capillary_rate": 0.0055
   },
   {
    "id": 102,
    "soil_type": "Lts",
    "distance": 3,
    "capillary_rate": 0.0055
   },
   {
    "id": 103,
    "soil_type": "Tt",
    "distance": 3,
    "capillary_rate": 0.002
   },
   {
    "id": 104,
    "soil_type": "Tl",
    "distance": 3,
    "capillary_rate": 0.0026
   },
   {
    "id": 105,
    "soil_type": "Tu2",
    "distance": 3,
    "capillary_rate": 0.0026
   },
   {
    "id": 106,
    "soil_type": "Tu3",
    "distance": 3,
    "capillary_rate": 0.005
   },
   {
    "id": 107,
    "soil_type": "Tu4",
    "distance": 3,
    "capillary_rate": 0.0055
   },
   {
    "id": 108,
    "soil_type": "Ts2",
    "distance": 3,
    "capillary_rate": 0.005
   },
   {
    "id": 109,
    "soil_type": "Ts3",
    "distance": 3,
    "capillary_rate": 0.005
   },
   {
    "id": 110,
    "soil_type": "Ts4",
    "distance": 3,
    "capillary_rate": 0.005
   },
   {
    "id": 111,
    "soil_type": "Su2",
    "distance": 4,
    "capillary_rate": 0.0055
   },
   {
    "id": 112,
    "soil_type": "Su3",
    "distance": 4,
    "capillary_rate": 0.0055
   },
   {
    "id": 113,
    "soil_type": "Su4",
    "distance": 4,
    "capillary_rate": 0.0055
   },
   {
    "id": 114,
    "soil_type": "Sl2",
    "distance": 4,
    "capillary_rate": 0.0026
   },
   {
    "id": 115,
    "soil_type": "Sl3",
    "distance": 4,
    "capillary_rate": 0.005
   },
   {
    "id": 116,
    "soil_type": "Sl4",
    "distance": 4,
    "capillary_rate": 0.005
   },
   {
    "id": 117,
    "soil_type": "Slu",
    "distance": 4,
    "capillary_rate": 0.0055
   },
   {
    "id": 118,
    "soil_type": "St2",
    "distance": 4,
    "capillary_rate": 0.0029
   },
   {
    "id": 119,
    "soil_type": "St3",
    "distance": 4,
    "capillary_rate": 0.0029
   },
   {
    "id": 120,
    "soil_type": "fS",
    "distance": 4,
    "capillary_rate": 0.0055
   },
   {
    "id": 121,
    "soil_type": "gS",
    "distance": 4,
    "capillary_rate": 0.0005
   },
   {
    "id": 122,
    "soil_type": "mS",
    "distance": 4,
    "capillary_rate": 0.0016
   },
   {
    "id": 123,
    "soil_type": "Ss",
    "distance": 4,
    "capillary_rate": 0.0016
   },
   {
    "id": 124,
    "soil_type": "Us",
    "distance": 4,
    "capillary_rate": 0.0055
   },
   {
    "id": 125,
    "soil_type": "Uu",
    "distance": 4,
    "capillary_rate": 0.0055
   },
   {
    "id": 126,
    "soil_type": "Uls",
    "distance": 4,
    "capillary_rate": 0.0055
   },
   {
    "id": 127,
    "soil_type": "Ut2",
    "distance": 4,
    "capillary_rate": 0.0055
   },
   {
    "id": 128,
    "soil_type": "Ut3",
    "distance": 4,
    "capillary_rate": 0.0055
   },
   {
    "id": 129,
    "soil_type": "Ut4",
    "distance": 4,
    "capillary_rate": 0.0055
   },
   {
    "id": 130,
    "soil_type": "Ls2",
    "distance": 4,
    "capillary_rate": 0.0055
   },
   {
    "id": 131,
    "soil_type": "Ls3",
    "distance": 4,
    "capillary_rate": 0.0055
   },
   {
    "id": 132,
    "soil_type": "Ls4",
    "distance": 4,
    "capillary_rate": 0.0055
   },
   {
    "id": 133,
    "soil_type": "Lt2",
    "distance": 4,
    "capillary_rate": 0.0055
   },
   {
    "id": 134,
    "soil_type": "Lt3",
    "distance": 4,
    "capillary_rate": 0.0055
   },
   {
    "id": 135,
    "soil_type": "Lu",
    "distance": 4,
    "capillary_rate": 0.0055
   },
   {
    "id": 136,
    "soil_type": "Lts",
    "distance": 4,
    "capillary_rate": 0.0055
   },
   {
    "id": 137,
    "soil_type": "Tt",
    "distance": 4,
    "capillary_rate": 0.001
   },
   {
    "id": 138,
    "soil_type": "Tl",
    "distance": 4,
    "capillary_rate": 0.0013
   },
   {
    "id": 139,
    "soil_type": "Tu2",
    "distance": 4,
    "capillary_rate": 0.0013
   },
   {
    "id": 140,
    "soil_type": "Tu3",
    "distance": 4,
    "capillary_rate": 0.0024
   },
   {
    "id": 141,
    "soil_type": "Tu4",
    "distance": 4,
    "capillary_rate": 0.005
   },
   {
    "id": 142,
    "soil_type": "Ts2",
    "distance": 4,
    "capillary_rate": 0.002
   },
   {
    "id": 143,
    "soil_type": "Ts3",
    "distance": 4,
    "capillary_rate": 0.0029
   },
   {
    "id": 144,
    "soil_type": "Ts4",
    "distance": 4,
    "capillary_rate": 0.0029
   },
   {
    "id": 145,
    "soil_type": "Su2",
    "distance": 5,
    "capillary_rate": 0.005
   },
   {
    "id": 146,
    "soil_type": "Su3",
    "distance": 5,
    "capillary_rate": 0.0055
   },
   {
    "id": 147,
    "soil_type": "Su4",
    "distance": 5,
    "capillary_rate": 0.0055
   },
   {
    "id": 148,
    "soil_type": "Sl2",
    "distance": 5,
    "capillary_rate": 0.0013
   },
   {
    "id": 149,
    "soil_type": "Sl3",
    "distance": 5,
    "capillary_rate": 0.0025
   },
   {
    "id": 150,
    "soil_type": "Sl4",
    "distance": 5,
    "capillary_rate": 0.0036
   },
   {
    "id": 151,
    "soil_type": "Slu",
    "distance": 5,
    "capillary_rate": 0.005
   },
   {
    "id": 152,
    "soil_type": "St2",
    "distance": 5,
    "capillary_rate": 0.0018
   },
   {
    "id": 153,
    "soil_type": "St3",
    "distance": 5,
    "capillary_rate": 0.0018
   },
   {
    "id": 154,
    "soil_type": "fS",
    "distance": 5,
    "capillary_rate": 0.005
   },
   {
    "id": 155,
    "soil_type": "gS",
    "distance": 5,
    "capillary_rate": 0.0002
   },
   {
    "id": 156,
    "soil_type": "mS",
    "distance": 5,
    "capillary_rate": 0.0009
   },
   {
    "id": 157,
    "soil_type": "Ss",
    "distance": 5,
    "capillary_rate": 0.0009
   },
   {
    "id": 158,
    "soil_type": "Us",
    "distance": 5,
    "capillary_rate": 0.0055
   },
   {
    "id": 159,
    "soil_type": "Uu",
    "distance": 5,
    "capillary_rate": 0.0055
   },
   {
    "id": 160,
    "soil_type": "Uls",
    "distance": 5,
    "capillary_rate": 0.0055
   },
   {
    "id": 161,
    "soil_type": "Ut2",
    "distance": 5,
    "capillary_rate": 0.0055
   },
   {
    "id": 162,
    "soil_type": "Ut3",
    "distance": 5,
    "capillary_rate": 0.0055
   },
   {
    "id": 163,
    "soil_type": "Ut4",
    "distance": 5,
    "capillary_rate": 0.0055
   },
   {
    "id": 164,
    "soil_type": "Ls2",
    "distance": 5,
    "capillary_rate": 0.0055
   },
   {
    "id": 165,
    "soil_type": "Ls3",
    "distance": 5,
    "capillary_rate": 0.0055
   },
   {
    "id": 166,
    "soil_type": "Ls4",
    "distance": 5,
    "capillary_rate": 0.0055
   },
   {
    "id": 167,
    "soil_type": "Lt2",
    "distance": 5,
    "capillary_rate": 0.005
   },
   {
    "id": 168,
    "soil_type": "Lt3",
    "distance": 5,
    "capillary_rate": 0.005
   },
   {
    "id": 169,
    "soil_type": "Lu",
    "distance": 5,
    "capillary_rate": 0.0055
   },
   {
    "id": 170,
    "soil_type": "Lts",
    "distance": 5,
    "capillary_rate": 0.0005
   },
   {
    "id": 171,
    "soil_type": "Tt",
    "distance": 5,
    "capillary_rate": 0.0006
   },
   {
    "id": 172,
    "soil_type": "Tl",
    "distance": 5,
    "capillary_rate": 0.0008
   },
   {
    "id": 173,
    "soil_type": "Tu2",
    "distance": 5,
    "capillary_rate": 0.0008
   },
   {
    "id": 174,
    "soil_type": "Tu3",
    "distance": 5,
    "capillary_rate": 0.0014
   },
   {
    "id": 175,
    "soil_type": "Tu4",
    "distance": 5,
    "capillary_rate": 0.0024
   },
   {
    "id": 176,
    "soil_type": "Ts2",
    "distance": 5,
    "capillary_rate": 0.0012
   },
   {
    "id": 177,
    "soil_type": "Ts3",
    "distance": 5,
    "capillary_rate": 0.0018
   },
   {
    "id": 178,
    "soil_type": "Ts4",
    "distance": 5,
    "capillary_rate": 0.0018
   },
   {
    "id": 179,
    "soil_type": "Su2",
    "distance": 6,
    "capillary_rate": 0.003
   },
   {
    "id": 180,
    "soil_type": "Su3",
    "distance": 6,
    "capillary_rate": 0.005
   },
   {
    "id": 181,
    "soil_type": "Su4",
    "distance": 6,
    "capillary_rate": 0.0055
   },
   {
    "id": 182,
    "soil_type": "Sl2",
    "distance": 6,
    "capillary_rate": 0.0008
   },
   {
    "id": 183,
    "soil_type": "Sl3",
    "distance": 6,
    "capillary_rate": 0.0016
   },
   {
    "id": 184,
    "soil_type": "Sl4",
    "distance": 6,
    "capillary_rate": 0.0024
   },
   {
    "id": 185,
    "soil_type": "Slu",
    "distance": 6,
    "capillary_rate": 0.0036
   },
   {
    "id": 186,
    "soil_type": "St2",
    "distance": 6,
    "capillary_rate": 0.0011
   },
   {
    "id": 187,
    "soil_type": "St3",
    "distance": 6,
    "capillary_rate": 0.0011
   },
   {
    "id": 188,
    "soil_type": "fS",
    "distance": 6,
    "capillary_rate": 0.0033
   },
   {
    "id": 189,
    "soil_type": "gS",
    "distance": 6,
    "capillary_rate": 0.0001
   },
   {
    "id": 190,
    "soil_type": "mS",
    "distance": 6,
    "capillary_rate": 0.0005
   },
   {
    "id": 191,
    "soil_type": "Ss",
    "distance": 6,
    "capillary_rate": 0.0005
   },
   {
    "id": 192,
    "soil_type": "Us",
    "distance": 6,
    "capillary_rate": 0.0055
   },
   {
    "id": 193,
    "soil_type": "Uu",
    "distance": 6,
    "capillary_rate": 0.0055
   },
   {
    "id": 194,
    "soil_type": "Uls",
    "distance": 6,
    "capillary_rate": 0.0055
   },
   {
    "id": 195,
    "soil_type": "Ut2",
    "distance": 6,
    "capillary_rate": 0.0055
   },
   {
    "id": 196,
    "soil_type": "Ut3",
    "distance": 6,
    "capillary_rate": 0.0055
   },
   {
    "id": 197,
    "soil_type": "Ut4",
    "distance": 6,
    "capillary_rate": 0.0055
   },
   {
    "id": 198,
    "soil_type": "Ls2",
    "distance": 6,
    "capillary_rate": 0.0055
   },
   {
    "id": 199,
    "soil_type": "Ls3",
    "distance": 6,
    "capillary_rate": 0.005
   },
   {
    "id": 200,
    "soil_type": "Ls4",
    "distance": 6,
    "capillary_rate": 0.0036
   },
   {
    "id": 201,
    "soil_type": "Lt2",
    "distance": 6,
    "capillary_rate": 0.0038
   },
   {
    "id": 202,
    "soil_type": "Lt3",
    "distance": 6,
    "capillary_rate": 0.0034
   },
   {
    "id": 203,
    "soil_type": "Lu",
    "distance": 6,
    "capillary_rate": 0.005
   },
   {
    "id": 204,
    "soil_type": "Lts",
    "distance": 6,
    "capillary_rate": 0.0032
   },
   {
    "id": 205,
    "soil_type": "Tt",
    "distance": 6,
    "capillary_rate": 0.0004
   },
   {
    "id": 206,
    "soil_type": "Tl",
    "distance": 6,
    "capillary_rate": 0.0005
   },
   {
    "id": 207,
    "soil_type": "Tu2",
    "distance": 6,
    "capillary_rate": 0.0005
   },
   {
    "id": 208,
    "soil_type": "Tu3",
    "distance": 6,
    "capillary_rate": 0.0009
   },
   {
    "id": 209,
    "soil_type": "Tu4",
    "distance": 6,
    "capillary_rate": 0.0016
   },
   {
    "id": 210,
    "soil_type": "Ts2",
    "distance": 6,
    "capillary_rate": 0.0008
   },
   {
    "id": 211,
    "soil_type": "Ts3",
    "distance": 6,
    "capillary_rate": 0.0011
   },
   {
    "id": 212,
    "soil_type": "Ts4",
    "distance": 6,
    "capillary_rate": 0.0011
   },
   {
    "id": 213,
    "soil_type": "Su2",
    "distance": 7,
    "capillary_rate": 0.0022
   },
   {
    "id": 214,
    "soil_type": "Su3",
    "distance": 7,
    "capillary_rate": 0.0035
   },
   {
    "id": 215,
    "soil_type": "Su4",
    "distance": 7,
    "capillary_rate": 0.005
   },
   {
    "id": 216,
    "soil_type": "Sl2",
    "distance": 7,
    "capillary_rate": 0.0005
   },
   {
    "id": 217,
    "soil_type": "Sl3",
    "distance": 7,
    "capillary_rate": 0.0011
   },
   {
    "id": 218,
    "soil_type": "Sl4",
    "distance": 7,
    "capillary_rate": 0.0016
   },
   {
    "id": 219,
    "soil_type": "Slu",
    "distance": 7,
    "capillary_rate": 0.0026
   },
   {
    "id": 220,
    "soil_type": "St2",
    "distance": 7,
    "capillary_rate": 0.0007
   },
   {
    "id": 221,
    "soil_type": "St3",
    "distance": 7,
    "capillary_rate": 0.0007
   },
   {
    "id": 222,
    "soil_type": "fS",
    "distance": 7,
    "capillary_rate": 0.0022
   },
   {
    "id": 223,
    "soil_type": "gS",
    "distance": 7,
    "capillary_rate": 0
   },
   {
    "id": 224,
    "soil_type": "mS",
    "distance": 7,
    "capillary_rate": 0.0003
   },
   {
    "id": 225,
    "soil_type": "Ss",
    "distance": 7,
    "capillary_rate": 0.0003
   },
   {
    "id": 226,
    "soil_type": "Us",
    "distance": 7,
    "capillary_rate": 0.005
   },
   {
    "id": 227,
    "soil_type": "Uu",
    "distance": 7,
    "capillary_rate": 0.0055
   },
   {
    "id": 228,
    "soil_type": "Uls",
    "distance": 7,
    "capillary_rate": 0.0055
   },
   {
    "id": 229,
    "soil_type": "Ut2",
    "distance": 7,
    "capillary_rate": 0.0055
   },
   {
    "id": 230,
    "soil_type": "Ut3",
    "distance": 7,
    "capillary_rate": 0.0055
   },
   {
    "id": 231,
    "soil_type": "Ut4",
    "distance": 7,
    "capillary_rate": 0.005
   },
   {
    "id": 232,
    "soil_type": "Ls2",
    "distance": 7,
    "capillary_rate": 0.004
   },
   {
    "id": 233,
    "soil_type": "Ls3",
    "distance": 7,
    "capillary_rate": 0.0033
   },
   {
    "id": 234,
    "soil_type": "Ls4",
    "distance": 7,
    "capillary_rate": 0.0026
   },
   {
    "id": 235,
    "soil_type": "Lt2",
    "distance": 7,
    "capillary_rate": 0.0028
   },
   {
    "id": 236,
    "soil_type": "Lt3",
    "distance": 7,
    "capillary_rate": 0.0026
   },
   {
    "id": 237,
    "soil_type": "Lu",
    "distance": 7,
    "capillary_rate": 0.004
   },
   {
    "id": 238,
    "soil_type": "Lts",
    "distance": 7,
    "capillary_rate": 0.0022
   },
   {
    "id": 239,
    "soil_type": "Tt",
    "distance": 7,
    "capillary_rate": 0.0003
   },
   {
    "id": 240,
    "soil_type": "Tl",
    "distance": 7,
    "capillary_rate": 0.0004
   },
   {
    "id": 241,
    "soil_type": "Tu2",
    "distance": 7,
    "capillary_rate": 0.0004
   },
   {
    "id": 242,
    "soil_type": "Tu3",
    "distance": 7,
    "capillary_rate": 0.0007
   },
   {
    "id": 243,
    "soil_type": "Tu4",
    "distance": 7,
    "capillary_rate": 0.0012
   },
   {
    "id": 244,
    "soil_type": "Ts2",
    "distance": 7,
    "capillary_rate": 0.0005
   },
   {
    "id": 245,
    "soil_type": "Ts3",
    "distance": 7,
    "capillary_rate": 0.0007
   },
   {
    "id": 246,
    "soil_type": "Ts4",
    "distance": 7,
    "capillary_rate": 0.0007
   },
   {
    "id": 247,
    "soil_type": "Su2",
    "distance": 8,
    "capillary_rate": 0.0017
   },
   {
    "id": 248,
    "soil_type": "Su3",
    "distance": 8,
    "capillary_rate": 0.0028
   },
   {
    "id": 249,
    "soil_type": "Su4",
    "distance": 8,
    "capillary_rate": 0.0039
   },
   {
    "id": 250,
    "soil_type": "Sl2",
    "distance": 8,
    "capillary_rate": 0.0003
   },
   {
    "id": 251,
    "soil_type": "Sl3",
    "distance": 8,
    "capillary_rate": 0.0007
   },
   {
    "id": 252,
    "soil_type": "Sl4",
    "distance": 8,
    "capillary_rate": 0.0012
   },
   {
    "id": 253,
    "soil_type": "Slu",
    "distance": 8,
    "capillary_rate": 0.0019
   },
   {
    "id": 254,
    "soil_type": "St2",
    "distance": 8,
    "capillary_rate": 0.0005
   },
   {
    "id": 255,
    "soil_type": "St3",
    "distance": 8,
    "capillary_rate": 0.0005
   },
   {
    "id": 256,
    "soil_type": "fS",
    "distance": 8,
    "capillary_rate": 0.0014
   },
   {
    "id": 257,
    "soil_type": "gS",
    "distance": 8,
    "capillary_rate": 0
   },
   {
    "id": 258,
    "soil_type": "mS",
    "distance": 8,
    "capillary_rate": 0.0002
   },
   {
    "id": 259,
    "soil_type": "Ss",
    "distance": 8,
    "capillary_rate": 0.0002
   },
   {
    "id": 260,
    "soil_type": "Us",
    "distance": 8,
    "capillary_rate": 0.0041
   },
   {
    "id": 261,
    "soil_type": "Uu",
    "distance": 8,
    "capillary_rate": 0.0055
   },
   {
    "id": 262,
    "soil_type": "Uls",
    "distance": 8,
    "capillary_rate": 0.0055
   },
   {
    "id": 263,
    "soil_type": "Ut2",
    "distance": 8,
    "capillary_rate": 0.005
   },
   {
    "id": 264,
    "soil_type": "Ut3",
    "distance": 8,
    "capillary_rate": 0.005
   },
   {
    "id": 265,
    "soil_type": "Ut4",
    "distance": 8,
    "capillary_rate": 0.0036
   },
   {
    "id": 266,
    "soil_type": "Ls2",
    "distance": 8,
    "capillary_rate": 0.003
   },
   {
    "id": 267,
    "soil_type": "Ls3",
    "distance": 8,
    "capillary_rate": 0.0025
   },
   {
    "id": 268,
    "soil_type": "Ls4",
    "distance": 8,
    "capillary_rate": 0.002
   },
   {
    "id": 269,
    "soil_type": "Lt2",
    "distance": 8,
    "capillary_rate": 0.0022
   },
   {
    "id": 270,
    "soil_type": "Lt3",
    "distance": 8,
    "capillary_rate": 0.0019
   },
   {
    "id": 271,
    "soil_type": "Lu",
    "distance": 8,
    "capillary_rate": 0.0031
   },
   {
    "id": 272,
    "soil_type": "Lts",
    "distance": 8,
    "capillary_rate": 0.0016
   },
   {
    "id": 273,
    "soil_type": "Tt",
    "distance": 8,
    "capillary_rate": 0.0002
   },
   {
    "id": 274,
    "soil_type": "Tl",
    "distance": 8,
    "capillary_rate": 0.0003
   },
   {
    "id": 275,
    "soil_type": "Tu2",
    "distance": 8,
    "capillary_rate": 0.0003
   },
   {
    "id": 276,
    "soil_type": "Tu3",
    "distance": 8,
    "capillary_rate": 0.0005
   },
   {
    "id": 277,
    "soil_type": "Tu4",
    "distance": 8,
    "capillary_rate": 0.0008
   },
   {
    "id": 278,
    "soil_type": "Ts2",
    "distance": 8,
    "capillary_rate": 0.0004
   },
   {
    "id": 279,
    "soil_type": "Ts3",
    "distance": 8,
    "capillary_rate": 0.0005
   },
   {
    "id": 280,
    "soil_type": "Ts4",
    "distance": 8,
    "capillary_rate": 0.0005
   },
   {
    "id": 281,
    "soil_type": "Su2",
    "distance": 9,
    "capillary_rate": 0.0012
   },
   {
    "id": 282,
    "soil_type": "Su3",
    "distance": 9,
    "capillary_rate": 0.0022
   },
   {
    "id": 283,
    "soil_type": "Su4",
    "distance": 9,
    "capillary_rate": 0.0029
   },
   {
    "id": 284,
    "soil_type": "Sl2",
    "distance": 9,
    "capillary_rate": 0.0002
   },
   {
    "id": 285,
    "soil_type": "Sl3",
    "distance": 9,
    "capillary_rate": 0.0005
   },
   {
    "id": 286,
    "soil_type": "Sl4",
    "distance": 9,
    "capillary_rate": 0.0008
   },
   {
    "id": 287,
    "soil_type": "Slu",
    "distance": 9,
    "capillary_rate": 0.0015
   },
   {
    "id": 288,
    "soil_type": "St2",
    "distance": 9,
    "capillary_rate": 0.0004
   },
   {
    "id": 289,
    "soil_type": "St3",
    "distance": 9,
    "capillary_rate": 0.0004
   },
   {
    "id": 290,
    "soil_type": "fS",
    "distance": 9,
    "capillary_rate": 0.0009
   },
   {
    "id": 291,
    "soil_type": "gS",
    "distance": 9,
    "capillary_rate": 0
   },
   {
    "id": 292,
    "soil_type": "mS",
    "distance": 9,
    "capillary_rate": 0.0001
   },
   {
    "id": 293,
    "soil_type": "Ss",
    "distance": 9,
    "capillary_rate": 0.0001
   },
   {
    "id": 294,
    "soil_type": "Us",
    "distance": 9,
    "capillary_rate": 0.0033
   },
   {
    "id": 295,
    "soil_type": "Uu",
    "distance": 9,
    "capillary_rate": 0.0055
   },
   {
    "id": 296,
    "soil_type": "Uls",
    "distance": 9,
    "capillary_rate": 0.005
   },
   {
    "id": 297,
    "soil_type": "Ut2",
    "distance": 9,
    "capillary_rate": 0.0035
   },
   {
    "id": 298,
    "soil_type": "Ut3",
    "distance": 9,
    "capillary_rate": 0.0035
   },
   {
    "id": 299,
    "soil_type": "Ut4",
    "distance": 9,
    "capillary_rate": 0.0028
   },
   {
    "id": 300,
    "soil_type": "Ls2",
    "distance": 9,
    "capillary_rate": 0.0022
   },
   {
    "id": 301,
    "soil_type": "Ls3",
    "distance": 9,
    "capillary_rate": 0.002
   },
   {
    "id": 302,
    "soil_type": "Ls4",
    "distance": 9,
    "capillary_rate": 0.0015
   },
   {
    "id": 303,
    "soil_type": "Lt2",
    "distance": 9,
    "capillary_rate": 0.0017
   },
   {
    "id": 304,
    "soil_type": "Lt3",
    "distance": 9,
    "capillary_rate": 0.0015
   },
   {
    "id": 305,
    "soil_type": "Lu",
    "distance": 9,
    "capillary_rate": 0.0024
   },
   {
    "id": 306,
    "soil_type": "Lts",
    "distance": 9,
    "capillary_rate": 0.0012
   },
   {
    "id": 307,
    "soil_type": "Tt",
    "distance": 9,
    "capillary_rate": 0.0002
   },
   {
    "id": 308,
    "soil_type": "Tl",
    "distance": 9,
    "capillary_rate": 0.0002
   },
   {
    "id": 309,
    "soil_type": "Tu2",
    "distance": 9,
    "capillary_rate": 0.0002
   },
   {
    "id": 310,
    "soil_type": "Tu3",
    "distance": 9,
    "capillary_rate": 0.0004
   },
   {
    "id": 311,
    "soil_type": "Tu4",
    "distance": 9,
    "capillary_rate": 0.0006
   },
   {
    "id": 312,
    "soil_type": "Ts2",
    "distance": 9,
    "capillary_rate": 0.0003
   },
   {
    "id": 313,
    "soil_type": "Ts3",
    "distance": 9,
    "capillary_rate": 0.0004
   },
   {
    "id": 314,
    "soil_type": "Ts4",
    "distance": 9,
    "capillary_rate": 0.0004
   },
   {
    "id": 315,
    "soil_type": "Su2",
    "distance": 10,
    "capillary_rate": 0.001
   },
   {
    "id": 316,
    "soil_type": "Su3",
    "distance": 10,
    "capillary_rate": 0.0017
   },
   {
    "id": 317,
    "soil_type": "Su4",
    "distance": 10,
    "capillary_rate": 0.0023
   },
   {
    "id": 318,
    "soil_type": "Sl2",
    "distance": 10,
    "capillary_rate": 0.0001
   },
   {
    "id": 319,
    "soil_type": "Sl3",
    "distance": 10,
    "capillary_rate": 0.0003
   },
   {
    "id": 320,
    "soil_type": "Sl4",
    "distance": 10,
    "capillary_rate": 0.0006
   },
   {
    "id": 321,
    "soil_type": "Slu",
    "distance": 10,
    "capillary_rate": 0.0011
   },
   {
    "id": 322,
    "soil_type": "St2",
    "distance": 10,
    "capillary_rate": 0.0003
   },
   {
    "id": 323,
    "soil_type": "St3",
    "distance": 10,
    "capillary_rate": 0.0003
   },
   {
    "id": 324,
    "soil_type": "fS",
    "distance": 10,
    "capillary_rate": 0.0005
   },
   {
    "id": 325,
    "soil_type": "gS",
    "distance": 10,
    "capillary_rate": 0
   },
   {
    "id": 326,
    "soil_type": "mS",
    "distance": 10,
    "capillary_rate": 0
   },
   {
    "id": 327,
    "soil_type": "Ss",
    "distance": 10,
    "capillary_rate": 0
   },
   {
    "id": 328,
    "soil_type": "Us",
    "distance": 10,
    "capillary_rate": 0.0027
   },
   {
    "id": 329,
    "soil_type": "Uu",
    "distance": 10,
    "capillary_rate": 0.005
   },
   {
    "id": 330,
    "soil_type": "Uls",
    "distance": 10,
    "capillary_rate": 0.0044
   },
   {
    "id": 331,
    "soil_type": "Ut2",
    "distance": 10,
    "capillary_rate": 0.0028
   },
   {
    "id": 332,
    "soil_type": "Ut3",
    "distance": 10,
    "capillary_rate": 0.0028
   },
   {
    "id": 333,
    "soil_type": "Ut4",
    "distance": 10,
    "capillary_rate": 0.0022
   },
   {
    "id": 334,
    "soil_type": "Ls2",
    "distance": 10,
    "capillary_rate": 0.0017
   },
   {
    "id": 335,
    "soil_type": "Ls3",
    "distance": 10,
    "capillary_rate": 0.0015
   },
   {
    "id": 336,
    "soil_type": "Ls4",
    "distance": 10,
    "capillary_rate": 0.0012
   },
   {
    "id": 337,
    "soil_type": "Lt2",
    "distance": 10,
    "capillary_rate": 0.0013
   },
   {
    "id": 338,
    "soil_type": "Lt3",
    "distance": 10,
    "capillary_rate": 0.0012
   },
   {
    "id": 339,
    "soil_type": "Lu",
    "distance": 10,
    "capillary_rate": 0.0019
   },
   {
    "id": 340,
    "soil_type": "Lts",
    "distance": 10,
    "capillary_rate": 0.0009
   },
   {
    "id": 341,
    "soil_type": "Tt",
    "distance": 10,
    "capillary_rate": 0.0001
   },
   {
    "id": 342,
    "soil_type": "Tl",
    "distance": 10,
    "capillary_rate": 0.0001
   },
   {
    "id": 343,
    "soil_type": "Tu2",
    "distance": 10,
    "capillary_rate": 0.0001
   },
   {
    "id": 344,
    "soil_type": "Tu3",
    "distance": 10,
    "capillary_rate": 0.0003
   },
   {
    "id": 345,
    "soil_type": "Tu4",
    "distance": 10,
    "capillary_rate": 0.0005
   },
   {
    "id": 346,
    "soil_type": "Ts2",
    "distance": 10,
    "capillary_rate": 0.0002
   },
   {
    "id": 347,
    "soil_type": "Ts3",
    "distance": 10,
    "capillary_rate": 0.0003
   },
   {
    "id": 348,
    "soil_type": "Ts4",
    "distance": 10,
    "capillary_rate": 0.0003
   },
   {
    "id": 349,
    "soil_type": "Su2",
    "distance": 11,
    "capillary_rate": 0.0008
   },
   {
    "id": 350,
    "soil_type": "Su3",
    "distance": 11,
    "capillary_rate": 0.0014
   },
   {
    "id": 351,
    "soil_type": "Su4",
    "distance": 11,
    "capillary_rate": 0.0018
   },
   {
    "id": 352,
    "soil_type": "Sl2",
    "distance": 11,
    "capillary_rate": 0
   },
   {
    "id": 353,
    "soil_type": "Sl3",
    "distance": 11,
    "capillary_rate": 0.0002
   },
   {
    "id": 354,
    "soil_type": "Sl4",
    "distance": 11,
    "capillary_rate": 0.0004
   },
   {
    "id": 355,
    "soil_type": "Slu",
    "distance": 11,
    "capillary_rate": 0.0009
   },
   {
    "id": 356,
    "soil_type": "St2",
    "distance": 11,
    "capillary_rate": 0.0002
   },
   {
    "id": 357,
    "soil_type": "St3",
    "distance": 11,
    "capillary_rate": 0.0002
   },
   {
    "id": 358,
    "soil_type": "fS",
    "distance": 11,
    "capillary_rate": 0.0003
   },
   {
    "id": 359,
    "soil_type": "gS",
    "distance": 11,
    "capillary_rate": 0
   },
   {
    "id": 360,
    "soil_type": "mS",
    "distance": 11,
    "capillary_rate": 0
   },
   {
    "id": 361,
    "soil_type": "Ss",
    "distance": 11,
    "capillary_rate": 0
   },
   {
    "id": 362,
    "soil_type": "Us",
    "distance": 11,
    "capillary_rate": 0.0022
   },
   {
    "id": 363,
    "soil_type": "Uu",
    "distance": 11,
    "capillary_rate": 0.004
   },
   {
    "id": 364,
    "soil_type": "Uls",
    "distance": 11,
    "capillary_rate": 0.0036
   },
   {
    "id": 365,
    "soil_type": "Ut2",
    "distance": 11,
    "capillary_rate": 0.0023
   },
   {
    "id": 366,
    "soil_type": "Ut3",
    "distance": 11,
    "capillary_rate": 0.0022
   },
   {
    "id": 367,
    "soil_type": "Ut4",
    "distance": 11,
    "capillary_rate": 0.0018
   },
   {
    "id": 368,
    "soil_type": "Ls2",
    "distance": 11,
    "capillary_rate": 0.0013
   },
   {
    "id": 369,
    "soil_type": "Ls3",
    "distance": 11,
    "capillary_rate": 0.0012
   },
   {
    "id": 370,
    "soil_type": "Ls4",
    "distance": 11,
    "capillary_rate": 0.0009
   },
   {
    "id": 371,
    "soil_type": "Lt2",
    "distance": 11,
    "capillary_rate": 0.0011
   },
   {
    "id": 372,
    "soil_type": "Lt3",
    "distance": 11,
    "capillary_rate": 0.001
   },
   {
    "id": 373,
    "soil_type": "Lu",
    "distance": 11,
    "capillary_rate": 0.0015
   },
   {
    "id": 374,
    "soil_type": "Lts",
    "distance": 11,
    "capillary_rate": 0.0007
   },
   {
    "id": 375,
    "soil_type": "Tt",
    "distance": 11,
    "capillary_rate": 0
   },
   {
    "id": 376,
    "soil_type": "Tl",
    "distance": 11,
    "capillary_rate": 0
   },
   {
    "id": 377,
    "soil_type": "Tu2",
    "distance": 11,
    "capillary_rate": 0
   },
   {
    "id": 378,
    "soil_type": "Tu3",
    "distance": 11,
    "capillary_rate": 0.0003
   },
   {
    "id": 379,
    "soil_type": "Tu4",
    "distance": 11,
    "capillary_rate": 0.0004
   },
   {
    "id": 380,
    "soil_type": "Ts2",
    "distance": 11,
    "capillary_rate": 0.0002
   },
   {
    "id": 381,
    "soil_type": "Ts3",
    "distance": 11,
    "capillary_rate": 0.0002
   },
   {
    "id": 382,
    "soil_type": "Ts4",
    "distance": 11,
    "capillary_rate": 0.0002
   },
   {
    "id": 383,
    "soil_type": "Su2",
    "distance": 12,
    "capillary_rate": 0.0006
   },
   {
    "id": 384,
    "soil_type": "Su3",
    "distance": 12,
    "capillary_rate": 0.0012
   },
   {
    "id": 385,
    "soil_type": "Su4",
    "distance": 12,
    "capillary_rate": 0.0015
   },
   {
    "id": 386,
    "soil_type": "Sl2",
    "distance": 12,
    "capillary_rate": 0
   },
   {
    "id": 387,
    "soil_type": "Sl3",
    "distance": 12,
    "capillary_rate": 0.0001
   },
   {
    "id": 388,
    "soil_type": "Sl4",
    "distance": 12,
    "capillary_rate": 0.0003
   },
   {
    "id": 389,
    "soil_type": "Slu",
    "distance": 12,
    "capillary_rate": 0.0007
   },
   {
    "id": 390,
    "soil_type": "St2",
    "distance": 12,
    "capillary_rate": 0.0001
   },
   {
    "id": 391,
    "soil_type": "St3",
    "distance": 12,
    "capillary_rate": 0.0001
   },
   {
    "id": 392,
    "soil_type": "fS",
    "distance": 12,
    "capillary_rate": 0.0002
   },
   {
    "id": 393,
    "soil_type": "gS",
    "distance": 12,
    "capillary_rate": 0
   },
   {
    "id": 394,
    "soil_type": "mS",
    "distance": 12,
    "capillary_rate": 0
   },
   {
    "id": 395,
    "soil_type": "Ss",
    "distance": 12,
    "capillary_rate": 0
   },
   {
    "id": 396,
    "soil_type": "Us",
    "distance": 12,
    "capillary_rate": 0.0018
   },
   {
    "id": 397,
    "soil_type": "Uu",
    "distance": 12,
    "capillary_rate": 0.0033
   },
   {
    "id": 398,
    "soil_type": "Uls",
    "distance": 12,
    "capillary_rate": 0.003
   },
   {
    "id": 399,
    "soil_type": "Ut2",
    "distance": 12,
    "capillary_rate": 0.0019
   },
   {
    "id": 400,
    "soil_type": "Ut3",
    "distance": 12,
    "capillary_rate": 0.0018
   },
   {
    "id": 401,
    "soil_type": "Ut4",
    "distance": 12,
    "capillary_rate": 0.0015
   },
   {
    "id": 402,
    "soil_type": "Ls2",
    "distance": 12,
    "capillary_rate": 0.0009
   },
   {
    "id": 403,
    "soil_type": "Ls3",
    "distance": 12,
    "capillary_rate": 0.001
   },
   {
    "id": 404,
    "soil_type": "Ls4",
    "distance": 12,
    "capillary_rate": 0.0007
   },
   {
    "id": 405,
    "soil_type": "Lt2",
    "distance": 12,
    "capillary_rate": 0.0009
   },
   {
    "id": 406,
    "soil_type": "Lt3",
    "distance": 12,
    "capillary_rate": 0.0008
   },
   {
    "id": 407,
    "soil_type": "Lu",
    "distance": 12,
    "capillary_rate": 0.0012
   },
   {
    "id": 408,
    "soil_type": "Lts",
    "distance": 12,
    "capillary_rate": 0.0005
   },
   {
    "id": 409,
    "soil_type": "Tt",
    "distance": 12,
    "capillary_rate": 0
   },
   {
    "id": 410,
    "soil_type": "Tl",
    "distance": 12,
    "capillary_rate": 0
   },
   {
    "id": 411,
    "soil_type": "Tu2",
    "distance": 12,
    "capillary_rate": 0
   },
   {
    "id": 412,
    "soil_type": "Tu3",
    "distance": 12,
    "capillary_rate": 0.0002
   },
   {
    "id": 413,
    "soil_type": "Tu4",
    "distance": 12,
    "capillary_rate": 0.0003
   },
   {
    "id": 414,
    "soil_type": "Ts2",
    "distance": 12,
    "capillary_rate": 0.0001
   },
   {
    "id": 415,
    "soil_type": "Ts3",
    "distance": 12,
    "capillary_rate": 0.0001
   },
   {
    "id": 416,
    "soil_type": "Ts4",
    "distance": 12,
    "capillary_rate": 0.0001
   },
   {
    "id": 417,
    "soil_type": "Su2",
    "distance": 13,
    "capillary_rate": 0.0005
   },
   {
    "id": 418,
    "soil_type": "Su3",
    "distance": 13,
    "capillary_rate": 0.0009
   },
   {
    "id": 419,
    "soil_type": "Su4",
    "distance": 13,
    "capillary_rate": 0.0012
   },
   {
    "id": 420,
    "soil_type": "Sl2",
    "distance": 13,
    "capillary_rate": 0
   },
   {
    "id": 421,
    "soil_type": "Sl3",
    "distance": 13,
    "capillary_rate": 0
   },
   {
    "id": 422,
    "soil_type": "Sl4",
    "distance": 13,
    "capillary_rate": 0.0002
   },
   {
    "id": 423,
    "soil_type": "Slu",
    "distance": 13,
    "capillary_rate": 0.0005
   },
   {
    "id": 424,
    "soil_type": "St2",
    "distance": 13,
    "capillary_rate": 0
   },
   {
    "id": 425,
    "soil_type": "St3",
    "distance": 13,
    "capillary_rate": 0
   },
   {
    "id": 426,
    "soil_type": "fS",
    "distance": 13,
    "capillary_rate": 0.0001
   },
   {
    "id": 427,
    "soil_type": "gS",
    "distance": 13,
    "capillary_rate": 0
   },
   {
    "id": 428,
    "soil_type": "mS",
    "distance": 13,
    "capillary_rate": 0
   },
   {
    "id": 429,
    "soil_type": "Ss",
    "distance": 13,
    "capillary_rate": 0
   },
   {
    "id": 430,
    "soil_type": "Us",
    "distance": 13,
    "capillary_rate": 0.0015
   },
   {
    "id": 431,
    "soil_type": "Uu",
    "distance": 13,
    "capillary_rate": 0.0028
   },
   {
    "id": 432,
    "soil_type": "Uls",
    "distance": 13,
    "capillary_rate": 0.0026
   },
   {
    "id": 433,
    "soil_type": "Ut2",
    "distance": 13,
    "capillary_rate": 0.0015
   },
   {
    "id": 434,
    "soil_type": "Ut3",
    "distance": 13,
    "capillary_rate": 0.0015
   },
   {
    "id": 435,
    "soil_type": "Ut4",
    "distance": 13,
    "capillary_rate": 0.0012
   },
   {
    "id": 436,
    "soil_type": "Ls2",
    "distance": 13,
    "capillary_rate": 0.0007
   },
   {
    "id": 437,
    "soil_type": "Ls3",
    "distance": 13,
    "capillary_rate": 0.0008
   },
   {
    "id": 438,
    "soil_type": "Ls4",
    "distance": 13,
    "capillary_rate": 0.0006
   },
   {
    "id": 439,
    "soil_type": "Lt2",
    "distance": 13,
    "capillary_rate": 0.0007
   },
   {
    "id": 440,
    "soil_type": "Lt3",
    "distance": 13,
    "capillary_rate": 0.0007
   },
   {
    "id": 441,
    "soil_type": "Lu",
    "distance": 13,
    "capillary_rate": 0.001
   },
   {
    "id": 442,
    "soil_type": "Lts",
    "distance": 13,
    "capillary_rate": 0.0004
   },
   {
    "id": 443,
    "soil_type": "Tt",
    "distance": 13,
    "capillary_rate": 0
   },
   {
    "id": 444,
    "soil_type": "Tl",
    "distance": 13,
    "capillary_rate": 0
   },
   {
    "id": 445,
    "soil_type": "Tu2",
    "distance": 13,
    "capillary_rate": 0
   },
   {
    "id": 446,
    "soil_type": "Tu3",
    "distance": 13,
    "capillary_rate": 0.0002
   },
   {
    "id": 447,
    "soil_type": "Tu4",
    "distance": 13,
    "capillary_rate": 0.0003
   },
   {
    "id": 448,
    "soil_type": "Ts2",
    "distance": 13,
    "capillary_rate": 0
   },
   {
    "id": 449,
    "soil_type": "Ts3",
    "distance": 13,
    "capillary_rate": 0
   },
   {
    "id": 450,
    "soil_type": "Ts4",
    "distance": 13,
    "capillary_rate": 0
   },
   {
    "id": 451,
    "soil_type": "Su2",
    "distance": 14,
    "capillary_rate": 0.0004
   },
   {
    "id": 452,
    "soil_type": "Su3",
    "distance": 14,
    "capillary_rate": 0.0008
   },
   {
    "id": 453,
    "soil_type": "Su4",
    "distance": 14,
    "capillary_rate": 0.0009
   },
   {
    "id": 454,
    "soil_type": "Sl2",
    "distance": 14,
    "capillary_rate": 0
   },
   {
    "id": 455,
    "soil_type": "Sl3",
    "distance": 14,
    "capillary_rate": 0
   },
   {
    "id": 456,
    "soil_type": "Sl4",
    "distance": 14,
    "capillary_rate": 0.0001
   },
   {
    "id": 457,
    "soil_type": "Slu",
    "distance": 14,
    "capillary_rate": 0.0004
   },
   {
    "id": 458,
    "soil_type": "St2",
    "distance": 14,
    "capillary_rate": 0
   },
   {
    "id": 459,
    "soil_type": "St3",
    "distance": 14,
    "capillary_rate": 0
   },
   {
    "id": 460,
    "soil_type": "fS",
    "distance": 14,
    "capillary_rate": 0
   },
   {
    "id": 461,
    "soil_type": "gS",
    "distance": 14,
    "capillary_rate": 0
   },
   {
    "id": 462,
    "soil_type": "mS",
    "distance": 14,
    "capillary_rate": 0
   },
   {
    "id": 463,
    "soil_type": "Ss",
    "distance": 14,
    "capillary_rate": 0
   },
   {
    "id": 464,
    "soil_type": "Us",
    "distance": 14,
    "capillary_rate": 0.0012
   },
   {
    "id": 465,
    "soil_type": "Uu",
    "distance": 14,
    "capillary_rate": 0.0024
   },
   {
    "id": 466,
    "soil_type": "Uls",
    "distance": 14,
    "capillary_rate": 0.0022
   },
   {
    "id": 467,
    "soil_type": "Ut2",
    "distance": 14,
    "capillary_rate": 0.0013
   },
   {
    "id": 468,
    "soil_type": "Ut3",
    "distance": 14,
    "capillary_rate": 0.0013
   },
   {
    "id": 469,
    "soil_type": "Ut4",
    "distance": 14,
    "capillary_rate": 0.001
   },
   {
    "id": 470,
    "soil_type": "Ls2",
    "distance": 14,
    "capillary_rate": 0.0005
   },
   {
    "id": 471,
    "soil_type": "Ls3",
    "distance": 14,
    "capillary_rate": 0.0007
   },
   {
    "id": 472,
    "soil_type": "Ls4",
    "distance": 14,
    "capillary_rate": 0.0005
   },
   {
    "id": 473,
    "soil_type": "Lt2",
    "distance": 14,
    "capillary_rate": 0.0005
   },
   {
    "id": 474,
    "soil_type": "Lt3",
    "distance": 14,
    "capillary_rate": 0.0006
   },
   {
    "id": 475,
    "soil_type": "Lu",
    "distance": 14,
    "capillary_rate": 0.0008
   },
   {
    "id": 476,
    "soil_type": "Lts",
    "distance": 14,
    "capillary_rate": 0.0003
   },
   {
    "id": 477,
    "soil_type": "Tt",
    "distance": 14,
    "capillary_rate": 0
   },
   {
    "id": 478,
    "soil_type": "Tl",
    "distance": 14,
    "capillary_rate": 0
   },
   {
    "id": 479,
    "soil_type": "Tu2",
    "distance": 14,
    "capillary_rate": 0
   },
   {
    "id": 480,
    "soil_type": "Tu3",
    "distance": 14,
    "capillary_rate": 0.0001
   },
   {
    "id": 481,
    "soil_type": "Tu4",
    "distance": 14,
    "capillary_rate": 0.0002
   },
   {
    "id": 482,
    "soil_type": "Ts2",
    "distance": 14,
    "capillary_rate": 0
   },
   {
    "id": 483,
    "soil_type": "Ts3",
    "distance": 14,
    "capillary_rate": 0
   },
   {
    "id": 484,
    "soil_type": "Ts4",
    "distance": 14,
    "capillary_rate": 0
   },
   {
    "id": 485,
    "soil_type": "Su2",
    "distance": 15,
    "capillary_rate": 0.0003
   },
   {
    "id": 486,
    "soil_type": "Su3",
    "distance": 15,
    "capillary_rate": 0.0007
   },
   {
    "id": 487,
    "soil_type": "Su4",
    "distance": 15,
    "capillary_rate": 0.0008
   },
   {
    "id": 488,
    "soil_type": "Sl2",
    "distance": 15,
    "capillary_rate": 0
   },
   {
    "id": 489,
    "soil_type": "Sl3",
    "distance": 15,
    "capillary_rate": 0
   },
   {
    "id": 490,
    "soil_type": "Sl4",
    "distance": 15,
    "capillary_rate": 0
   },
   {
    "id": 491,
    "soil_type": "Slu",
    "distance": 15,
    "capillary_rate": 0.0003
   },
   {
    "id": 492,
    "soil_type": "St2",
    "distance": 15,
    "capillary_rate": 0
   },
   {
    "id": 493,
    "soil_type": "St3",
    "distance": 15,
    "capillary_rate": 0
   },
   {
    "id": 494,
    "soil_type": "fS",
    "distance": 15,
    "capillary_rate": 0
   },
   {
    "id": 495,
    "soil_type": "gS",
    "distance": 15,
    "capillary_rate": 0
   },
   {
    "id": 496,
    "soil_type": "mS",
    "distance": 15,
    "capillary_rate": 0
   },
   {
    "id": 497,
    "soil_type": "Ss",
    "distance": 15,
    "capillary_rate": 0
   },
   {
    "id": 498,
    "soil_type": "Us",
    "distance": 15,
    "capillary_rate": 0.001
   },
   {
    "id": 499,
    "soil_type": "Uu",
    "distance": 15,
    "capillary_rate": 0.002
   },
   {
    "id": 500,
    "soil_type": "Uls",
    "distance": 15,
    "capillary_rate": 0.0019
   },
   {
    "id": 501,
    "soil_type": "Ut2",
    "distance": 15,
    "capillary_rate": 0.0011
   },
   {
    "id": 502,
    "soil_type": "Ut3",
    "distance": 15,
    "capillary_rate": 0.0011
   },
   {
    "id": 503,
    "soil_type": "Ut4",
    "distance": 15,
    "capillary_rate": 0.0008
   },
   {
    "id": 504,
    "soil_type": "Ls2",
    "distance": 15,
    "capillary_rate": 0.0004
   },
   {
    "id": 505,
    "soil_type": "Ls3",
    "distance": 15,
    "capillary_rate": 0.0005
   },
   {
    "id": 506,
    "soil_type": "Ls4",
    "distance": 15,
    "capillary_rate": 0.0004
   },
   {
    "id": 507,
    "soil_type": "Lt2",
    "distance": 15,
    "capillary_rate": 0.0004
   },
   {
    "id": 508,
    "soil_type": "Lt3",
    "distance": 15,
    "capillary_rate": 0.0005
   },
   {
    "id": 509,
    "soil_type": "Lu",
    "distance": 15,
    "capillary_rate": 0.0007
   },
   {
    "id": 510,
    "soil_type": "Lts",
    "distance": 15,
    "capillary_rate": 0.0002
   },
   {
    "id": 511,
    "soil_type": "Tt",
    "distance": 15,
    "capillary_rate": 0
   },
   {
    "id": 512,
    "soil_type": "Tl",
    "distance": 15,
    "capillary_rate": 0
   },
   {
    "id": 513,
    "soil_type": "Tu2",
    "distance": 15,
    "capillary_rate": 0
   },
   {
    "id": 514,
    "soil_type": "Tu3",
    "distance": 15,
    "capillary_rate": 0
   },
   {
    "id": 515,
    "soil_type": "Tu4",
    "distance": 15,
    "capillary_rate": 0.0002
   },
   {
    "id": 516,
    "soil_type": "Ts2",
    "distance": 15,
    "capillary_rate": 0
   },
   {
    "id": 517,
    "soil_type": "Ts3",
    "distance": 15,
    "capillary_rate": 0
   },
   {
    "id": 518,
    "soil_type": "Ts4",
    "distance": 15,
    "capillary_rate": 0
   },
   {
    "id": 519,
    "soil_type": "Su2",
    "distance": 16,
    "capillary_rate": 0.0003
   },
   {
    "id": 520,
    "soil_type": "Su3",
    "distance": 16,
    "capillary_rate": 0.0007
   },
   {
    "id": 521,
    "soil_type": "Su4",
    "distance": 16,
    "capillary_rate": 0.0008
   },
   {
    "id": 522,
    "soil_type": "Sl2",
    "distance": 16,
    "capillary_rate": 0
   },
   {
    "id": 523,
    "soil_type": "Sl3",
    "distance": 16,
    "capillary_rate": 0
   },
   {
    "id": 524,
    "soil_type": "Sl4",
    "distance": 16,
    "capillary_rate": 0
   },
   {
    "id": 525,
    "soil_type": "Slu",
    "distance": 16,
    "capillary_rate": 0.0003
   },
   {
    "id": 526,
    "soil_type": "St2",
    "distance": 16,
    "capillary_rate": 0
   },
   {
    "id": 527,
    "soil_type": "St3",
    "distance": 16,
    "capillary_rate": 0
   },
   {
    "id": 528,
    "soil_type": "fS",
    "distance": 16,
    "capillary_rate": 0
   },
   {
    "id": 529,
    "soil_type": "gS",
    "distance": 16,
    "capillary_rate": 0
   },
   {
    "id": 530,
    "soil_type": "mS",
    "distance": 16,
    "capillary_rate": 0
   },
   {
    "id": 531,
    "soil_type": "Ss",
    "distance": 16,
    "capillary_rate": 0
   },
   {
    "id": 532,
    "soil_type": "Us",
    "distance": 16,
    "capillary_rate": 0.001
   },
   {
    "id": 533,
    "soil_type": "Uu",
    "distance": 16,
    "capillary_rate": 0.002
   },
   {
    "id": 534,
    "soil_type": "Uls",
    "distance": 16,
    "capillary_rate": 0.0019
   },
   {
    "id": 535,
    "soil_type": "Ut2",
    "distance": 16,
    "capillary_rate": 0.0011
   },
   {
    "id": 536,
    "soil_type": "Ut3",
    "distance": 16,
    "capillary_rate": 0.0011
   },
   {
    "id": 537,
    "soil_type": "Ut4",
    "distance": 16,
    "capillary_rate": 0.0008
   },
   {
    "id": 538,
    "soil_type": "Ls2",
    "distance": 16,
    "capillary_rate": 0.0004
   },
   {
    "id": 539,
    "soil_type": "Ls3",
    "distance": 16,
    "capillary_rate": 0.0005
   },
   {
    "id": 540,
    "soil_type": "Ls4",
    "distance": 16,
    "capillary_rate": 0.0004
   },
   {
    "id": 541,
    "soil_type": "Lt2",
    "distance": 16,
    "capillary_rate": 0.0004
   },
   {
    "id": 542,
    "soil_type": "Lt3",
    "distance": 16,
    "capillary_rate": 0.0005
   },
   {
    "id": 543,
    "soil_type": "Lu",
    "distance": 16,
    "capillary_rate": 0.0007
   },
   {
    "id": 544,
    "soil_type": "Lts",
    "distance": 16,
    "capillary_rate": 0.0002
   },
   {
    "id": 545,
    "soil_type": "Tt",
    "distance": 16,
    "capillary_rate": 0
   },
   {
    "id": 546,
    "soil_type": "Tl",
    "distance": 16,
    "capillary_rate": 0
   },
   {
    "id": 547,
    "soil_type": "Tu2",
    "distance": 16,
    "capillary_rate": 0
   },
   {
    "id": 548,
    "soil_type": "Tu3",
    "distance": 16,
    "capillary_rate": 0
   },
   {
    "id": 549,
    "soil_type": "Tu4",
    "distance": 16,
    "capillary_rate": 0.0002
   },
   {
    "id": 550,
    "soil_type": "Ts2",
    "distance": 16,
    "capillary_rate": 0
   },
   {
    "id": 551,
    "soil_type": "Ts3",
    "distance": 16,
    "capillary_rate": 0
   },
   {
    "id": 552,
    "soil_type": "Ts4",
    "distance": 16,
    "capillary_rate": 0
   },
   {
    "id": 553,
    "soil_type": "Su2",
    "distance": 17,
    "capillary_rate": 0.0002
   },
   {
    "id": 554,
    "soil_type": "Su3",
    "distance": 17,
    "capillary_rate": 0.0005
   },
   {
    "id": 555,
    "soil_type": "Su4",
    "distance": 17,
    "capillary_rate": 0.0005
   },
   {
    "id": 556,
    "soil_type": "Sl2",
    "distance": 17,
    "capillary_rate": 0
   },
   {
    "id": 557,
    "soil_type": "Sl3",
    "distance": 17,
    "capillary_rate": 0
   },
   {
    "id": 558,
    "soil_type": "Sl4",
    "distance": 17,
    "capillary_rate": 0
   },
   {
    "id": 559,
    "soil_type": "Slu",
    "distance": 17,
    "capillary_rate": 0.0002
   },
   {
    "id": 560,
    "soil_type": "St2",
    "distance": 17,
    "capillary_rate": 0
   },
   {
    "id": 561,
    "soil_type": "St3",
    "distance": 17,
    "capillary_rate": 0
   },
   {
    "id": 562,
    "soil_type": "fS",
    "distance": 17,
    "capillary_rate": 0
   },
   {
    "id": 563,
    "soil_type": "gS",
    "distance": 17,
    "capillary_rate": 0
   },
   {
    "id": 564,
    "soil_type": "mS",
    "distance": 17,
    "capillary_rate": 0
   },
   {
    "id": 565,
    "soil_type": "Ss",
    "distance": 17,
    "capillary_rate": 0
   },
   {
    "id": 566,
    "soil_type": "Us",
    "distance": 17,
    "capillary_rate": 0.0007
   },
   {
    "id": 567,
    "soil_type": "Uu",
    "distance": 17,
    "capillary_rate": 0.0015
   },
   {
    "id": 568,
    "soil_type": "Uls",
    "distance": 17,
    "capillary_rate": 0.0014
   },
   {
    "id": 569,
    "soil_type": "Ut2",
    "distance": 17,
    "capillary_rate": 0.0007
   },
   {
    "id": 570,
    "soil_type": "Ut3",
    "distance": 17,
    "capillary_rate": 0.0007
   },
   {
    "id": 571,
    "soil_type": "Ut4",
    "distance": 17,
    "capillary_rate": 0.0005
   },
   {
    "id": 572,
    "soil_type": "Ls2",
    "distance": 17,
    "capillary_rate": 0.0002
   },
   {
    "id": 573,
    "soil_type": "Ls3",
    "distance": 17,
    "capillary_rate": 0.0003
   },
   {
    "id": 574,
    "soil_type": "Ls4",
    "distance": 17,
    "capillary_rate": 0.0003
   },
   {
    "id": 575,
    "soil_type": "Lt2",
    "distance": 17,
    "capillary_rate": 0.0003
   },
   {
    "id": 576,
    "soil_type": "Lt3",
    "distance": 17,
    "capillary_rate": 0.0003
   },
   {
    "id": 577,
    "soil_type": "Lu",
    "distance": 17,
    "capillary_rate": 0.0005
   },
   {
    "id": 578,
    "soil_type": "Lts",
    "distance": 17,
    "capillary_rate": 0.0001
   },
   {
    "id": 579,
    "soil_type": "Tt",
    "distance": 17,
    "capillary_rate": 0
   },
   {
    "id": 580,
    "soil_type": "Tl",
    "distance": 17,
    "capillary_rate": 0
   },
   {
    "id": 581,
    "soil_type": "Tu2",
    "distance": 17,
    "capillary_rate": 0
   },
   {
    "id": 582,
    "soil_type": "Tu3",
    "distance": 17,
    "capillary_rate": 0
   },
   {
    "id": 583,
    "soil_type": "Tu4",
    "distance": 17,
    "capillary_rate": 0.0001
   },
   {
    "id": 584,
    "soil_type": "Ts2",
    "distance": 17,
    "capillary_rate": 0
   },
   {
    "id": 585,
    "soil_type": "Ts3",
    "distance": 17,
    "capillary_rate": 0
   },
   {
    "id": 586,
    "soil_type": "Ts4",
    "distance": 17,
    "capillary_rate": 0
   },
   {
    "id": 587,
    "soil_type": "Su2",
    "distance": 18,
    "capillary_rate": 0.0002
   },
   {
    "id": 588,
    "soil_type": "Su3",
    "distance": 18,
    "capillary_rate": 0.0005
   },
   {
    "id": 589,
    "soil_type": "Su4",
    "distance": 18,
    "capillary_rate": 0.0005
   },
   {
    "id": 590,
    "soil_type": "Sl2",
    "distance": 18,
    "capillary_rate": 0
   },
   {
    "id": 591,
    "soil_type": "Sl3",
    "distance": 18,
    "capillary_rate": 0
   },
   {
    "id": 592,
    "soil_type": "Sl4",
    "distance": 18,
    "capillary_rate": 0
   },
   {
    "id": 593,
    "soil_type": "Slu",
    "distance": 18,
    "capillary_rate": 0.0002
   },
   {
    "id": 594,
    "soil_type": "St2",
    "distance": 18,
    "capillary_rate": 0
   },
   {
    "id": 595,
    "soil_type": "St3",
    "distance": 18,
    "capillary_rate": 0
   },
   {
    "id": 596,
    "soil_type": "fS",
    "distance": 18,
    "capillary_rate": 0
   },
   {
    "id": 597,
    "soil_type": "gS",
    "distance": 18,
    "capillary_rate": 0
   },
   {
    "id": 598,
    "soil_type": "mS",
    "distance": 18,
    "capillary_rate": 0
   },
   {
    "id": 599,
    "soil_type": "Ss",
    "distance": 18,
    "capillary_rate": 0
   },
   {
    "id": 600,
    "soil_type": "Us",
    "distance": 18,
    "capillary_rate": 0.0007
   },
   {
    "id": 601,
    "soil_type": "Uu",
    "distance": 18,
    "capillary_rate": 0.0015
   },
   {
    "id": 602,
    "soil_type": "Uls",
    "distance": 18,
    "capillary_rate": 0.0014
   },
   {
    "id": 603,
    "soil_type": "Ut2",
    "distance": 18,
    "capillary_rate": 0.0007
   },
   {
    "id": 604,
    "soil_type": "Ut3",
    "distance": 18,
    "capillary_rate": 0.0007
   },
   {
    "id": 605,
    "soil_type": "Ut4",
    "distance": 18,
    "capillary_rate": 0.0005
   },
   {
    "id": 606,
    "soil_type": "Ls2",
    "distance": 18,
    "capillary_rate": 0.0002
   },
   {
    "id": 607,
    "soil_type": "Ls3",
    "distance": 18,
    "capillary_rate": 0.0003
   },
   {
    "id": 608,
    "soil_type": "Ls4",
    "distance": 18,
    "capillary_rate": 0.0003
   },
   {
    "id": 609,
    "soil_type": "Lt2",
    "distance": 18,
    "capillary_rate": 0.0003
   },
   {
    "id": 610,
    "soil_type": "Lt3",
    "distance": 18,
    "capillary_rate": 0.0003
   },
   {
    "id": 611,
    "soil_type": "Lu",
    "distance": 18,
    "capillary_rate": 0.0005
   },
   {
    "id": 612,
    "soil_type": "Lts",
    "distance": 18,
    "capillary_rate": 0
   },
   {
    "id": 613,
    "soil_type": "Tt",
    "distance": 18,
    "capillary_rate": 0
   },
   {
    "id": 614,
    "soil_type": "Tl",
    "distance": 18,
    "capillary_rate": 0
   },
   {
    "id": 615,
    "soil_type": "Tu2",
    "distance": 18,
    "capillary_rate": 0
   },
   {
    "id": 616,
    "soil_type": "Tu3",
    "distance": 18,
    "capillary_rate": 0
   },
   {
    "id": 617,
    "soil_type": "Tu4",
    "distance": 18,
    "capillary_rate": 0
   },
   {
    "id": 618,
    "soil_type": "Ts2",
    "distance": 18,
    "capillary_rate": 0
   },
   {
    "id": 619,
    "soil_type": "Ts3",
    "distance": 18,
    "capillary_rate": 0
   },
   {
    "id": 620,
    "soil_type": "Ts4",
    "distance": 18,
    "capillary_rate": 0
   },
   {
    "id": 621,
    "soil_type": "Su2",
    "distance": 19,
    "capillary_rate": 0.0002
   },
   {
    "id": 622,
    "soil_type": "Su3",
    "distance": 19,
    "capillary_rate": 0.0005
   },
   {
    "id": 623,
    "soil_type": "Su4",
    "distance": 19,
    "capillary_rate": 0.0005
   },
   {
    "id": 624,
    "soil_type": "Sl2",
    "distance": 19,
    "capillary_rate": 0
   },
   {
    "id": 625,
    "soil_type": "Sl3",
    "distance": 19,
    "capillary_rate": 0
   },
   {
    "id": 626,
    "soil_type": "Sl4",
    "distance": 19,
    "capillary_rate": 0
   },
   {
    "id": 627,
    "soil_type": "Slu",
    "distance": 19,
    "capillary_rate": 0.0002
   },
   {
    "id": 628,
    "soil_type": "St2",
    "distance": 19,
    "capillary_rate": 0
   },
   {
    "id": 629,
    "soil_type": "St3",
    "distance": 19,
    "capillary_rate": 0
   },
   {
    "id": 630,
    "soil_type": "fS",
    "distance": 19,
    "capillary_rate": 0
   },
   {
    "id": 631,
    "soil_type": "gS",
    "distance": 19,
    "capillary_rate": 0
   },
   {
    "id": 632,
    "soil_type": "mS",
    "distance": 19,
    "capillary_rate": 0
   },
   {
    "id": 633,
    "soil_type": "Ss",
    "distance": 19,
    "capillary_rate": 0
   },
   {
    "id": 634,
    "soil_type": "Us",
    "distance": 19,
    "capillary_rate": 0.0007
   },
   {
    "id": 635,
    "soil_type": "Uu",
    "distance": 19,
    "capillary_rate": 0.0015
   },
   {
    "id": 636,
    "soil_type": "Uls",
    "distance": 19,
    "capillary_rate": 0.0014
   },
   {
    "id": 637,
    "soil_type": "Ut2",
    "distance": 19,
    "capillary_rate": 0.0007
   },
   {
    "id": 638,
    "soil_type": "Ut3",
    "distance": 19,
    "capillary_rate": 0.0007
   },
   {
    "id": 639,
    "soil_type": "Ut4",
    "distance": 19,
    "capillary_rate": 0.0005
   },
   {
    "id": 640,
    "soil_type": "Ls2",
    "distance": 19,
    "capillary_rate": 0.0002
   },
   {
    "id": 641,
    "soil_type": "Ls3",
    "distance": 19,
    "capillary_rate": 0.0003
   },
   {
    "id": 642,
    "soil_type": "Ls4",
    "distance": 19,
    "capillary_rate": 0.0003
   },
   {
    "id": 643,
    "soil_type": "Lt2",
    "distance": 19,
    "capillary_rate": 0.0003
   },
   {
    "id": 644,
    "soil_type": "Lt3",
    "distance": 19,
    "capillary_rate": 0.0003
   },
   {
    "id": 645,
    "soil_type": "Lu",
    "distance": 19,
    "capillary_rate": 0.0005
   },
   {
    "id": 646,
    "soil_type": "Lts",
    "distance": 19,
    "capillary_rate": 0
   },
   {
    "id": 647,
    "soil_type": "Tt",
    "distance": 19,
    "capillary_rate": 0
   },
   {
    "id": 648,
    "soil_type": "Tl",
    "distance": 19,
    "capillary_rate": 0
   },
   {
    "id": 649,
    "soil_type": "Tu2",
    "distance": 19,
    "capillary_rate": 0
   },
   {
    "id": 650,
    "soil_type": "Tu3",
    "distance": 19,
    "capillary_rate": 0
   },
   {
    "id": 651,
    "soil_type": "Tu4",
    "distance": 19,
    "capillary_rate": 0
   },
   {
    "id": 652,
    "soil_type": "Ts2",
    "distance": 19,
    "capillary_rate": 0
   },
   {
    "id": 653,
    "soil_type": "Ts3",
    "distance": 19,
    "capillary_rate": 0
   },
   {
    "id": 654,
    "soil_type": "Ts4",
    "distance": 19,
    "capillary_rate": 0
   },
   {
    "id": 655,
    "soil_type": "Su2",
    "distance": 20,
    "capillary_rate": 0.0001
   },
   {
    "id": 656,
    "soil_type": "Su3",
    "distance": 20,
    "capillary_rate": 0.0003
   },
   {
    "id": 657,
    "soil_type": "Su4",
    "distance": 20,
    "capillary_rate": 0.0003
   },
   {
    "id": 658,
    "soil_type": "Sl2",
    "distance": 20,
    "capillary_rate": 0
   },
   {
    "id": 659,
    "soil_type": "Sl3",
    "distance": 20,
    "capillary_rate": 0
   },
   {
    "id": 660,
    "soil_type": "Sl4",
    "distance": 20,
    "capillary_rate": 0
   },
   {
    "id": 661,
    "soil_type": "Slu",
    "distance": 20,
    "capillary_rate": 0.0001
   },
   {
    "id": 662,
    "soil_type": "St2",
    "distance": 20,
    "capillary_rate": 0
   },
   {
    "id": 663,
    "soil_type": "St3",
    "distance": 20,
    "capillary_rate": 0
   },
   {
    "id": 664,
    "soil_type": "fS",
    "distance": 20,
    "capillary_rate": 0
   },
   {
    "id": 665,
    "soil_type": "gS",
    "distance": 20,
    "capillary_rate": 0
   },
   {
    "id": 666,
    "soil_type": "mS",
    "distance": 20,
    "capillary_rate": 0
   },
   {
    "id": 667,
    "soil_type": "Ss",
    "distance": 20,
    "capillary_rate": 0
   },
   {
    "id": 668,
    "soil_type": "Us",
    "distance": 20,
    "capillary_rate": 0.0004
   },
   {
    "id": 669,
    "soil_type": "Uu",
    "distance": 20,
    "capillary_rate": 0.001
   },
   {
    "id": 670,
    "soil_type": "Uls",
    "distance": 20,
    "capillary_rate": 0.0009
   },
   {
    "id": 671,
    "soil_type": "Ut2",
    "distance": 20,
    "capillary_rate": 0.0004
   },
   {
    "id": 672,
    "soil_type": "Ut3",
    "distance": 20,
    "capillary_rate": 0.0004
   },
   {
    "id": 673,
    "soil_type": "Ut4",
    "distance": 20,
    "capillary_rate": 0.0003
   },
   {
    "id": 674,
    "soil_type": "Ls2",
    "distance": 20,
    "capillary_rate": 0.0001
   },
   {
    "id": 675,
    "soil_type": "Ls3",
    "distance": 20,
    "capillary_rate": 0.0002
   },
   {
    "id": 676,
    "soil_type": "Ls4",
    "distance": 20,
    "capillary_rate": 0.0001
   },
   {
    "id": 677,
    "soil_type": "Lt2",
    "distance": 20,
    "capillary_rate": 0.0001
   },
   {
    "id": 678,
    "soil_type": "Lt3",
    "distance": 20,
    "capillary_rate": 0.0002
   },
   {
    "id": 679,
    "soil_type": "Lu",
    "distance": 20,
    "capillary_rate": 0.0003
   },
   {
    "id": 680,
    "soil_type": "Lts",
    "distance": 20,
    "capillary_rate": 0
   },
   {
    "id": 681,
    "soil_type": "Tt",
    "distance": 20,
    "capillary_rate": 0
   },
   {
    "id": 682,
    "soil_type": "Tl",
    "distance": 20,
    "capillary_rate": 0
   },
   {
    "id": 683,
    "soil_type": "Tu2",
    "distance": 20,
    "capillary_rate": 0
   },
   {
    "id": 684,
    "soil_type": "Tu3",
    "distance": 20,
    "capillary_rate": 0
   },
   {
    "id": 685,
    "soil_type": "Tu4",
    "distance": 20,
    "capillary_rate": 0
   },
   {
    "id": 686,
    "soil_type": "Ts2",
    "distance": 20,
    "capillary_rate": 0
   },
   {
    "id": 687,
    "soil_type": "Ts3",
    "distance": 20,
    "capillary_rate": 0
   },
   {
    "id": 688,
    "soil_type": "Ts4",
    "distance": 20,
    "capillary_rate": 0
   },
   {
    "id": 689,
    "soil_type": "Su2",
    "distance": 21,
    "capillary_rate": 0
   },
   {
    "id": 690,
    "soil_type": "Su3",
    "distance": 21,
    "capillary_rate": 0.0003
   },
   {
    "id": 691,
    "soil_type": "Su4",
    "distance": 21,
    "capillary_rate": 0.0003
   },
   {
    "id": 692,
    "soil_type": "Sl2",
    "distance": 21,
    "capillary_rate": 0
   },
   {
    "id": 693,
    "soil_type": "Sl3",
    "distance": 21,
    "capillary_rate": 0
   },
   {
    "id": 694,
    "soil_type": "Sl4",
    "distance": 21,
    "capillary_rate": 0
   },
   {
    "id": 695,
    "soil_type": "Slu",
    "distance": 21,
    "capillary_rate": 0
   },
   {
    "id": 696,
    "soil_type": "St2",
    "distance": 21,
    "capillary_rate": 0
   },
   {
    "id": 697,
    "soil_type": "St3",
    "distance": 21,
    "capillary_rate": 0
   },
   {
    "id": 698,
    "soil_type": "fS",
    "distance": 21,
    "capillary_rate": 0
   },
   {
    "id": 699,
    "soil_type": "gS",
    "distance": 21,
    "capillary_rate": 0
   },
   {
    "id": 700,
    "soil_type": "mS",
    "distance": 21,
    "capillary_rate": 0
   },
   {
    "id": 701,
    "soil_type": "Ss",
    "distance": 21,
    "capillary_rate": 0
   },
   {
    "id": 702,
    "soil_type": "Us",
    "distance": 21,
    "capillary_rate": 0.0004
   },
   {
    "id": 703,
    "soil_type": "Uu",
    "distance": 21,
    "capillary_rate": 0.001
   },
   {
    "id": 704,
    "soil_type": "Uls",
    "distance": 21,
    "capillary_rate": 0.0009
   },
   {
    "id": 705,
    "soil_type": "Ut2",
    "distance": 21,
    "capillary_rate": 0.0004
   },
   {
    "id": 706,
    "soil_type": "Ut3",
    "distance": 21,
    "capillary_rate": 0.0004
   },
   {
    "id": 707,
    "soil_type": "Ut4",
    "distance": 21,
    "capillary_rate": 0.0003
   },
   {
    "id": 708,
    "soil_type": "Ls2",
    "distance": 21,
    "capillary_rate": 0
   },
   {
    "id": 709,
    "soil_type": "Ls3",
    "distance": 21,
    "capillary_rate": 0.0002
   },
   {
    "id": 710,
    "soil_type": "Ls4",
    "distance": 21,
    "capillary_rate": 0
   },
   {
    "id": 711,
    "soil_type": "Lt2",
    "distance": 21,
    "capillary_rate": 0
   },
   {
    "id": 712,
    "soil_type": "Lt3",
    "distance": 21,
    "capillary_rate": 0.0002
   },
   {
    "id": 713,
    "soil_type": "Lu",
    "distance": 21,
    "capillary_rate": 0.0003
   },
   {
    "id": 714,
    "soil_type": "Lts",
    "distance": 21,
    "capillary_rate": 0
   },
   {
    "id": 715,
    "soil_type": "Tt",
    "distance": 21,
    "capillary_rate": 0
   },
   {
    "id": 716,
    "soil_type": "Tl",
    "distance": 21,
    "capillary_rate": 0
   },
   {
    "id": 717,
    "soil_type": "Tu2",
    "distance": 21,
    "capillary_rate": 0
   },
   {
    "id": 718,
    "soil_type": "Tu3",
    "distance": 21,
    "capillary_rate": 0
   },
   {
    "id": 719,
    "soil_type": "Tu4",
    "distance": 21,
    "capillary_rate": 0
   },
   {
    "id": 720,
    "soil_type": "Ts2",
    "distance": 21,
    "capillary_rate": 0
   },
   {
    "id": 721,
    "soil_type": "Ts3",
    "distance": 21,
    "capillary_rate": 0
   },
   {
    "id": 722,
    "soil_type": "Ts4",
    "distance": 21,
    "capillary_rate": 0
   },
   {
    "id": 723,
    "soil_type": "Su2",
    "distance": 22,
    "capillary_rate": 0
   },
   {
    "id": 724,
    "soil_type": "Su3",
    "distance": 22,
    "capillary_rate": 0.0003
   },
   {
    "id": 725,
    "soil_type": "Su4",
    "distance": 22,
    "capillary_rate": 0.0003
   },
   {
    "id": 726,
    "soil_type": "Sl2",
    "distance": 22,
    "capillary_rate": 0
   },
   {
    "id": 727,
    "soil_type": "Sl3",
    "distance": 22,
    "capillary_rate": 0
   },
   {
    "id": 728,
    "soil_type": "Sl4",
    "distance": 22,
    "capillary_rate": 0
   },
   {
    "id": 729,
    "soil_type": "Slu",
    "distance": 22,
    "capillary_rate": 0
   },
   {
    "id": 730,
    "soil_type": "St2",
    "distance": 22,
    "capillary_rate": 0
   },
   {
    "id": 731,
    "soil_type": "St3",
    "distance": 22,
    "capillary_rate": 0
   },
   {
    "id": 732,
    "soil_type": "fS",
    "distance": 22,
    "capillary_rate": 0
   },
   {
    "id": 733,
    "soil_type": "gS",
    "distance": 22,
    "capillary_rate": 0
   },
   {
    "id": 734,
    "soil_type": "mS",
    "distance": 22,
    "capillary_rate": 0
   },
   {
    "id": 735,
    "soil_type": "Ss",
    "distance": 22,
    "capillary_rate": 0
   },
   {
    "id": 736,
    "soil_type": "Us",
    "distance": 22,
    "capillary_rate": 0.0004
   },
   {
    "id": 737,
    "soil_type": "Uu",
    "distance": 22,
    "capillary_rate": 0.001
   },
   {
    "id": 738,
    "soil_type": "Uls",
    "distance": 22,
    "capillary_rate": 0.0009
   },
   {
    "id": 739,
    "soil_type": "Ut2",
    "distance": 22,
    "capillary_rate": 0.0004
   },
   {
    "id": 740,
    "soil_type": "Ut3",
    "distance": 22,
    "capillary_rate": 0.0004
   },
   {
    "id": 741,
    "soil_type": "Ut4",
    "distance": 22,
    "capillary_rate": 0.0003
   },
   {
    "id": 742,
    "soil_type": "Ls2",
    "distance": 22,
    "capillary_rate": 0
   },
   {
    "id": 743,
    "soil_type": "Ls3",
    "distance": 22,
    "capillary_rate": 0.0002
   },
   {
    "id": 744,
    "soil_type": "Ls4",
    "distance": 22,
    "capillary_rate": 0
   },
   {
    "id": 745,
    "soil_type": "Lt2",
    "distance": 22,
    "capillary_rate": 0
   },
   {
    "id": 746,
    "soil_type": "Lt3",
    "distance": 22,
    "capillary_rate": 0.0002
   },
   {
    "id": 747,
    "soil_type": "Lu",
    "distance": 22,
    "capillary_rate": 0.0003
   },
   {
    "id": 748,
    "soil_type": "Lts",
    "distance": 22,
    "capillary_rate": 0
   },
   {
    "id": 749,
    "soil_type": "Tt",
    "distance": 22,
    "capillary_rate": 0
   },
   {
    "id": 750,
    "soil_type": "Tl",
    "distance": 22,
    "capillary_rate": 0
   },
   {
    "id": 751,
    "soil_type": "Tu2",
    "distance": 22,
    "capillary_rate": 0
   },
   {
    "id": 752,
    "soil_type": "Tu3",
    "distance": 22,
    "capillary_rate": 0
   },
   {
    "id": 753,
    "soil_type": "Tu4",
    "distance": 22,
    "capillary_rate": 0
   },
   {
    "id": 754,
    "soil_type": "Ts2",
    "distance": 22,
    "capillary_rate": 0
   },
   {
    "id": 755,
    "soil_type": "Ts3",
    "distance": 22,
    "capillary_rate": 0
   },
   {
    "id": 756,
    "soil_type": "Ts4",
    "distance": 22,
    "capillary_rate": 0
   },
   {
    "id": 757,
    "soil_type": "Su2",
    "distance": 23,
    "capillary_rate": 0
   },
   {
    "id": 758,
    "soil_type": "Su3",
    "distance": 23,
    "capillary_rate": 0.0003
   },
   {
    "id": 759,
    "soil_type": "Su4",
    "distance": 23,
    "capillary_rate": 0.0003
   },
   {
    "id": 760,
    "soil_type": "Sl2",
    "distance": 23,
    "capillary_rate": 0
   },
   {
    "id": 761,
    "soil_type": "Sl3",
    "distance": 23,
    "capillary_rate": 0
   },
   {
    "id": 762,
    "soil_type": "Sl4",
    "distance": 23,
    "capillary_rate": 0
   },
   {
    "id": 763,
    "soil_type": "Slu",
    "distance": 23,
    "capillary_rate": 0
   },
   {
    "id": 764,
    "soil_type": "St2",
    "distance": 23,
    "capillary_rate": 0
   },
   {
    "id": 765,
    "soil_type": "St3",
    "distance": 23,
    "capillary_rate": 0
   },
   {
    "id": 766,
    "soil_type": "fS",
    "distance": 23,
    "capillary_rate": 0
   },
   {
    "id": 767,
    "soil_type": "gS",
    "distance": 23,
    "capillary_rate": 0
   },
   {
    "id": 768,
    "soil_type": "mS",
    "distance": 23,
    "capillary_rate": 0
   },
   {
    "id": 769,
    "soil_type": "Ss",
    "distance": 23,
    "capillary_rate": 0
   },
   {
    "id": 770,
    "soil_type": "Us",
    "distance": 23,
    "capillary_rate": 0.0004
   },
   {
    "id": 771,
    "soil_type": "Uu",
    "distance": 23,
    "capillary_rate": 0.001
   },
   {
    "id": 772,
    "soil_type": "Uls",
    "distance": 23,
    "capillary_rate": 0.0009
   },
   {
    "id": 773,
    "soil_type": "Ut2",
    "distance": 23,
    "capillary_rate": 0.0004
   },
   {
    "id": 774,
    "soil_type": "Ut3",
    "distance": 23,
    "capillary_rate": 0.0004
   },
   {
    "id": 775,
    "soil_type": "Ut4",
    "distance": 23,
    "capillary_rate": 0.0003
   },
   {
    "id": 776,
    "soil_type": "Ls2",
    "distance": 23,
    "capillary_rate": 0
   },
   {
    "id": 777,
    "soil_type": "Ls3",
    "distance": 23,
    "capillary_rate": 0.0002
   },
   {
    "id": 778,
    "soil_type": "Ls4",
    "distance": 23,
    "capillary_rate": 0
   },
   {
    "id": 779,
    "soil_type": "Lt2",
    "distance": 23,
    "capillary_rate": 0
   },
   {
    "id": 780,
    "soil_type": "Lt3",
    "distance": 23,
    "capillary_rate": 0.0002
   },
   {
    "id": 781,
    "soil_type": "Lu",
    "distance": 23,
    "capillary_rate": 0.0003
   },
   {
    "id": 782,
    "soil_type": "Lts",
    "distance": 23,
    "capillary_rate": 0
   },
   {
    "id": 783,
    "soil_type": "Tt",
    "distance": 23,
    "capillary_rate": 0
   },
   {
    "id": 784,
    "soil_type": "Tl",
    "distance": 23,
    "capillary_rate": 0
   },
   {
    "id": 785,
    "soil_type": "Tu2",
    "distance": 23,
    "capillary_rate": 0
   },
   {
    "id": 786,
    "soil_type": "Tu3",
    "distance": 23,
    "capillary_rate": 0
   },
   {
    "id": 787,
    "soil_type": "Tu4",
    "distance": 23,
    "capillary_rate": 0
   },
   {
    "id": 788,
    "soil_type": "Ts2",
    "distance": 23,
    "capillary_rate": 0
   },
   {
    "id": 789,
    "soil_type": "Ts3",
    "distance": 23,
    "capillary_rate": 0
   },
   {
    "id": 790,
    "soil_type": "Ts4",
    "distance": 23,
    "capillary_rate": 0
   },
   {
    "id": 791,
    "soil_type": "Su2",
    "distance": 24,
    "capillary_rate": 0
   },
   {
    "id": 792,
    "soil_type": "Su3",
    "distance": 24,
    "capillary_rate": 0.0003
   },
   {
    "id": 793,
    "soil_type": "Su4",
    "distance": 24,
    "capillary_rate": 0.0003
   },
   {
    "id": 794,
    "soil_type": "Sl2",
    "distance": 24,
    "capillary_rate": 0
   },
   {
    "id": 795,
    "soil_type": "Sl3",
    "distance": 24,
    "capillary_rate": 0
   },
   {
    "id": 796,
    "soil_type": "Sl4",
    "distance": 24,
    "capillary_rate": 0
   },
   {
    "id": 797,
    "soil_type": "Slu",
    "distance": 24,
    "capillary_rate": 0
   },
   {
    "id": 798,
    "soil_type": "St2",
    "distance": 24,
    "capillary_rate": 0
   },
   {
    "id": 799,
    "soil_type": "St3",
    "distance": 24,
    "capillary_rate": 0
   },
   {
    "id": 800,
    "soil_type": "fS",
    "distance": 24,
    "capillary_rate": 0
   },
   {
    "id": 801,
    "soil_type": "gS",
    "distance": 24,
    "capillary_rate": 0
   },
   {
    "id": 802,
    "soil_type": "mS",
    "distance": 24,
    "capillary_rate": 0
   },
   {
    "id": 803,
    "soil_type": "Ss",
    "distance": 24,
    "capillary_rate": 0
   },
   {
    "id": 804,
    "soil_type": "Us",
    "distance": 24,
    "capillary_rate": 0.0004
   },
   {
    "id": 805,
    "soil_type": "Uu",
    "distance": 24,
    "capillary_rate": 0.001
   },
   {
    "id": 806,
    "soil_type": "Uls",
    "distance": 24,
    "capillary_rate": 0.0009
   },
   {
    "id": 807,
    "soil_type": "Ut2",
    "distance": 24,
    "capillary_rate": 0.0004
   },
   {
    "id": 808,
    "soil_type": "Ut3",
    "distance": 24,
    "capillary_rate": 0.0004
   },
   {
    "id": 809,
    "soil_type": "Ut4",
    "distance": 24,
    "capillary_rate": 0.0003
   },
   {
    "id": 810,
    "soil_type": "Ls2",
    "distance": 24,
    "capillary_rate": 0
   },
   {
    "id": 811,
    "soil_type": "Ls3",
    "distance": 24,
    "capillary_rate": 0.0002
   },
   {
    "id": 812,
    "soil_type": "Ls4",
    "distance": 24,
    "capillary_rate": 0
   },
   {
    "id": 813,
    "soil_type": "Lt2",
    "distance": 24,
    "capillary_rate": 0
   },
   {
    "id": 814,
    "soil_type": "Lt3",
    "distance": 24,
    "capillary_rate": 0.0002
   },
   {
    "id": 815,
    "soil_type": "Lu",
    "distance": 24,
    "capillary_rate": 0.0003
   },
   {
    "id": 816,
    "soil_type": "Lts",
    "distance": 24,
    "capillary_rate": 0
   },
   {
    "id": 817,
    "soil_type": "Tt",
    "distance": 24,
    "capillary_rate": 0
   },
   {
    "id": 818,
    "soil_type": "Tl",
    "distance": 24,
    "capillary_rate": 0
   },
   {
    "id": 819,
    "soil_type": "Tu2",
    "distance": 24,
    "capillary_rate": 0
   },
   {
    "id": 820,
    "soil_type": "Tu3",
    "distance": 24,
    "capillary_rate": 0
   },
   {
    "id": 821,
    "soil_type": "Tu4",
    "distance": 24,
    "capillary_rate": 0
   },
   {
    "id": 822,
    "soil_type": "Ts2",
    "distance": 24,
    "capillary_rate": 0
   },
   {
    "id": 823,
    "soil_type": "Ts3",
    "distance": 24,
    "capillary_rate": 0
   },
   {
    "id": 824,
    "soil_type": "Ts4",
    "distance": 24,
    "capillary_rate": 0
   },
   {
    "id": 825,
    "soil_type": "Su2",
    "distance": 25,
    "capillary_rate": 0
   },
   {
    "id": 826,
    "soil_type": "Su3",
    "distance": 25,
    "capillary_rate": 0.0001
   },
   {
    "id": 827,
    "soil_type": "Su4",
    "distance": 25,
    "capillary_rate": 0.0001
   },
   {
    "id": 828,
    "soil_type": "Sl2",
    "distance": 25,
    "capillary_rate": 0
   },
   {
    "id": 829,
    "soil_type": "Sl3",
    "distance": 25,
    "capillary_rate": 0
   },
   {
    "id": 830,
    "soil_type": "Sl4",
    "distance": 25,
    "capillary_rate": 0
   },
   {
    "id": 831,
    "soil_type": "Slu",
    "distance": 25,
    "capillary_rate": 0
   },
   {
    "id": 832,
    "soil_type": "St2",
    "distance": 25,
    "capillary_rate": 0
   },
   {
    "id": 833,
    "soil_type": "St3",
    "distance": 25,
    "capillary_rate": 0
   },
   {
    "id": 834,
    "soil_type": "fS",
    "distance": 25,
    "capillary_rate": 0
   },
   {
    "id": 835,
    "soil_type": "gS",
    "distance": 25,
    "capillary_rate": 0
   },
   {
    "id": 836,
    "soil_type": "mS",
    "distance": 25,
    "capillary_rate": 0
   },
   {
    "id": 837,
    "soil_type": "Ss",
    "distance": 25,
    "capillary_rate": 0
   },
   {
    "id": 838,
    "soil_type": "Us",
    "distance": 25,
    "capillary_rate": 0.0001
   },
   {
    "id": 839,
    "soil_type": "Uu",
    "distance": 25,
    "capillary_rate": 0.0005
   },
   {
    "id": 840,
    "soil_type": "Uls",
    "distance": 25,
    "capillary_rate": 0.0005
   },
   {
    "id": 841,
    "soil_type": "Ut2",
    "distance": 25,
    "capillary_rate": 0.0001
   },
   {
    "id": 842,
    "soil_type": "Ut3",
    "distance": 25,
    "capillary_rate": 0.0001
   },
   {
    "id": 843,
    "soil_type": "Ut4",
    "distance": 25,
    "capillary_rate": 0.0001
   },
   {
    "id": 844,
    "soil_type": "Ls2",
    "distance": 25,
    "capillary_rate": 0
   },
   {
    "id": 845,
    "soil_type": "Ls3",
    "distance": 25,
    "capillary_rate": 0.0001
   },
   {
    "id": 846,
    "soil_type": "Ls4",
    "distance": 25,
    "capillary_rate": 0
   },
   {
    "id": 847,
    "soil_type": "Lt2",
    "distance": 25,
    "capillary_rate": 0
   },
   {
    "id": 848,
    "soil_type": "Lt3",
    "distance": 25,
    "capillary_rate": 0.0001
   },
   {
    "id": 849,
    "soil_type": "Lu",
    "distance": 25,
    "capillary_rate": 0.0001
   },
   {
    "id": 850,
    "soil_type": "Lts",
    "distance": 25,
    "capillary_rate": 0
   },
   {
    "id": 851,
    "soil_type": "Tt",
    "distance": 25,
    "capillary_rate": 0
   },
   {
    "id": 852,
    "soil_type": "Tl",
    "distance": 25,
    "capillary_rate": 0
   },
   {
    "id": 853,
    "soil_type": "Tu2",
    "distance": 25,
    "capillary_rate": 0
   },
   {
    "id": 854,
    "soil_type": "Tu3",
    "distance": 25,
    "capillary_rate": 0
   },
   {
    "id": 855,
    "soil_type": "Tu4",
    "distance": 25,
    "capillary_rate": 0
   },
   {
    "id": 856,
    "soil_type": "Ts2",
    "distance": 25,
    "capillary_rate": 0
   },
   {
    "id": 857,
    "soil_type": "Ts3",
    "distance": 25,
    "capillary_rate": 0
   },
   {
    "id": 858,
    "soil_type": "Ts4",
    "distance": 25,
    "capillary_rate": 0
   },
   {
    "id": 859,
    "soil_type": "Su2",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 860,
    "soil_type": "Su3",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 861,
    "soil_type": "Su4",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 862,
    "soil_type": "Sl2",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 863,
    "soil_type": "Sl3",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 864,
    "soil_type": "Sl4",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 865,
    "soil_type": "Slu",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 866,
    "soil_type": "St2",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 867,
    "soil_type": "St3",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 868,
    "soil_type": "fS",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 869,
    "soil_type": "gS",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 870,
    "soil_type": "mS",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 871,
    "soil_type": "Ss",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 872,
    "soil_type": "Us",
    "distance": 26,
    "capillary_rate": 0.0001
   },
   {
    "id": 873,
    "soil_type": "Uu",
    "distance": 26,
    "capillary_rate": 0.0003
   },
   {
    "id": 874,
    "soil_type": "Uls",
    "distance": 26,
    "capillary_rate": 0.0003
   },
   {
    "id": 875,
    "soil_type": "Ut2",
    "distance": 26,
    "capillary_rate": 0.0001
   },
   {
    "id": 876,
    "soil_type": "Ut3",
    "distance": 26,
    "capillary_rate": 0.0001
   },
   {
    "id": 877,
    "soil_type": "Ut4",
    "distance": 26,
    "capillary_rate": 0.0001
   },
   {
    "id": 878,
    "soil_type": "Ls2",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 879,
    "soil_type": "Ls3",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 880,
    "soil_type": "Ls4",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 881,
    "soil_type": "Lt2",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 882,
    "soil_type": "Lt3",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 883,
    "soil_type": "Lu",
    "distance": 26,
    "capillary_rate": 0.0001
   },
   {
    "id": 884,
    "soil_type": "Lts",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 885,
    "soil_type": "Tt",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 886,
    "soil_type": "Tl",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 887,
    "soil_type": "Tu2",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 888,
    "soil_type": "Tu3",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 889,
    "soil_type": "Tu4",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 890,
    "soil_type": "Ts2",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 891,
    "soil_type": "Ts3",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 892,
    "soil_type": "Ts4",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 893,
    "soil_type": "Su2",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 894,
    "soil_type": "Su3",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 895,
    "soil_type": "Su4",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 896,
    "soil_type": "Sl2",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 897,
    "soil_type": "Sl3",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 898,
    "soil_type": "Sl4",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 899,
    "soil_type": "Slu",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 900,
    "soil_type": "St2",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 901,
    "soil_type": "St3",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 902,
    "soil_type": "fS",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 903,
    "soil_type": "gS",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 904,
    "soil_type": "mS",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 905,
    "soil_type": "Ss",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 906,
    "soil_type": "Us",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 907,
    "soil_type": "Uu",
    "distance": 27,
    "capillary_rate": 0.0001
   },
   {
    "id": 908,
    "soil_type": "Uls",
    "distance": 27,
    "capillary_rate": 0.0001
   },
   {
    "id": 909,
    "soil_type": "Ut2",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 910,
    "soil_type": "Ut3",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 911,
    "soil_type": "Ut4",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 912,
    "soil_type": "Ls2",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 913,
    "soil_type": "Ls3",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 914,
    "soil_type": "Ls4",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 915,
    "soil_type": "Lt2",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 916,
    "soil_type": "Lt3",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 917,
    "soil_type": "Lu",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 918,
    "soil_type": "Lts",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 919,
    "soil_type": "Tt",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 920,
    "soil_type": "Tl",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 921,
    "soil_type": "Tu2",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 922,
    "soil_type": "Tu3",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 923,
    "soil_type": "Tu4",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 924,
    "soil_type": "Ts2",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 925,
    "soil_type": "Ts3",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 926,
    "soil_type": "Ts4",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 927,
    "soil_type": "Hh",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 928,
    "soil_type": "Hh",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 929,
    "soil_type": "Hh",
    "distance": 25,
    "capillary_rate": 0
   },
   {
    "id": 930,
    "soil_type": "Hh",
    "distance": 24,
    "capillary_rate": 0
   },
   {
    "id": 931,
    "soil_type": "Hh",
    "distance": 23,
    "capillary_rate": 0
   },
   {
    "id": 932,
    "soil_type": "Hh",
    "distance": 22,
    "capillary_rate": 0
   },
   {
    "id": 933,
    "soil_type": "Hh",
    "distance": 21,
    "capillary_rate": 0
   },
   {
    "id": 934,
    "soil_type": "Hh",
    "distance": 20,
    "capillary_rate": 0
   },
   {
    "id": 935,
    "soil_type": "Hh",
    "distance": 19,
    "capillary_rate": 0
   },
   {
    "id": 936,
    "soil_type": "Hh",
    "distance": 18,
    "capillary_rate": 0
   },
   {
    "id": 937,
    "soil_type": "Hh",
    "distance": 17,
    "capillary_rate": 0
   },
   {
    "id": 938,
    "soil_type": "Hh",
    "distance": 16,
    "capillary_rate": 0
   },
   {
    "id": 939,
    "soil_type": "Hh",
    "distance": 15,
    "capillary_rate": 0
   },
   {
    "id": 940,
    "soil_type": "Hh",
    "distance": 14,
    "capillary_rate": 0
   },
   {
    "id": 941,
    "soil_type": "Hh",
    "distance": 13,
    "capillary_rate": 0
   },
   {
    "id": 942,
    "soil_type": "Hh",
    "distance": 12,
    "capillary_rate": 0.00005
   },
   {
    "id": 943,
    "soil_type": "Hh",
    "distance": 11,
    "capillary_rate": 0.00005
   },
   {
    "id": 944,
    "soil_type": "Hh",
    "distance": 10,
    "capillary_rate": 0.0002
   },
   {
    "id": 945,
    "soil_type": "Hh",
    "distance": 9,
    "capillary_rate": 0.0002
   },
   {
    "id": 946,
    "soil_type": "Hh",
    "distance": 8,
    "capillary_rate": 0.0003
   },
   {
    "id": 947,
    "soil_type": "Hh",
    "distance": 7,
    "capillary_rate": 0.0004
   },
   {
    "id": 948,
    "soil_type": "Hh",
    "distance": 6,
    "capillary_rate": 0.0008
   },
   {
    "id": 949,
    "soil_type": "Hh",
    "distance": 5,
    "capillary_rate": 0.0013
   },
   {
    "id": 950,
    "soil_type": "Hh",
    "distance": 4,
    "capillary_rate": 0.002
   },
   {
    "id": 951,
    "soil_type": "Hh",
    "distance": 3,
    "capillary_rate": 0.003
   },
   {
    "id": 952,
    "soil_type": "Hh",
    "distance": 2,
    "capillary_rate": 0.005
   },
   {
    "id": 953,
    "soil_type": "Hh",
    "distance": 1,
    "capillary_rate": 0.005
   },
   {
    "id": 954,
    "soil_type": "Hn",
    "distance": 2,
    "capillary_rate": 0.004
   },
   {
    "id": 955,
    "soil_type": "Hn",
    "distance": 3,
    "capillary_rate": 0.0022
   },
   {
    "id": 956,
    "soil_type": "Hn",
    "distance": 4,
    "capillary_rate": 0.0011
   },
   {
    "id": 957,
    "soil_type": "Hn",
    "distance": 5,
    "capillary_rate": 0.0006
   },
   {
    "id": 958,
    "soil_type": "Hn",
    "distance": 6,
    "capillary_rate": 0.0003
   },
   {
    "id": 959,
    "soil_type": "Hn",
    "distance": 7,
    "capillary_rate": 0.0002
   },
   {
    "id": 960,
    "soil_type": "Hn",
    "distance": 8,
    "capillary_rate": 0.0001
   },
   {
    "id": 961,
    "soil_type": "Hn",
    "distance": 9,
    "capillary_rate": 0.00005
   },
   {
    "id": 962,
    "soil_type": "Hn",
    "distance": 10,
    "capillary_rate": 0
   },
   {
    "id": 963,
    "soil_type": "Hn",
    "distance": 11,
    "capillary_rate": 0
   },
   {
    "id": 964,
    "soil_type": "Hn",
    "distance": 12,
    "capillary_rate": 0
   },
   {
    "id": 965,
    "soil_type": "Hn",
    "distance": 13,
    "capillary_rate": 0
   },
   {
    "id": 966,
    "soil_type": "Hn",
    "distance": 14,
    "capillary_rate": 0
   },
   {
    "id": 967,
    "soil_type": "Hn",
    "distance": 15,
    "capillary_rate": 0
   },
   {
    "id": 968,
    "soil_type": "Hn",
    "distance": 16,
    "capillary_rate": 0
   },
   {
    "id": 969,
    "soil_type": "Hn",
    "distance": 17,
    "capillary_rate": 0
   },
   {
    "id": 970,
    "soil_type": "Hn",
    "distance": 18,
    "capillary_rate": 0
   },
   {
    "id": 971,
    "soil_type": "Hn",
    "distance": 19,
    "capillary_rate": 0
   },
   {
    "id": 972,
    "soil_type": "Hn",
    "distance": 20,
    "capillary_rate": 0
   },
   {
    "id": 973,
    "soil_type": "Hn",
    "distance": 21,
    "capillary_rate": 0
   },
   {
    "id": 974,
    "soil_type": "Hn",
    "distance": 22,
    "capillary_rate": 0
   },
   {
    "id": 975,
    "soil_type": "Hn",
    "distance": 23,
    "capillary_rate": 0
   },
   {
    "id": 976,
    "soil_type": "Hn",
    "distance": 24,
    "capillary_rate": 0
   },
   {
    "id": 977,
    "soil_type": "Hn",
    "distance": 25,
    "capillary_rate": 0
   },
   {
    "id": 978,
    "soil_type": "Hn",
    "distance": 26,
    "capillary_rate": 0
   },
   {
    "id": 979,
    "soil_type": "Hn",
    "distance": 27,
    "capillary_rate": 0
   },
   {
    "id": 981,
    "soil_type": "Hn",
    "distance": 1,
    "capillary_rate": 0.004
   }
  ]
 },
 "residue_table": {
  "columns": [
   "ID",
   "crop_id",
   "residue_type",
   "dm",
   "nh4",
   "no3",
   "nh2",
   "k_slow",
   "k_fast",
   "part_s",
   "part_f",
   "cn_s",
   "cn_f",
   "smb_s",
   "smb_f",
   "comment"
  ],
  "rows": [
   {
    "ID": 1,
    "crop_id": -1,
    "residue_type": "Broad beans",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 2,
    "crop_id": -1,
    "residue_type": "Brussels Sprouts",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 3,
    "crop_id": -1,
    "residue_type": "Dutch White Cabbage",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 4,
    "crop_id": -1,
    "residue_type": "Cabbage Summer",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 5,
    "crop_id": -1,
    "residue_type": "Cabbage Wint/Spring",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 6,
    "crop_id": -1,
    "residue_type": "Calabres",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 7,
    "crop_id": -1,
    "residue_type": "Carrot",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 8,
    "crop_id": -1,
    "residue_type": "Cauliflower",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 9,
    "crop_id": -1,
    "residue_type": "Chinese Cabbage",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 10,
    "crop_id": -1,
    "residue_type": "French Beans",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 11,
    "crop_id": -1,
    "residue_type": "Leek",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 12,
    "crop_id": -1,
    "residue_type": "Lettuce Butterhead",
    "dm": 1,
    "nh4": 0,
    "no3": 0.01,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.23,
    "part_f": 0.77,
    "cn_s": 13.1,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 13,
    "crop_id": -1,
    "residue_type": "Lettuce Crisp",
    "dm": 1,
    "nh4": 0,
    "no3": 0.01,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.23,
    "part_f": 0.77,
    "cn_s": 13.1,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 14,
    "crop_id": -1,
    "residue_type": "Maize",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.61,
    "part_f": 0.39,
    "cn_s": 225,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 15,
    "crop_id": -1,
    "residue_type": "Onion",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 16,
    "crop_id": -1,
    "residue_type": "Parsnip",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 18,
    "crop_id": -1,
    "residue_type": "Potato Early",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 19,
    "crop_id": 8,
    "residue_type": "Potato Late",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 20,
    "crop_id": -1,
    "residue_type": "Radish",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 21,
    "crop_id": -1,
    "residue_type": "Red Beet",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 22,
    "crop_id": -1,
    "residue_type": "Spinach",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 23,
    "crop_id": 10,
    "residue_type": "Sugar Beet",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 24,
    "crop_id": -1,
    "residue_type": "Swede",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 25,
    "crop_id": -1,
    "residue_type": "Turnip",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 26,
    "crop_id": 1,
    "residue_type": "Wheat",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.67,
    "part_f": 0.33,
    "cn_s": 200,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 27,
    "crop_id": -1,
    "residue_type": "Lamb's Lettuce",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.23,
    "part_f": 0.77,
    "cn_s": 13.1,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 28,
    "crop_id": -1,
    "residue_type": "Cucumber for pickling",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 29,
    "crop_id": -1,
    "residue_type": "Kohlrabi",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 30,
    "crop_id": -1,
    "residue_type": "Celery",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 31,
    "crop_id": -1,
    "residue_type": "Celeriac",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 32,
    "crop_id": -1,
    "residue_type": "Small radish (Spring)",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 33,
    "crop_id": -1,
    "residue_type": "Small radish (Summer)",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 34,
    "crop_id": -1,
    "residue_type": "Kale",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 35,
    "crop_id": -1,
    "residue_type": "Tomato",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 36,
    "crop_id": -1,
    "residue_type": "Squash",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 38,
    "crop_id": -1,
    "residue_type": "Fennel",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 39,
    "crop_id": -1,
    "residue_type": "Artichoke",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 40,
    "crop_id": -1,
    "residue_type": "Parsley",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 41,
    "crop_id": -1,
    "residue_type": "Sweetcorn",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.61,
    "part_f": 0.39,
    "cn_s": 225,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 42,
    "crop_id": 9,
    "residue_type": "Oil seed rape",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.78,
    "part_f": 0.22,
    "cn_s": 227,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 43,
    "crop_id": -1,
    "residue_type": "Bell/Sweet Pepper",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 44,
    "crop_id": -1,
    "residue_type": "Eggplant/Aubergine",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 45,
    "crop_id": -1,
    "residue_type": "Water melon",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 46,
    "crop_id": -1,
    "residue_type": "Radicchio",
    "dm": 1,
    "nh4": 0,
    "no3": 0.01,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.23,
    "part_f": 0.77,
    "cn_s": 13.1,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 47,
    "crop_id": -1,
    "residue_type": "Endive curly",
    "dm": 1,
    "nh4": 0,
    "no3": 0.01,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.23,
    "part_f": 0.77,
    "cn_s": 13.1,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 48,
    "crop_id": -1,
    "residue_type": "Endive Batavian",
    "dm": 1,
    "nh4": 0,
    "no3": 0.01,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.23,
    "part_f": 0.77,
    "cn_s": 13.1,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 49,
    "crop_id": -1,
    "residue_type": "Spring onion",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 50,
    "crop_id": -1,
    "residue_type": "Processing tomato",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 51,
    "crop_id": -1,
    "residue_type": "Red cabbage",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 52,
    "crop_id": -1,
    "residue_type": "Savoy cabbage",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 53,
    "crop_id": -1,
    "residue_type": "White cabbage industry",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 54,
    "crop_id": 2,
    "residue_type": "Barley",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.67,
    "part_f": 0.33,
    "cn_s": 180,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 55,
    "crop_id": 3,
    "residue_type": "Rye",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.67,
    "part_f": 0.33,
    "cn_s": 200,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 56,
    "crop_id": -1,
    "residue_type": "Garlic",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 57,
    "crop_id": -1,
    "residue_type": "Courgette/Zucchini",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 58,
    "crop_id": -1,
    "residue_type": "Cucumber not pickling",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 59,
    "crop_id": -1,
    "residue_type": "Melon",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 60,
    "crop_id": -1,
    "residue_type": "Rye cover",
    "dm": 1,
    "nh4": 0,
    "no3": 0,
    "nh2": 0,
    "k_slow": 0.005,
    "k_fast": 0.025,
    "part_s": 0.69,
    "part_f": 0.32,
    "cn_s": 117,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 61,
    "crop_id": -1,
    "residue_type": "Vetch cover",
    "dm": 1,
    "nh4": 0,
    "no3": 0,
    "nh2": 0,
    "k_slow": 0.005,
    "k_fast": 0.025,
    "part_s": 0.35,
    "part_f": 0.65,
    "cn_s": 57.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 62,
    "crop_id": -1,
    "residue_type": "Phacelia cover",
    "dm": 1,
    "nh4": 0,
    "no3": 0,
    "nh2": 0,
    "k_slow": 0.005,
    "k_fast": 0.025,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 63,
    "crop_id": 11,
    "residue_type": "Mustard cover",
    "dm": 1,
    "nh4": 0,
    "no3": 0,
    "nh2": 0,
    "k_slow": 0.005,
    "k_fast": 0.025,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 64,
    "crop_id": -1,
    "residue_type": "Fodder raddish cover",
    "dm": 1,
    "nh4": 0,
    "no3": 0,
    "nh2": 0,
    "k_slow": 0.005,
    "k_fast": 0.025,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 65,
    "crop_id": -1,
    "residue_type": "Pure clover",
    "dm": 1,
    "nh4": 0,
    "no3": 0,
    "nh2": 0,
    "k_slow": 0.005,
    "k_fast": 0.025,
    "part_s": 0.35,
    "part_f": 0.65,
    "cn_s": 57,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 66,
    "crop_id": 13,
    "residue_type": "Clover grass ley",
    "dm": 1,
    "nh4": 0,
    "no3": 0,
    "nh2": 0,
    "k_slow": 0.005,
    "k_fast": 0.025,
    "part_s": 0.47,
    "part_f": 0.53,
    "cn_s": 78,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 68,
    "crop_id": -1,
    "residue_type": "Natural weeds",
    "dm": 1,
    "nh4": 0,
    "no3": 0,
    "nh2": 0,
    "k_slow": 0.005,
    "k_fast": 0.025,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 69,
    "crop_id": -1,
    "residue_type": "Maize (corn_cob_mix)",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.61,
    "part_f": 0.39,
    "cn_s": 225,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 71,
    "crop_id": 5,
    "residue_type": "Maize (grain)",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.61,
    "part_f": 0.39,
    "cn_s": 225,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 82,
    "crop_id": 27,
    "residue_type": "Grapevine",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.67,
    "part_f": 0.33,
    "cn_s": 200,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": ""
   },
   {
    "ID": 70,
    "crop_id": 7,
    "residue_type": "Maize (silage)",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.61,
    "part_f": 0.39,
    "cn_s": 225,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 83,
    "crop_id": 6,
    "residue_type": "Maize (grain) Pioneer 30K75",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.61,
    "part_f": 0.39,
    "cn_s": 225,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 84,
    "crop_id": 14,
    "residue_type": "Alfalfa",
    "dm": 1,
    "nh4": 0,
    "no3": 0,
    "nh2": 0,
    "k_slow": 0.005,
    "k_fast": 0.025,
    "part_s": 0.47,
    "part_f": 0.53,
    "cn_s": 78,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 85,
    "crop_id": 15,
    "residue_type": "Clover grass ley",
    "dm": 1,
    "nh4": 0,
    "no3": 0,
    "nh2": 0,
    "k_slow": 0.005,
    "k_fast": 0.025,
    "part_s": 0.47,
    "part_f": 0.53,
    "cn_s": 78,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 86,
    "crop_id": 28,
    "residue_type": "Soybean 000",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.67,
    "part_f": 0.33,
    "cn_s": 75,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": ""
   },
   {
    "ID": 87,
    "crop_id": 29,
    "residue_type": "Soybean 00",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.67,
    "part_f": 0.33,
    "cn_s": 75,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": ""
   },
   {
    "ID": 88,
    "crop_id": 30,
    "residue_type": "Soybean 0",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.67,
    "part_f": 0.33,
    "cn_s": 75,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": ""
   },
   {
    "ID": 89,
    "crop_id": 31,
    "residue_type": "Soybean I",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.67,
    "part_f": 0.33,
    "cn_s": 75,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": ""
   },
   {
    "ID": 90,
    "crop_id": 32,
    "residue_type": "Soybean II",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.67,
    "part_f": 0.33,
    "cn_s": 75,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": ""
   },
   {
    "ID": 91,
    "crop_id": 33,
    "residue_type": "Soybean III",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.67,
    "part_f": 0.33,
    "cn_s": 75,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": ""
   },
   {
    "ID": 92,
    "crop_id": 34,
    "residue_type": "Soybean IV",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.67,
    "part_f": 0.33,
    "cn_s": 75,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": ""
   },
   {
    "ID": 93,
    "crop_id": 35,
    "residue_type": "Soybean V",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.67,
    "part_f": 0.33,
    "cn_s": 75,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": ""
   },
   {
    "ID": 94,
    "crop_id": 36,
    "residue_type": "Soybean VI",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.67,
    "part_f": 0.33,
    "cn_s": 75,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": ""
   },
   {
    "ID": 95,
    "crop_id": 37,
    "residue_type": "Soybean VII",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.67,
    "part_f": 0.33,
    "cn_s": 75,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": ""
   },
   {
    "ID": 96,
    "crop_id": 38,
    "residue_type": "Soybean VIII",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.67,
    "part_f": 0.33,
    "cn_s": 75,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": ""
   },
   {
    "ID": 97,
    "crop_id": 39,
    "residue_type": "Soybean IX",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.67,
    "part_f": 0.33,
    "cn_s": 75,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": ""
   },
   {
    "ID": 98,
    "crop_id": 40,
    "residue_type": "Soybean X",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.67,
    "part_f": 0.33,
    "cn_s": 75,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": ""
   },
   {
    "ID": 99,
    "crop_id": 41,
    "residue_type": "Soybean XI",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.67,
    "part_f": 0.33,
    "cn_s": 75,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": ""
   },
   {
    "ID": 100,
    "crop_id": 42,
    "residue_type": "Soybean XII",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.67,
    "part_f": 0.33,
    "cn_s": 75,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": ""
   },
   {
    "ID": 101,
    "crop_id": 18,
    "residue_type": "Sudan gras",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.61,
    "part_f": 0.39,
    "cn_s": 225,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Copy of maize parameters"
   },
   {
    "ID": 102,
    "crop_id": 19,
    "residue_type": "winter triticale",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.67,
    "part_f": 0.33,
    "cn_s": 200,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 103,
    "crop_id": 16,
    "residue_type": "Grass ley",
    "dm": 1,
    "nh4": 0,
    "no3": 0,
    "nh2": 0,
    "k_slow": 0.005,
    "k_fast": 0.025,
    "part_s": 0.59,
    "part_f": 0.41,
    "cn_s": 98,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 104,
    "crop_id": 17,
    "residue_type": "Oil raddish",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.78,
    "part_f": 0.22,
    "cn_s": 227,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 105,
    "crop_id": 20,
    "residue_type": "Spring rye",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.67,
    "part_f": 0.33,
    "cn_s": 200,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 106,
    "crop_id": 21,
    "residue_type": "Sorghum",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.61,
    "part_f": 0.39,
    "cn_s": 225,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 107,
    "crop_id": 22,
    "residue_type": "Oat",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": " "
   },
   {
    "ID": 108,
    "crop_id": 23,
    "residue_type": "spring triticale",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.67,
    "part_f": 0.33,
    "cn_s": 200,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 109,
    "crop_id": 24,
    "residue_type": "Peas",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": "Partition and C:N ratio according to SCD data (Jensen 2005); DAISY standard rate coefficients"
   },
   {
    "ID": 111,
    "crop_id": 43,
    "residue_type": "Cotton",
    "dm": 1,
    "nh4": 0,
    "no3": 0.001,
    "nh2": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.67,
    "part_f": 0.33,
    "cn_s": 75,
    "cn_f": 0,
    "smb_s": 0.5,
    "smb_f": 0.5,
    "comment": ""
   }
  ]
 },
 "crop2ods_dependent_param": {
  "columns": [
   "crop_id",
   "organ_id",
   "dev_stage_id",
   "ods_dependent_param_id",
   "value"
  ],
  "rows": [
   {
    "crop_id": 1,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 1,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 1,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.13
   },
   {
    "crop_id": 1,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 1,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 1,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 1,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 1,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 1,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 1,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.67
   },
   {
    "crop_id": 1,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.03
   },
   {
    "crop_id": 1,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.97
   },
   {
    "crop_id": 1,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 1,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 1,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 2,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.3
   },
   {
    "crop_id": 2,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.1
   },
   {
    "crop_id": 2,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 2,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 2,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 2,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 2,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 2,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 2,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.4
   },
   {
    "crop_id": 2,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.3
   },
   {
    "crop_id": 2,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 2,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 2,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 2,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.53
   },
   {
    "crop_id": 3,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 3,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.13
   },
   {
    "crop_id": 3,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.47
   },
   {
    "crop_id": 3,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 3,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.37
   },
   {
    "crop_id": 3,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.03
   },
   {
    "crop_id": 3,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.03
   },
   {
    "crop_id": 3,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 3,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 3,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.25
   },
   {
    "crop_id": 3,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.75
   },
   {
    "crop_id": 3,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 3,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 3,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 4,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.25
   },
   {
    "crop_id": 4,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.17
   },
   {
    "crop_id": 4,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 4,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.23
   },
   {
    "crop_id": 4,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.23
   },
   {
    "crop_id": 4,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.03
   },
   {
    "crop_id": 4,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.03
   },
   {
    "crop_id": 4,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.52
   },
   {
    "crop_id": 4,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 4,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.002
   },
   {
    "crop_id": 4,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.002
   },
   {
    "crop_id": 4,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.1
   },
   {
    "crop_id": 4,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 4,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 4,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 4,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 10,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.54
   },
   {
    "crop_id": 10,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 10,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.15
   },
   {
    "crop_id": 10,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 10,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 10,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 10,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 10,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 10,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 10,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.08
   },
   {
    "crop_id": 10,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 10,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.08
   },
   {
    "crop_id": 10,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.28
   },
   {
    "crop_id": 10,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 10,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.41
   },
   {
    "crop_id": 10,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 10,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.15
   },
   {
    "crop_id": 10,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 10,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.01
   },
   {
    "crop_id": 10,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0.001
   },
   {
    "crop_id": 10,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 10,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.005
   },
   {
    "crop_id": 10,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 10,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.01
   },
   {
    "crop_id": 10,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.18
   },
   {
    "crop_id": 10,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 10,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.41
   },
   {
    "crop_id": 10,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 10,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.27
   },
   {
    "crop_id": 10,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 10,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.01
   },
   {
    "crop_id": 10,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 10,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0.01
   },
   {
    "crop_id": 10,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 10,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 10,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 10,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 10,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 10,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.02
   },
   {
    "crop_id": 10,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 10,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.58
   },
   {
    "crop_id": 10,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 10,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.98
   },
   {
    "crop_id": 10,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 10,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0.99
   },
   {
    "crop_id": 10,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 10,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 10,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 8,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.29
   },
   {
    "crop_id": 8,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.08
   },
   {
    "crop_id": 8,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.08
   },
   {
    "crop_id": 8,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 8,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 8,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.1
   },
   {
    "crop_id": 8,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.03
   },
   {
    "crop_id": 8,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.03
   },
   {
    "crop_id": 8,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.21
   },
   {
    "crop_id": 8,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.13
   },
   {
    "crop_id": 8,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.01
   },
   {
    "crop_id": 8,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.16
   },
   {
    "crop_id": 8,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.87
   },
   {
    "crop_id": 8,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.99
   },
   {
    "crop_id": 8,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 8,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 8,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 8,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 9,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 9,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.13
   },
   {
    "crop_id": 9,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 9,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.4
   },
   {
    "crop_id": 9,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.17
   },
   {
    "crop_id": 9,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0.01
   },
   {
    "crop_id": 9,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.01
   },
   {
    "crop_id": 9,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.01
   },
   {
    "crop_id": 9,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.4
   },
   {
    "crop_id": 9,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.7
   },
   {
    "crop_id": 9,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.1
   },
   {
    "crop_id": 9,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.9
   },
   {
    "crop_id": 9,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 9,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.65
   },
   {
    "crop_id": 5,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 5,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 5,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 5,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0.005
   },
   {
    "crop_id": 5,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.1
   },
   {
    "crop_id": 5,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.1
   },
   {
    "crop_id": 5,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.35
   },
   {
    "crop_id": 5,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 5,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 5,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 5,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0.001
   },
   {
    "crop_id": 5,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.003
   },
   {
    "crop_id": 5,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.005
   },
   {
    "crop_id": 5,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0.02
   },
   {
    "crop_id": 5,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 5,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 5,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.65
   },
   {
    "crop_id": 5,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.013
   },
   {
    "crop_id": 5,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0.02
   },
   {
    "crop_id": 5,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.25
   },
   {
    "crop_id": 5,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 5,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 5,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 5,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 5,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 11,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 11,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.13
   },
   {
    "crop_id": 11,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 11,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 11,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.33
   },
   {
    "crop_id": 11,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.03
   },
   {
    "crop_id": 11,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.03
   },
   {
    "crop_id": 11,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 11,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 11,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.54
   },
   {
    "crop_id": 11,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.04
   },
   {
    "crop_id": 11,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.96
   },
   {
    "crop_id": 11,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 11,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 11,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 12,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 12,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 12,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 12,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.37
   },
   {
    "crop_id": 12,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.03
   },
   {
    "crop_id": 12,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.03
   },
   {
    "crop_id": 12,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 12,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 12,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.03
   },
   {
    "crop_id": 12,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.97
   },
   {
    "crop_id": 12,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 12,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 12,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 13,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 13,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 13,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 13,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.5,
    "value_": 0.37
   },
   {
    "crop_id": 13,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.5,
    "value_": 0
   },
   {
    "crop_id": 13,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0.5,
    "value_": 0
   },
   {
    "crop_id": 13,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.03
   },
   {
    "crop_id": 13,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.03
   },
   {
    "crop_id": 13,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 13,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 13,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.5,
    "value_": 0.03
   },
   {
    "crop_id": 13,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0.5,
    "value_": 0
   },
   {
    "crop_id": 13,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0,
    "_value": 0.13
   },
   {
    "crop_id": 13,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0,
    "value_": 0.97
   },
   {
    "crop_id": 13,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0,
    "value_": 1
   },
   {
    "crop_id": 13,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 13,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.02
   },
   {
    "crop_id": 27,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.03
   },
   {
    "crop_id": 27,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.06
   },
   {
    "crop_id": 27,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0.01
   },
   {
    "crop_id": 27,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0.45
   },
   {
    "crop_id": 27,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.4
   },
   {
    "crop_id": 27,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.4
   },
   {
    "crop_id": 27,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.3
   },
   {
    "crop_id": 27,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.15
   },
   {
    "crop_id": 27,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0.06
   },
   {
    "crop_id": 27,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.005
   },
   {
    "crop_id": 27,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 27,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.2
   },
   {
    "crop_id": 27,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 27,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.54
   },
   {
    "crop_id": 27,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.4
   },
   {
    "crop_id": 27,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.22
   },
   {
    "crop_id": 27,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0.08
   },
   {
    "crop_id": 27,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 27,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.01
   },
   {
    "crop_id": 27,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.22
   },
   {
    "crop_id": 27,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 27,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0.8
   },
   {
    "crop_id": 27,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 5,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 5,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 5,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.03
   },
   {
    "crop_id": 27,
    "organ_id": 5,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 5,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 27,
    "organ_id": 5,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 5,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.07
   },
   {
    "crop_id": 27,
    "organ_id": 5,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 5,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 27,
    "organ_id": 5,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 27,
    "organ_id": 5,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0.45
   },
   {
    "crop_id": 27,
    "organ_id": 5,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.65
   },
   {
    "crop_id": 7,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 7,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 7,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 7,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0.005
   },
   {
    "crop_id": 7,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.1
   },
   {
    "crop_id": 7,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.1
   },
   {
    "crop_id": 7,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.35
   },
   {
    "crop_id": 7,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 7,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 7,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 7,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0.001
   },
   {
    "crop_id": 7,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.003
   },
   {
    "crop_id": 7,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.005
   },
   {
    "crop_id": 7,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0.02
   },
   {
    "crop_id": 7,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 7,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 7,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.65
   },
   {
    "crop_id": 7,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.013
   },
   {
    "crop_id": 7,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0.02
   },
   {
    "crop_id": 7,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.25
   },
   {
    "crop_id": 7,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 7,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 7,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 7,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 7,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.65
   },
   {
    "crop_id": 6,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.1
   },
   {
    "crop_id": 6,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 6,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 6,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0.005
   },
   {
    "crop_id": 6,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0.1
   },
   {
    "crop_id": 6,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.1
   },
   {
    "crop_id": 6,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.1
   },
   {
    "crop_id": 6,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.35
   },
   {
    "crop_id": 6,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 6,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 6,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 6,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0.001
   },
   {
    "crop_id": 6,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.003
   },
   {
    "crop_id": 6,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.01
   },
   {
    "crop_id": 6,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0.03
   },
   {
    "crop_id": 6,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.7
   },
   {
    "crop_id": 6,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.75
   },
   {
    "crop_id": 6,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.85
   },
   {
    "crop_id": 6,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0.35
   },
   {
    "crop_id": 6,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.013
   },
   {
    "crop_id": 6,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0.02
   },
   {
    "crop_id": 6,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 6,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0.65
   },
   {
    "crop_id": 6,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 6,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 6,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 6,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 14,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 14,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 14,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 14,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.37
   },
   {
    "crop_id": 14,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.03
   },
   {
    "crop_id": 14,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.03
   },
   {
    "crop_id": 14,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 14,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 14,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.03
   },
   {
    "crop_id": 14,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.13
   },
   {
    "crop_id": 14,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.97
   },
   {
    "crop_id": 14,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 14,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 14,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 15,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 15,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 15,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 15,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 15,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.03
   },
   {
    "crop_id": 15,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.97
   },
   {
    "crop_id": 15,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.37
   },
   {
    "crop_id": 15,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 15,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.13
   },
   {
    "crop_id": 15,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.03
   },
   {
    "crop_id": 15,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 15,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.03
   },
   {
    "crop_id": 15,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 15,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 28,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 28,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.08
   },
   {
    "crop_id": 28,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 28,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.3
   },
   {
    "crop_id": 28,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.52
   },
   {
    "crop_id": 28,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 28,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 28,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 28,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 28,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 28,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.1
   },
   {
    "crop_id": 28,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.16
   },
   {
    "crop_id": 28,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 28,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 28,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.03
   },
   {
    "crop_id": 28,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 28,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 28,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 28,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 28,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 29,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 29,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.08
   },
   {
    "crop_id": 29,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 29,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.3
   },
   {
    "crop_id": 29,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.52
   },
   {
    "crop_id": 29,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 29,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 29,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.1
   },
   {
    "crop_id": 29,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.16
   },
   {
    "crop_id": 29,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 29,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 29,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.03
   },
   {
    "crop_id": 29,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 29,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 29,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 29,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 29,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 30,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.34
   },
   {
    "crop_id": 30,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.08
   },
   {
    "crop_id": 30,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 30,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.3
   },
   {
    "crop_id": 30,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 30,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.4
   },
   {
    "crop_id": 30,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.41
   },
   {
    "crop_id": 30,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.01
   },
   {
    "crop_id": 30,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.3
   },
   {
    "crop_id": 30,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 1
   },
   {
    "crop_id": 30,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.1
   },
   {
    "crop_id": 30,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.16
   },
   {
    "crop_id": 30,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.52
   },
   {
    "crop_id": 30,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.52
   },
   {
    "crop_id": 30,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 30,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 30,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.02
   },
   {
    "crop_id": 30,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 30,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 30,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 30,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 31,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 31,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.08
   },
   {
    "crop_id": 31,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 31,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.3
   },
   {
    "crop_id": 31,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.52
   },
   {
    "crop_id": 31,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 31,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 31,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 31,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 31,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 31,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.1
   },
   {
    "crop_id": 31,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.16
   },
   {
    "crop_id": 31,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 31,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 31,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.03
   },
   {
    "crop_id": 31,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 31,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 31,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 31,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 31,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 32,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 32,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.08
   },
   {
    "crop_id": 32,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 32,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.3
   },
   {
    "crop_id": 32,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.52
   },
   {
    "crop_id": 32,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 32,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 32,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 32,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 32,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 32,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.1
   },
   {
    "crop_id": 32,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.16
   },
   {
    "crop_id": 32,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 32,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 32,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.03
   },
   {
    "crop_id": 32,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 32,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 32,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 32,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 32,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 33,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 33,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.08
   },
   {
    "crop_id": 33,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 33,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.3
   },
   {
    "crop_id": 33,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.52
   },
   {
    "crop_id": 33,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 33,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 33,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 33,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 33,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 33,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.1
   },
   {
    "crop_id": 33,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.16
   },
   {
    "crop_id": 33,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 33,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 33,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.03
   },
   {
    "crop_id": 33,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 33,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 33,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 33,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 33,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 34,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 34,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.08
   },
   {
    "crop_id": 34,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 34,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.3
   },
   {
    "crop_id": 34,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.52
   },
   {
    "crop_id": 34,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 34,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 34,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 34,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 34,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 34,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.1
   },
   {
    "crop_id": 34,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.16
   },
   {
    "crop_id": 34,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 34,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 34,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.03
   },
   {
    "crop_id": 34,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 34,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 34,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 34,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 34,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 35,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 35,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.08
   },
   {
    "crop_id": 35,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 35,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.3
   },
   {
    "crop_id": 35,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.52
   },
   {
    "crop_id": 35,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 35,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 35,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 35,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 35,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 35,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.1
   },
   {
    "crop_id": 35,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.16
   },
   {
    "crop_id": 35,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 35,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 35,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.03
   },
   {
    "crop_id": 35,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 35,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 35,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 35,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 35,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 36,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 36,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.08
   },
   {
    "crop_id": 36,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 36,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.3
   },
   {
    "crop_id": 36,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.52
   },
   {
    "crop_id": 36,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 36,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 36,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 36,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 36,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 36,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.1
   },
   {
    "crop_id": 36,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.16
   },
   {
    "crop_id": 36,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 36,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 36,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.03
   },
   {
    "crop_id": 36,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 36,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 36,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 36,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 36,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 37,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 37,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.08
   },
   {
    "crop_id": 37,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 37,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.3
   },
   {
    "crop_id": 37,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.52
   },
   {
    "crop_id": 37,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 37,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 37,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 37,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 37,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 37,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.1
   },
   {
    "crop_id": 37,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.16
   },
   {
    "crop_id": 37,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 37,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 37,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.03
   },
   {
    "crop_id": 37,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 37,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 37,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 37,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 37,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 38,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 38,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.08
   },
   {
    "crop_id": 38,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 38,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.3
   },
   {
    "crop_id": 38,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.52
   },
   {
    "crop_id": 38,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 38,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 38,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 38,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 38,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 38,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.1
   },
   {
    "crop_id": 38,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.16
   },
   {
    "crop_id": 38,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 38,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 38,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.03
   },
   {
    "crop_id": 38,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 38,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 38,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 38,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 38,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 39,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 39,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.08
   },
   {
    "crop_id": 39,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 39,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.3
   },
   {
    "crop_id": 39,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.52
   },
   {
    "crop_id": 39,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 39,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 39,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 39,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 39,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 39,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.1
   },
   {
    "crop_id": 39,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.16
   },
   {
    "crop_id": 39,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 39,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 39,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.03
   },
   {
    "crop_id": 39,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 39,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 39,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 39,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 39,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 40,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 40,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.08
   },
   {
    "crop_id": 40,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 40,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.3
   },
   {
    "crop_id": 40,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.52
   },
   {
    "crop_id": 40,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 40,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 40,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 40,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 40,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 40,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.1
   },
   {
    "crop_id": 40,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.16
   },
   {
    "crop_id": 40,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 40,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 40,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.03
   },
   {
    "crop_id": 40,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 40,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 40,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 40,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 40,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 41,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 41,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.08
   },
   {
    "crop_id": 41,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 41,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.3
   },
   {
    "crop_id": 41,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.52
   },
   {
    "crop_id": 41,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 41,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 41,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 41,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 41,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 41,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.1
   },
   {
    "crop_id": 41,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.16
   },
   {
    "crop_id": 41,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 41,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 41,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.03
   },
   {
    "crop_id": 41,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 41,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 41,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 41,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 41,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 42,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 42,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.08
   },
   {
    "crop_id": 42,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 42,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.3
   },
   {
    "crop_id": 42,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.52
   },
   {
    "crop_id": 42,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 42,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 42,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 42,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 42,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 42,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.1
   },
   {
    "crop_id": 42,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.16
   },
   {
    "crop_id": 42,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 42,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 42,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.03
   },
   {
    "crop_id": 42,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 42,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 42,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 42,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 42,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 18,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.65
   },
   {
    "crop_id": 18,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 18,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 18,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 18,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 18,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 18,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 18,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0.005
   },
   {
    "crop_id": 18,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 18,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.1
   },
   {
    "crop_id": 18,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 18,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.1
   },
   {
    "crop_id": 18,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 18,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 18,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.35
   },
   {
    "crop_id": 18,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 18,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 18,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 18,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 18,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 18,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.3
   },
   {
    "crop_id": 18,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0.001
   },
   {
    "crop_id": 18,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0.4
   },
   {
    "crop_id": 18,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.003
   },
   {
    "crop_id": 18,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 18,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.005
   },
   {
    "crop_id": 18,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 18,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0.02
   },
   {
    "crop_id": 18,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 18,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 18,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 18,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 18,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 18,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 18,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 18,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 18,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 18,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 18,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0.4
   },
   {
    "crop_id": 18,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.013
   },
   {
    "crop_id": 18,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 18,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0.02
   },
   {
    "crop_id": 18,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 18,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 18,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 18,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 18,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 18,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 18,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 18,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 18,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0.1
   },
   {
    "crop_id": 18,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 18,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0.1
   },
   {
    "crop_id": 18,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 18,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 18,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 19,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 19,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.13
   },
   {
    "crop_id": 19,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 19,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.3
   },
   {
    "crop_id": 19,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.3
   },
   {
    "crop_id": 19,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.04
   },
   {
    "crop_id": 19,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.04
   },
   {
    "crop_id": 19,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 19,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.57
   },
   {
    "crop_id": 19,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.06
   },
   {
    "crop_id": 19,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.94
   },
   {
    "crop_id": 19,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 19,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 19,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 19,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 16,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.7
   },
   {
    "crop_id": 16,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 16,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 16,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 16,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 16,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 16,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 16,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 16,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 16,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 16,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 16,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 16,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.3
   },
   {
    "crop_id": 16,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 16,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 16,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 16,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.4
   },
   {
    "crop_id": 16,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 16,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 16,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 16,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 16,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.03
   },
   {
    "crop_id": 16,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 16,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.03
   },
   {
    "crop_id": 16,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 16,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 16,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.3
   },
   {
    "crop_id": 16,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 16,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 16,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 16,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 16,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 16,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 16,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 16,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 16,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 17,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 17,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.13
   },
   {
    "crop_id": 17,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 17,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 17,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.33
   },
   {
    "crop_id": 17,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 17,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.54
   },
   {
    "crop_id": 17,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.04
   },
   {
    "crop_id": 17,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.96
   },
   {
    "crop_id": 17,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 17,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.53
   },
   {
    "crop_id": 20,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 20,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.13
   },
   {
    "crop_id": 20,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.47
   },
   {
    "crop_id": 20,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 20,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.37
   },
   {
    "crop_id": 20,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.03
   },
   {
    "crop_id": 20,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.03
   },
   {
    "crop_id": 20,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 20,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 20,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.25
   },
   {
    "crop_id": 20,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.75
   },
   {
    "crop_id": 20,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 20,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 20,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 21,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.65
   },
   {
    "crop_id": 21,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 21,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 21,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 21,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 21,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 21,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 21,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0.005
   },
   {
    "crop_id": 21,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 21,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.1
   },
   {
    "crop_id": 21,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 21,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.1
   },
   {
    "crop_id": 21,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 21,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 21,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.35
   },
   {
    "crop_id": 21,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 21,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 21,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 21,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.4
   },
   {
    "crop_id": 21,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 21,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.35
   },
   {
    "crop_id": 21,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0.001
   },
   {
    "crop_id": 21,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0.25
   },
   {
    "crop_id": 21,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.003
   },
   {
    "crop_id": 21,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0.4
   },
   {
    "crop_id": 21,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.005
   },
   {
    "crop_id": 21,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0.4
   },
   {
    "crop_id": 21,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0.02
   },
   {
    "crop_id": 21,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 21,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 21,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 21,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 21,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.4
   },
   {
    "crop_id": 21,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 21,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 21,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 21,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0.7
   },
   {
    "crop_id": 21,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 21,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 21,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.013
   },
   {
    "crop_id": 21,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 21,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0.02
   },
   {
    "crop_id": 22,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.53
   },
   {
    "crop_id": 22,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 22,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.13
   },
   {
    "crop_id": 22,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.47
   },
   {
    "crop_id": 22,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 22,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.37
   },
   {
    "crop_id": 22,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.03
   },
   {
    "crop_id": 22,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.03
   },
   {
    "crop_id": 22,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 22,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 22,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.25
   },
   {
    "crop_id": 22,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.75
   },
   {
    "crop_id": 22,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 22,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 22,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 23,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 23,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.13
   },
   {
    "crop_id": 23,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 23,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.3
   },
   {
    "crop_id": 23,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.3
   },
   {
    "crop_id": 23,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.04
   },
   {
    "crop_id": 23,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.04
   },
   {
    "crop_id": 23,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 23,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.57
   },
   {
    "crop_id": 23,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.06
   },
   {
    "crop_id": 23,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.94
   },
   {
    "crop_id": 23,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 23,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 23,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 23,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 24,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.2
   },
   {
    "crop_id": 24,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.13
   },
   {
    "crop_id": 24,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 24,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.5
   },
   {
    "crop_id": 24,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.33
   },
   {
    "crop_id": 24,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.3
   },
   {
    "crop_id": 24,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.54
   },
   {
    "crop_id": 24,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 24,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 24,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 24,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 43,
    "organ_id": 1,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 43,
    "organ_id": 1,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.08
   },
   {
    "crop_id": 43,
    "organ_id": 1,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.05
   },
   {
    "crop_id": 43,
    "organ_id": 1,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 1,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 1,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 1,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.3
   },
   {
    "crop_id": 43,
    "organ_id": 2,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.52
   },
   {
    "crop_id": 43,
    "organ_id": 2,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 43,
    "organ_id": 2,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.32
   },
   {
    "crop_id": 43,
    "organ_id": 2,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 2,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 43,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 2,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 43,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 2,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0.05
   },
   {
    "crop_id": 43,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0.1
   },
   {
    "crop_id": 43,
    "organ_id": 3,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0.16
   },
   {
    "crop_id": 43,
    "organ_id": 3,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 43,
    "organ_id": 3,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.6
   },
   {
    "crop_id": 43,
    "organ_id": 3,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 3,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 3,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 3,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 4,
    "dev_stage_id": 1,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 4,
    "dev_stage_id": 2,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 1,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 4,
    "dev_stage_id": 3,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 1,
    "value": 0.03
   },
   {
    "crop_id": 43,
    "organ_id": 4,
    "dev_stage_id": 4,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 43,
    "organ_id": 4,
    "dev_stage_id": 5,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 43,
    "organ_id": 4,
    "dev_stage_id": 6,
    "ods_dependent_param_id": 2,
    "value": 0
   },
   {
    "crop_id": 43,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 1,
    "value": 1
   },
   {
    "crop_id": 43,
    "organ_id": 4,
    "dev_stage_id": 7,
    "ods_dependent_param_id": 2,
    "value": 0
   }
  ]
 },
 "crop": {
  "columns": [
   "id",
   "name",
   "gen_type",
   "spec",
   "max_assimilation_rate",
   "carboxylation_pathway",
   "minimum_temperature_for_assimilation",
   "crop_specific_max_rooting_depth",
   "min_n_content",
   "n_content_pn",
   "n_content_b0",
   "n_content_above_ground_biomass",
   "n_content_root",
   "initial_kc_factor",
   "development_acceleration_by_nitrogen_stress",
   "fixing_n",
   "luxury_n_coeff",
   "max_crop_height",
   "residue_n_ratio",
   "sampling_depth",
   "target_n_sampling_depth",
   "target_n30",
   "default_radiation_use_efficiency",
   "crop_height_P1",
   "crop_height_P2",
   "stage_at_max_height",
   "max_stem_diameter",
   "stage_at_max_diameter",
   "heat_sum_irrigation_start",
   "heat_sum_irrigation_end",
   "max_N_uptake_p",
   "root_distribution_p",
   "plant_density",
   "root_growth_lag",
   "min_temperature_root_growth",
   "initial_rooting_depth",
   "root_penetration_rate",
   "root_form_factor",
   "specific_root_length",
   "stage_after_cut",
   "crit_temperature_heat_stress",
   "lim_temperature_heat_stress",
   "begin_sensitive_phase_heat_stress",
   "end_sensitive_phase_heat_stress",
   "drought_impact_on_fertility_factor",
   "cutting_delay_days",
   "field_condition_modifier"
  ],
  "rows": [
   {
    "id": 1,
    "name": "winter wheat",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 52,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 4,
    "crop_specific_max_rooting_depth": 1.3,
    "min_n_content": 0.005,
    "n_content_pn": 1.6,
    "n_content_b0": 2,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 1,
    "fixing_n": 0,
    "luxury_n_coeff": 1.3,
    "max_crop_height": 0.83,
    "residue_n_ratio": 0.5,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 230,
    "target_n30": 120,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 6,
    "crop_height_P2": 0.5,
    "stage_at_max_height": 3,
    "max_stem_diameter": 0.005,
    "stage_at_max_diameter": 2,
    "heat_sum_irrigation_start": 461,
    "heat_sum_irrigation_end": 1676,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 220,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 0,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0011,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 620,
    "end_sensitive_phase_heat_stress": 740,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": 0,
    "field_condition_modifier": 1
   },
   {
    "id": 2,
    "name": "winter barley",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 55,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 4,
    "crop_specific_max_rooting_depth": 1.3,
    "min_n_content": 0.005,
    "n_content_pn": 1.6,
    "n_content_b0": 2,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 1,
    "fixing_n": 0,
    "luxury_n_coeff": 1.3,
    "max_crop_height": 0.87,
    "residue_n_ratio": 0.3,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 200,
    "target_n30": 120,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 12,
    "crop_height_P2": 0.6,
    "stage_at_max_height": 3,
    "max_stem_diameter": 0.004,
    "stage_at_max_diameter": 2,
    "heat_sum_irrigation_start": 560,
    "heat_sum_irrigation_end": 1032,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 220,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 0,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0011,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 420,
    "end_sensitive_phase_heat_stress": 540,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": 0,
    "field_condition_modifier": 1
   },
   {
    "id": 3,
    "name": "winter rye",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 38,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 3,
    "crop_specific_max_rooting_depth": 1.4,
    "min_n_content": 0.005,
    "n_content_pn": 1.6,
    "n_content_b0": 2,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 1,
    "fixing_n": 0,
    "luxury_n_coeff": 1.3,
    "max_crop_height": 1.5,
    "residue_n_ratio": 0.3,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 200,
    "target_n30": 120,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 12,
    "crop_height_P2": 0.55,
    "stage_at_max_height": 3,
    "max_stem_diameter": 0.004,
    "stage_at_max_diameter": 2,
    "heat_sum_irrigation_start": 406,
    "heat_sum_irrigation_end": 934,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 220,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 0,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0012,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 420,
    "end_sensitive_phase_heat_stress": 540,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": 0,
    "field_condition_modifier": 1
   },
   {
    "id": 4,
    "name": "spring barley",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 30,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 4,
    "crop_specific_max_rooting_depth": 1.3,
    "min_n_content": 0.005,
    "n_content_pn": 1.6,
    "n_content_b0": 2,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 1,
    "fixing_n": 0,
    "luxury_n_coeff": 1.3,
    "max_crop_height": 0.87,
    "residue_n_ratio": 0.3,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 200,
    "target_n30": 120,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 12,
    "crop_height_P2": 0.6,
    "stage_at_max_height": 3,
    "max_stem_diameter": 0.004,
    "stage_at_max_diameter": 2,
    "heat_sum_irrigation_start": 560,
    "heat_sum_irrigation_end": 1032,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 220,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 0,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0011,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 550,
    "end_sensitive_phase_heat_stress": 670,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": 0,
    "field_condition_modifier": 1
   },
   {
    "id": 10,
    "name": "sugar beet",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 100,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 7,
    "crop_specific_max_rooting_depth": 1.6,
    "min_n_content": 0.004,
    "n_content_pn": 1.11,
    "n_content_b0": 1.38,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 0,
    "luxury_n_coeff": 1.65,
    "max_crop_height": 0.5,
    "residue_n_ratio": 2,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 200,
    "target_n30": 200,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0.35,
    "stage_at_max_height": 3,
    "max_stem_diameter": 0,
    "stage_at_max_diameter": 3,
    "heat_sum_irrigation_start": 600,
    "heat_sum_irrigation_end": 1691,
    "max_N_uptake_p": 5.645,
    "root_distribution_p": 0.0012,
    "plant_density": 8,
    "root_growth_lag": -60,
    "min_temperature_root_growth": 0,
    "initial_rooting_depth": 0.06,
    "root_penetration_rate": 0.0011,
    "root_form_factor": 2,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 0,
    "end_sensitive_phase_heat_stress": 0,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": 0,
    "field_condition_modifier": 1
   },
   {
    "id": 8,
    "name": "moderately early potato",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 200,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 5,
    "crop_specific_max_rooting_depth": 1.1,
    "min_n_content": 0.006,
    "n_content_pn": 1.35,
    "n_content_b0": 3,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 0,
    "luxury_n_coeff": 1.5,
    "max_crop_height": 0.5,
    "residue_n_ratio": 1.9,
    "sampling_depth": 0.6,
    "target_n_sampling_depth": 160,
    "target_n30": 40,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0.35,
    "stage_at_max_height": 3,
    "max_stem_diameter": 0.01,
    "stage_at_max_diameter": 3,
    "heat_sum_irrigation_start": 113,
    "heat_sum_irrigation_end": 900,
    "max_N_uptake_p": 5.645,
    "root_distribution_p": 0.0035,
    "plant_density": 6,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 0,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0008,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 0,
    "end_sensitive_phase_heat_stress": 0,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": 0,
    "field_condition_modifier": 1
   },
   {
    "id": 9,
    "name": "winter rape",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 50,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 4,
    "crop_specific_max_rooting_depth": 1.5,
    "min_n_content": 0.005,
    "n_content_pn": 1.35,
    "n_content_b0": 3.5,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 0,
    "luxury_n_coeff": 1.1,
    "max_crop_height": 0.8,
    "residue_n_ratio": 0.3,
    "sampling_depth": 0.6,
    "target_n_sampling_depth": 340,
    "target_n30": 120,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0.35,
    "stage_at_max_height": 3,
    "max_stem_diameter": 0.006,
    "stage_at_max_diameter": 2,
    "heat_sum_irrigation_start": 450,
    "heat_sum_irrigation_end": 1000,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 100,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 0,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.002,
    "root_form_factor": 1.5,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 0,
    "end_sensitive_phase_heat_stress": 0,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": 0,
    "field_condition_modifier": 1
   },
   {
    "id": 5,
    "name": "grain maize",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 96,
    "carboxylation_pathway": 2,
    "minimum_temperature_for_assimilation": 6,
    "crop_specific_max_rooting_depth": 1.4,
    "min_n_content": 0.004,
    "n_content_pn": 1,
    "n_content_b0": 5,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 0,
    "luxury_n_coeff": 1,
    "max_crop_height": 2,
    "residue_n_ratio": 0.5,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 200,
    "target_n30": 60,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0.35,
    "stage_at_max_height": 4,
    "max_stem_diameter": 0.025,
    "stage_at_max_diameter": 4,
    "heat_sum_irrigation_start": 113,
    "heat_sum_irrigation_end": 993,
    "max_N_uptake_p": 7.4,
    "root_distribution_p": 0.0035,
    "plant_density": 10,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 9,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0014,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 0,
    "end_sensitive_phase_heat_stress": 0,
    "drought_impact_on_fertility_factor": 0.5,
    "cutting_delay_days": 0,
    "field_condition_modifier": 1
   },
   {
    "id": 11,
    "name": "mustard",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 65,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 4,
    "crop_specific_max_rooting_depth": 1.5,
    "min_n_content": 0.005,
    "n_content_pn": 2.5,
    "n_content_b0": 2.5,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 0,
    "luxury_n_coeff": 1,
    "max_crop_height": 1,
    "residue_n_ratio": 1,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 50,
    "target_n30": 20,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0.6,
    "stage_at_max_height": 3,
    "max_stem_diameter": 0.006,
    "stage_at_max_diameter": 2,
    "heat_sum_irrigation_start": 450,
    "heat_sum_irrigation_end": 1000,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 600,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 0,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0008,
    "root_form_factor": 2,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 0,
    "end_sensitive_phase_heat_stress": 0,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": 0,
    "field_condition_modifier": 1
   },
   {
    "id": 12,
    "name": "phacelia",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 45,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 7,
    "crop_specific_max_rooting_depth": 1.2,
    "min_n_content": 0.005,
    "n_content_pn": 2.5,
    "n_content_b0": 2.5,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 0,
    "luxury_n_coeff": 1.5,
    "max_crop_height": 0.5,
    "residue_n_ratio": 1,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 50,
    "target_n30": 20,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0.35,
    "stage_at_max_height": 3,
    "max_stem_diameter": 0.006,
    "stage_at_max_diameter": 2,
    "heat_sum_irrigation_start": 450,
    "heat_sum_irrigation_end": 1000,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 600,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 0,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.002,
    "root_form_factor": 2,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 0,
    "end_sensitive_phase_heat_stress": 0,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": 0,
    "field_condition_modifier": 1
   },
   {
    "id": 13,
    "name": "clover grass ley",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 45,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 8,
    "crop_specific_max_rooting_depth": 0.15,
    "min_n_content": 0.005,
    "n_content_pn": 2.6,
    "n_content_b0": 0,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 1,
    "luxury_n_coeff": 1,
    "max_crop_height": 0.3,
    "residue_n_ratio": 1,
    "sampling_depth": 0.6,
    "target_n_sampling_depth": 50,
    "target_n30": 20,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0.35,
    "stage_at_max_height": 3,
    "max_stem_diameter": 0.003,
    "stage_at_max_diameter": 2,
    "heat_sum_irrigation_start": 450,
    "heat_sum_irrigation_end": 1000,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 600,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 0,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0008,
    "root_form_factor": 5,
    "specific_root_length": 300,
    "stage_after_cut": 2,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 0,
    "end_sensitive_phase_heat_stress": 0,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": 0,
    "field_condition_modifier": 1
   },
   {
    "id": 27,
    "name": "grapevine",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 16,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 5,
    "crop_specific_max_rooting_depth": 2,
    "min_n_content": 0.005,
    "n_content_pn": 1.55,
    "n_content_b0": 1.4,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 0,
    "luxury_n_coeff": 1,
    "max_crop_height": 2,
    "residue_n_ratio": 0.8,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 80,
    "target_n30": 0,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0,
    "stage_at_max_height": 1,
    "max_stem_diameter": 0.1,
    "stage_at_max_diameter": 1,
    "heat_sum_irrigation_start": 100,
    "heat_sum_irrigation_end": 2300,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.01,
    "plant_density": 0.38,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 0,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.002,
    "root_form_factor": 1,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 0,
    "end_sensitive_phase_heat_stress": 0,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": 0,
    "field_condition_modifier": 1
   },
   {
    "id": 7,
    "name": "silage maize",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 96,
    "carboxylation_pathway": 2,
    "minimum_temperature_for_assimilation": 6,
    "crop_specific_max_rooting_depth": 1.4,
    "min_n_content": 0.004,
    "n_content_pn": 1,
    "n_content_b0": 5,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 0,
    "luxury_n_coeff": 1,
    "max_crop_height": 2,
    "residue_n_ratio": 0.5,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 200,
    "target_n30": 60,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0.35,
    "stage_at_max_height": 4,
    "max_stem_diameter": 0.025,
    "stage_at_max_diameter": 4,
    "heat_sum_irrigation_start": 113,
    "heat_sum_irrigation_end": 993,
    "max_N_uptake_p": 7.4,
    "root_distribution_p": 0.0035,
    "plant_density": 10,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 9,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0014,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 0,
    "end_sensitive_phase_heat_stress": 0,
    "drought_impact_on_fertility_factor": 0.5,
    "cutting_delay_days": 0,
    "field_condition_modifier": 1
   },
   {
    "id": 6,
    "name": "grain maize Pioneer 30K75",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 150,
    "carboxylation_pathway": 2,
    "minimum_temperature_for_assimilation": 6,
    "crop_specific_max_rooting_depth": 1.2,
    "min_n_content": 0.004,
    "n_content_pn": 1,
    "n_content_b0": 5,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 0,
    "luxury_n_coeff": 1,
    "max_crop_height": 2,
    "residue_n_ratio": 0.5,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 200,
    "target_n30": 60,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0.35,
    "stage_at_max_height": 4,
    "max_stem_diameter": 0.025,
    "stage_at_max_diameter": 4,
    "heat_sum_irrigation_start": 113,
    "heat_sum_irrigation_end": 1700,
    "max_N_uptake_p": 7.4,
    "root_distribution_p": 0.0035,
    "plant_density": 10,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 9,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0014,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 1200,
    "end_sensitive_phase_heat_stress": 1360,
    "drought_impact_on_fertility_factor": 0.5,
    "cutting_delay_days": null,
    "field_condition_modifier": 1
   },
   {
    "id": 14,
    "name": "alfalfa",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 13,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 8,
    "crop_specific_max_rooting_depth": 0.3,
    "min_n_content": 1.656,
    "n_content_pn": 0.224,
    "n_content_b0": 0,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 1,
    "luxury_n_coeff": 1,
    "max_crop_height": 0.8,
    "residue_n_ratio": 1,
    "sampling_depth": 0.6,
    "target_n_sampling_depth": 50,
    "target_n30": 20,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0,
    "stage_at_max_height": 3,
    "max_stem_diameter": 0.003,
    "stage_at_max_diameter": 2,
    "heat_sum_irrigation_start": 450,
    "heat_sum_irrigation_end": 1000,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 600,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 0,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0008,
    "root_form_factor": 5,
    "specific_root_length": 300,
    "stage_after_cut": 2,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 0,
    "end_sensitive_phase_heat_stress": 0,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": 10,
    "field_condition_modifier": 1
   },
   {
    "id": 15,
    "name": "alfalfa clover grass ley mix",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 13,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 8,
    "crop_specific_max_rooting_depth": 0.3,
    "min_n_content": 0.005,
    "n_content_pn": 2.525,
    "n_content_b0": 0,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 1,
    "luxury_n_coeff": 1,
    "max_crop_height": 0.67,
    "residue_n_ratio": 1,
    "sampling_depth": 0.6,
    "target_n_sampling_depth": 50,
    "target_n30": 20,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0.35,
    "stage_at_max_height": 3,
    "max_stem_diameter": 0.003,
    "stage_at_max_diameter": 2,
    "heat_sum_irrigation_start": 450,
    "heat_sum_irrigation_end": 1000,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 600,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 0,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0008,
    "root_form_factor": 5,
    "specific_root_length": 300,
    "stage_after_cut": 2,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 0,
    "end_sensitive_phase_heat_stress": 0,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": 10,
    "field_condition_modifier": 1
   },
   {
    "id": 28,
    "name": "soy bean 000",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 15,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 5,
    "crop_specific_max_rooting_depth": 1.6,
    "min_n_content": 0.005,
    "n_content_pn": 1,
    "n_content_b0": 5,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 1,
    "luxury_n_coeff": 1,
    "max_crop_height": 1.2,
    "residue_n_ratio": 0.8,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 50,
    "target_n30": 0,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0.35,
    "stage_at_max_height": 4,
    "max_stem_diameter": 0.006,
    "stage_at_max_diameter": 3,
    "heat_sum_irrigation_start": 113,
    "heat_sum_irrigation_end": 900,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 30,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 6,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0012,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 420,
    "end_sensitive_phase_heat_stress": 540,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": null,
    "field_condition_modifier": 1
   },
   {
    "id": 29,
    "name": "soy bean 00",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 15,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 5,
    "crop_specific_max_rooting_depth": 1.6,
    "min_n_content": 0.005,
    "n_content_pn": 1,
    "n_content_b0": 5,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 1,
    "luxury_n_coeff": 1,
    "max_crop_height": 1,
    "residue_n_ratio": 0.8,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 50,
    "target_n30": 0,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0.35,
    "stage_at_max_height": 4,
    "max_stem_diameter": 0.006,
    "stage_at_max_diameter": 3,
    "heat_sum_irrigation_start": 113,
    "heat_sum_irrigation_end": 900,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 30,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 6,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0012,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 420,
    "end_sensitive_phase_heat_stress": 540,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": null,
    "field_condition_modifier": 1
   },
   {
    "id": 30,
    "name": "soy bean 0",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 15,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 5,
    "crop_specific_max_rooting_depth": 1.6,
    "min_n_content": 0.005,
    "n_content_pn": 1,
    "n_content_b0": 5,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 1,
    "luxury_n_coeff": 1,
    "max_crop_height": 1,
    "residue_n_ratio": 0.8,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 50,
    "target_n30": 0,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0.35,
    "stage_at_max_height": 4,
    "max_stem_diameter": 0.006,
    "stage_at_max_diameter": 3,
    "heat_sum_irrigation_start": 113,
    "heat_sum_irrigation_end": 900,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 30,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 6,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0025,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 420,
    "end_sensitive_phase_heat_stress": 540,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": null,
    "field_condition_modifier": 1
   },
   {
    "id": 31,
    "name": "soy bean I",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 15,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 5,
    "crop_specific_max_rooting_depth": 1.6,
    "min_n_content": 0.005,
    "n_content_pn": 1,
    "n_content_b0": 5,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 1,
    "luxury_n_coeff": 1,
    "max_crop_height": 1,
    "residue_n_ratio": 0.8,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 50,
    "target_n30": 0,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0.35,
    "stage_at_max_height": 4,
    "max_stem_diameter": 0.006,
    "stage_at_max_diameter": 3,
    "heat_sum_irrigation_start": 113,
    "heat_sum_irrigation_end": 900,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 30,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 6,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0025,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 420,
    "end_sensitive_phase_heat_stress": 540,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": null,
    "field_condition_modifier": 1
   },
   {
    "id": 32,
    "name": "soy bean II",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 15,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 5,
    "crop_specific_max_rooting_depth": 1.6,
    "min_n_content": 0.005,
    "n_content_pn": 1,
    "n_content_b0": 5,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 1,
    "luxury_n_coeff": 1,
    "max_crop_height": 1,
    "residue_n_ratio": 0.8,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 50,
    "target_n30": 0,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0.35,
    "stage_at_max_height": 4,
    "max_stem_diameter": 0.006,
    "stage_at_max_diameter": 3,
    "heat_sum_irrigation_start": 113,
    "heat_sum_irrigation_end": 900,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 30,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 6,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0025,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 420,
    "end_sensitive_phase_heat_stress": 540,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": null,
    "field_condition_modifier": 1
   },
   {
    "id": 33,
    "name": "soy bean III",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 15,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 5,
    "crop_specific_max_rooting_depth": 1.6,
    "min_n_content": 0.005,
    "n_content_pn": 1,
    "n_content_b0": 5,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 1,
    "luxury_n_coeff": 1,
    "max_crop_height": 1,
    "residue_n_ratio": 0.8,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 50,
    "target_n30": 0,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0.35,
    "stage_at_max_height": 4,
    "max_stem_diameter": 0.006,
    "stage_at_max_diameter": 3,
    "heat_sum_irrigation_start": 113,
    "heat_sum_irrigation_end": 900,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 30,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 6,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0025,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 420,
    "end_sensitive_phase_heat_stress": 540,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": null,
    "field_condition_modifier": 1
   },
   {
    "id": 34,
    "name": "soy bean IV",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 15,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 5,
    "crop_specific_max_rooting_depth": 1.6,
    "min_n_content": 0.005,
    "n_content_pn": 1,
    "n_content_b0": 5,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 1,
    "luxury_n_coeff": 1,
    "max_crop_height": 1,
    "residue_n_ratio": 0.8,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 50,
    "target_n30": 0,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0.35,
    "stage_at_max_height": 4,
    "max_stem_diameter": 0.006,
    "stage_at_max_diameter": 3,
    "heat_sum_irrigation_start": 113,
    "heat_sum_irrigation_end": 900,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 30,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 6,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0025,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 420,
    "end_sensitive_phase_heat_stress": 540,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": null,
    "field_condition_modifier": 1
   },
   {
    "id": 35,
    "name": "soy bean V",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 15,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 5,
    "crop_specific_max_rooting_depth": 1.6,
    "min_n_content": 0.005,
    "n_content_pn": 1,
    "n_content_b0": 5,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 1,
    "luxury_n_coeff": 1,
    "max_crop_height": 1,
    "residue_n_ratio": 0.8,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 50,
    "target_n30": 0,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0.35,
    "stage_at_max_height": 4,
    "max_stem_diameter": 0.006,
    "stage_at_max_diameter": 3,
    "heat_sum_irrigation_start": 113,
    "heat_sum_irrigation_end": 900,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 30,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 6,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0025,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 420,
    "end_sensitive_phase_heat_stress": 540,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": null,
    "field_condition_modifier": 1
   },
   {
    "id": 36,
    "name": "soy bean VI",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 15,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 5,
    "crop_specific_max_rooting_depth": 1.6,
    "min_n_content": 0.005,
    "n_content_pn": 1,
    "n_content_b0": 5,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 1,
    "luxury_n_coeff": 1,
    "max_crop_height": 1,
    "residue_n_ratio": 0.8,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 50,
    "target_n30": 0,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0.35,
    "stage_at_max_height": 4,
    "max_stem_diameter": 0.006,
    "stage_at_max_diameter": 3,
    "heat_sum_irrigation_start": 113,
    "heat_sum_irrigation_end": 900,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 30,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 6,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0025,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 420,
    "end_sensitive_phase_heat_stress": 540,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": null,
    "field_condition_modifier": 1
   },
   {
    "id": 37,
    "name": "soy bean VII",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 30,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 5,
    "crop_specific_max_rooting_depth": 1.4,
    "min_n_content": 0.005,
    "n_content_pn": 1,
    "n_content_b0": 5,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 1,
    "luxury_n_coeff": 1,
    "max_crop_height": 1,
    "residue_n_ratio": 0.8,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 50,
    "target_n30": 0,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0.35,
    "stage_at_max_height": 4,
    "max_stem_diameter": 0.006,
    "stage_at_max_diameter": 3,
    "heat_sum_irrigation_start": 113,
    "heat_sum_irrigation_end": 900,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 30,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 6,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0015,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 420,
    "end_sensitive_phase_heat_stress": 540,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": null,
    "field_condition_modifier": 1
   },
   {
    "id": 38,
    "name": "soy bean VIII",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 15,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 5,
    "crop_specific_max_rooting_depth": 1.6,
    "min_n_content": 0.005,
    "n_content_pn": 1,
    "n_content_b0": 5,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 1,
    "luxury_n_coeff": 1,
    "max_crop_height": 1,
    "residue_n_ratio": 0.8,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 50,
    "target_n30": 0,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0.35,
    "stage_at_max_height": 4,
    "max_stem_diameter": 0.006,
    "stage_at_max_diameter": 3,
    "heat_sum_irrigation_start": 113,
    "heat_sum_irrigation_end": 900,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 30,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 6,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0025,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 420,
    "end_sensitive_phase_heat_stress": 540,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": null,
    "field_condition_modifier": 1
   },
   {
    "id": 39,
    "name": "soy bean IX",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 15,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 5,
    "crop_specific_max_rooting_depth": 1.6,
    "min_n_content": 0.005,
    "n_content_pn": 1,
    "n_content_b0": 5,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 1,
    "luxury_n_coeff": 1,
    "max_crop_height": 1,
    "residue_n_ratio": 0.8,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 50,
    "target_n30": 0,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0.35,
    "stage_at_max_height": 4,
    "max_stem_diameter": 0.006,
    "stage_at_max_diameter": 3,
    "heat_sum_irrigation_start": 113,
    "heat_sum_irrigation_end": 900,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 30,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 6,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0025,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 420,
    "end_sensitive_phase_heat_stress": 540,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": null,
    "field_condition_modifier": 1
   },
   {
    "id": 40,
    "name": "soy bean X",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 15,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 5,
    "crop_specific_max_rooting_depth": 1.6,
    "min_n_content": 0.005,
    "n_content_pn": 1,
    "n_content_b0": 5,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 1,
    "luxury_n_coeff": 1,
    "max_crop_height": 1,
    "residue_n_ratio": 0.8,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 50,
    "target_n30": 0,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0.35,
    "stage_at_max_height": 4,
    "max_stem_diameter": 0.006,
    "stage_at_max_diameter": 3,
    "heat_sum_irrigation_start": 113,
    "heat_sum_irrigation_end": 900,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 30,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 6,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0025,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 420,
    "end_sensitive_phase_heat_stress": 540,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": null,
    "field_condition_modifier": 1
   },
   {
    "id": 41,
    "name": "soy bean XI",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 15,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 5,
    "crop_specific_max_rooting_depth": 1.6,
    "min_n_content": 0.005,
    "n_content_pn": 1,
    "n_content_b0": 5,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 1,
    "luxury_n_coeff": 1,
    "max_crop_height": 1,
    "residue_n_ratio": 0.8,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 50,
    "target_n30": 0,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0.35,
    "stage_at_max_height": 4,
    "max_stem_diameter": 0.006,
    "stage_at_max_diameter": 3,
    "heat_sum_irrigation_start": 113,
    "heat_sum_irrigation_end": 900,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 30,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 6,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0025,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 420,
    "end_sensitive_phase_heat_stress": 540,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": null,
    "field_condition_modifier": 1
   },
   {
    "id": 42,
    "name": "soy bean XII",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 15,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 5,
    "crop_specific_max_rooting_depth": 1.6,
    "min_n_content": 0.005,
    "n_content_pn": 1,
    "n_content_b0": 5,
    "n_content_above_ground_biomass": 6,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 1,
    "luxury_n_coeff": 1,
    "max_crop_height": 1,
    "residue_n_ratio": 0.8,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 50,
    "target_n30": 0,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0.35,
    "stage_at_max_height": 4,
    "max_stem_diameter": 0.006,
    "stage_at_max_diameter": 3,
    "heat_sum_irrigation_start": 113,
    "heat_sum_irrigation_end": 900,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 30,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 6,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0025,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 420,
    "end_sensitive_phase_heat_stress": 540,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": null,
    "field_condition_modifier": 1
   },
   {
    "id": 18,
    "name": "sudan gras",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 120,
    "carboxylation_pathway": 2,
    "minimum_temperature_for_assimilation": 8,
    "crop_specific_max_rooting_depth": 1.4,
    "min_n_content": 0.004,
    "n_content_pn": 2,
    "n_content_b0": 4.141,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 0,
    "luxury_n_coeff": 1,
    "max_crop_height": 2.6,
    "residue_n_ratio": 0.5,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 200,
    "target_n30": 60,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 5.28,
    "crop_height_P2": 0.52,
    "stage_at_max_height": 5,
    "max_stem_diameter": 0.025,
    "stage_at_max_diameter": 4,
    "heat_sum_irrigation_start": 113,
    "heat_sum_irrigation_end": 993,
    "max_N_uptake_p": 7.4,
    "root_distribution_p": 0.0035,
    "plant_density": 10,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 12,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0014,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 3,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 0,
    "end_sensitive_phase_heat_stress": 0,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": 10,
    "field_condition_modifier": 1
   },
   {
    "id": 19,
    "name": "winter triticale",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 48,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 3,
    "crop_specific_max_rooting_depth": 1.4,
    "min_n_content": 0.005,
    "n_content_pn": 1.6,
    "n_content_b0": 2,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 1,
    "fixing_n": 0,
    "luxury_n_coeff": 1.3,
    "max_crop_height": 1.1,
    "residue_n_ratio": 0.5,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 230,
    "target_n30": 120,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 6.84,
    "crop_height_P2": 0.53,
    "stage_at_max_height": 3,
    "max_stem_diameter": 0.005,
    "stage_at_max_diameter": 2,
    "heat_sum_irrigation_start": 461,
    "heat_sum_irrigation_end": 1676,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 220,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 0,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0012,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 0,
    "end_sensitive_phase_heat_stress": 0,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": 0,
    "field_condition_modifier": 1
   },
   {
    "id": 16,
    "name": "rye grass",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 15.3,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 8,
    "crop_specific_max_rooting_depth": 0.3,
    "min_n_content": 0.005,
    "n_content_pn": 2.6,
    "n_content_b0": 0.001,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 0,
    "luxury_n_coeff": 1,
    "max_crop_height": 0.7,
    "residue_n_ratio": 1,
    "sampling_depth": 0.6,
    "target_n_sampling_depth": 50,
    "target_n30": 20,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9.098,
    "crop_height_P2": 0.194,
    "stage_at_max_height": 3,
    "max_stem_diameter": 0.003,
    "stage_at_max_diameter": 2,
    "heat_sum_irrigation_start": 450,
    "heat_sum_irrigation_end": 1000,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 600,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 0,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0008,
    "root_form_factor": 5,
    "specific_root_length": 300,
    "stage_after_cut": 2,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 0,
    "end_sensitive_phase_heat_stress": 0,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": 10,
    "field_condition_modifier": 1
   },
   {
    "id": 17,
    "name": "oil raddich",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 60.08,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 4,
    "crop_specific_max_rooting_depth": 1.5,
    "min_n_content": 0.005,
    "n_content_pn": 2,
    "n_content_b0": 9.492,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 1,
    "fixing_n": 0,
    "luxury_n_coeff": 1.1,
    "max_crop_height": 0.8,
    "residue_n_ratio": 0.3,
    "sampling_depth": 0.6,
    "target_n_sampling_depth": 340,
    "target_n30": 120,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 8.77,
    "crop_height_P2": 0.428,
    "stage_at_max_height": 3,
    "max_stem_diameter": 0.006,
    "stage_at_max_diameter": 2,
    "heat_sum_irrigation_start": 450,
    "heat_sum_irrigation_end": 1000,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 100,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 0,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.002,
    "root_form_factor": 1.5,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 0,
    "end_sensitive_phase_heat_stress": 0,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": 0,
    "field_condition_modifier": 1
   },
   {
    "id": 20,
    "name": "spring rye",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 38,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 3,
    "crop_specific_max_rooting_depth": 1.4,
    "min_n_content": 0.005,
    "n_content_pn": 1.6,
    "n_content_b0": 2,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 1,
    "fixing_n": 0,
    "luxury_n_coeff": 1.3,
    "max_crop_height": 1.3,
    "residue_n_ratio": 0.3,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 200,
    "target_n30": 120,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 12,
    "crop_height_P2": 0.55,
    "stage_at_max_height": 3,
    "max_stem_diameter": 0.004,
    "stage_at_max_diameter": 2,
    "heat_sum_irrigation_start": 406,
    "heat_sum_irrigation_end": 934,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 220,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 0,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0012,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 420,
    "end_sensitive_phase_heat_stress": 540,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": 0,
    "field_condition_modifier": 1
   },
   {
    "id": 21,
    "name": "sorghum",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 50.2,
    "carboxylation_pathway": 2,
    "minimum_temperature_for_assimilation": 9,
    "crop_specific_max_rooting_depth": 1.4,
    "min_n_content": 0.004,
    "n_content_pn": 1,
    "n_content_b0": 6.267,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 0,
    "luxury_n_coeff": 1,
    "max_crop_height": 3,
    "residue_n_ratio": 0.5,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 200,
    "target_n30": 60,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 7.76,
    "crop_height_P2": 0.49,
    "stage_at_max_height": 5,
    "max_stem_diameter": 0.025,
    "stage_at_max_diameter": 4,
    "heat_sum_irrigation_start": 113,
    "heat_sum_irrigation_end": 993,
    "max_N_uptake_p": 7.4,
    "root_distribution_p": 0.0035,
    "plant_density": 10,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 9,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0014,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 0,
    "end_sensitive_phase_heat_stress": 0,
    "drought_impact_on_fertility_factor": 0.5,
    "cutting_delay_days": 0,
    "field_condition_modifier": 1
   },
   {
    "id": 22,
    "name": "oat compound",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 38.32,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 3,
    "crop_specific_max_rooting_depth": 1.4,
    "min_n_content": 0.005,
    "n_content_pn": 2,
    "n_content_b0": 1.963,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 1,
    "fixing_n": 0,
    "luxury_n_coeff": 1.2,
    "max_crop_height": 1,
    "residue_n_ratio": 0.3,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 200,
    "target_n30": 120,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 3.74,
    "crop_height_P2": 0.55,
    "stage_at_max_height": 3,
    "max_stem_diameter": 0.004,
    "stage_at_max_diameter": 2,
    "heat_sum_irrigation_start": 406,
    "heat_sum_irrigation_end": 934,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 220,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 0,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0011,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 420,
    "end_sensitive_phase_heat_stress": 540,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": 0,
    "field_condition_modifier": 1
   },
   {
    "id": 23,
    "name": "spring triticale",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 45,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 3,
    "crop_specific_max_rooting_depth": 1.4,
    "min_n_content": 0.005,
    "n_content_pn": 1.6,
    "n_content_b0": 2,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 1,
    "fixing_n": 0,
    "luxury_n_coeff": 1.3,
    "max_crop_height": 0.9,
    "residue_n_ratio": 0.5,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 230,
    "target_n30": 120,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 12,
    "crop_height_P2": 0.55,
    "stage_at_max_height": 3,
    "max_stem_diameter": 0.005,
    "stage_at_max_diameter": 2,
    "heat_sum_irrigation_start": 461,
    "heat_sum_irrigation_end": 1676,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 220,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 0,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0012,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 0,
    "end_sensitive_phase_heat_stress": 0,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": 0,
    "field_condition_modifier": 1
   },
   {
    "id": 24,
    "name": "field pea",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 60,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 3,
    "crop_specific_max_rooting_depth": 0.7,
    "min_n_content": 0.005,
    "n_content_pn": 1.35,
    "n_content_b0": 3,
    "n_content_above_ground_biomass": 0.06,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 1,
    "luxury_n_coeff": 1,
    "max_crop_height": 0.5,
    "residue_n_ratio": 0.8,
    "sampling_depth": 0.6,
    "target_n_sampling_depth": 110,
    "target_n30": 40,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0.35,
    "stage_at_max_height": 4,
    "max_stem_diameter": 0.005,
    "stage_at_max_diameter": 4,
    "heat_sum_irrigation_start": 113,
    "heat_sum_irrigation_end": 993,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 220,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 0,
    "initial_rooting_depth": 0.06,
    "root_penetration_rate": 0.0007,
    "root_form_factor": 1,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 0,
    "end_sensitive_phase_heat_stress": 0,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": 0,
    "field_condition_modifier": 1
   },
   {
    "id": 43,
    "name": "cotton",
    "gen_type": "",
    "spec": "",
    "max_assimilation_rate": 45,
    "carboxylation_pathway": 1,
    "minimum_temperature_for_assimilation": 14,
    "crop_specific_max_rooting_depth": 1.6,
    "min_n_content": 0.005,
    "n_content_pn": 1,
    "n_content_b0": 5,
    "n_content_above_ground_biomass": 6,
    "n_content_root": 0.02,
    "initial_kc_factor": 0.4,
    "development_acceleration_by_nitrogen_stress": 0,
    "fixing_n": 1,
    "luxury_n_coeff": 1,
    "max_crop_height": 1,
    "residue_n_ratio": 0.8,
    "sampling_depth": 0.9,
    "target_n_sampling_depth": 50,
    "target_n30": 0,
    "default_radiation_use_efficiency": 0.5,
    "crop_height_P1": 9,
    "crop_height_P2": 0.35,
    "stage_at_max_height": 4,
    "max_stem_diameter": 0.006,
    "stage_at_max_diameter": 3,
    "heat_sum_irrigation_start": 113,
    "heat_sum_irrigation_end": 900,
    "max_N_uptake_p": 3.145,
    "root_distribution_p": 0.002787,
    "plant_density": 30,
    "root_growth_lag": -30,
    "min_temperature_root_growth": 6,
    "initial_rooting_depth": 0.1,
    "root_penetration_rate": 0.0025,
    "root_form_factor": 3,
    "specific_root_length": 300,
    "stage_after_cut": 0,
    "crit_temperature_heat_stress": 31,
    "lim_temperature_heat_stress": 40,
    "begin_sensitive_phase_heat_stress": 420,
    "end_sensitive_phase_heat_stress": 540,
    "drought_impact_on_fertility_factor": 0,
    "cutting_delay_days": null,
    "field_condition_modifier": 1
   }
  ]
 },
 "mineral_fertilisers": {
  "columns": [
   "ID",
   "type",
   "name",
   "no3",
   "nh4",
   "carbamid",
   "eom_DMNr"
  ],
  "rows": [
   {
    "ID": 1,
    "type": "AN",
    "name": "Ammonium Nitrate",
    "no3": 0.5,
    "nh4": 0.5,
    "carbamid": 0,
    "eom_DMNr": 9
   },
   {
    "ID": 2,
    "type": "AP",
    "name": "Ammonium Phosphate",
    "no3": 0,
    "nh4": 1,
    "carbamid": 0,
    "eom_DMNr": 0
   },
   {
    "ID": 3,
    "type": "AS",
    "name": "Ammonium Sulphate",
    "no3": 0,
    "nh4": 1,
    "carbamid": 0,
    "eom_DMNr": 0
   },
   {
    "ID": 4,
    "type": "CP1",
    "name": "Compound fertiliser (0%NO3, 100% NH4)",
    "no3": 0,
    "nh4": 1,
    "carbamid": 0,
    "eom_DMNr": 0
   },
   {
    "ID": 5,
    "type": "CP2",
    "name": "Compound fertiliser (35%N=3, 65%NH4)",
    "no3": 0.35,
    "nh4": 0.65,
    "carbamid": 0,
    "eom_DMNr": 0
   },
   {
    "ID": 6,
    "type": "CP3",
    "name": "Compound fertiliser (50%NO3, 50%NH4)",
    "no3": 0.5,
    "nh4": 0.5,
    "carbamid": 0,
    "eom_DMNr": 0
   },
   {
    "ID": 7,
    "type": "PN",
    "name": "Potassium Nitrate",
    "no3": 1,
    "nh4": 0,
    "carbamid": 0,
    "eom_DMNr": 0
   },
   {
    "ID": 8,
    "type": "U",
    "name": "Urea",
    "no3": 0,
    "nh4": 0,
    "carbamid": 1,
    "eom_DMNr": 0
   },
   {
    "ID": 9,
    "type": "UAN",
    "name": "Urea Ammonium Nitrate",
    "no3": 0.25,
    "nh4": 0.25,
    "carbamid": 0.5,
    "eom_DMNr": 0
   },
   {
    "ID": 10,
    "type": "UAS",
    "name": "Urea Ammonium Sulphate",
    "no3": 0,
    "nh4": 0.18,
    "carbamid": 0.82,
    "eom_DMNr": 0
   },
   {
    "ID": 11,
    "type": "NPK",
    "name": "NPK-Dünger",
    "no3": 0.34,
    "nh4": 0.66,
    "carbamid": 0,
    "eom_DMNr": 0
   },
   {
    "ID": 12,
    "type": "UNI",
    "name": "Urea (nitrification inhibitor)",
    "no3": 0,
    "nh4": 0,
    "carbamid": 1,
    "eom_DMNr": 0
   },
   {
    "ID": 13,
    "type": "CF4",
    "name": "Compound fertiliser (43%NO3, 57%NH4)",
    "no3": 0.435,
    "nh4": 0.565,
    "carbamid": 0,
    "eom_DMNr": 0
   },
   {
    "ID": 14,
    "type": "NS",
    "name": "Stickstoffdüngerlösung mit Schwefel, Piasan 24 S",
    "no3": 0.20833,
    "nh4": 0.33,
    "carbamid": 0.5,
    "eom_DMNr": 0
   },
   {
    "ID": 15,
    "type": "AHLS",
    "name": "Ammoniumnitrat-Harnstoff-Lösung + Ammoniumthiosulfat, 27-3",
    "no3": 0.22,
    "nh4": 0.3,
    "carbamid": 0.48,
    "eom_DMNr": 0
   },
   {
    "ID": 16,
    "type": "ALZON",
    "name": "Alzon flüssig-S",
    "no3": 0.20833,
    "nh4": 0.33,
    "carbamid": 0.45833,
    "eom_DMNr": 0
   },
   {
    "ID": 17,
    "type": "ASH",
    "name": "Ammonsulfat-Harnstoff, \\\"Piamon\\\"",
    "no3": 0,
    "nh4": 0.23,
    "carbamid": 0.77,
    "eom_DMNr": 0
   }
  ]
 },
 "soil_aggregation_values": {
  "columns": [
   "soil_type",
   "organic_matter*10",
   "air_capacity",
   "field_capacity",
   "n_field_capacity"
  ],
  "rows": [
   {
    "soil_type": "Ls2",
    "organic_matter*10": 15,
    "air_capacity": 0,
    "field_capacity": 2,
    "n_field_capacity": 1
   },
   {
    "soil_type": "Ls2",
    "organic_matter*10": 30,
    "air_capacity": 0,
    "field_capacity": 4,
    "n_field_capacity": 3
   },
   {
    "soil_type": "Ls2",
    "organic_matter*10": 60,
    "air_capacity": 1,
    "field_capacity": 7,
    "n_field_capacity": 5
   },
   {
    "soil_type": "Ls2",
    "organic_matter*10": 115,
    "air_capacity": 2,
    "field_capacity": 13,
    "n_field_capacity": 9
   },
   {
    "soil_type": "Ls3",
    "organic_matter*10": 15,
    "air_capacity": 0,
    "field_capacity": 2,
    "n_field_capacity": 2
   },
   {
    "soil_type": "Ls3",
    "organic_matter*10": 30,
    "air_capacity": 0,
    "field_capacity": 4,
    "n_field_capacity": 4
   },
   {
    "soil_type": "Ls3",
    "organic_matter*10": 60,
    "air_capacity": 1,
    "field_capacity": 7,
    "n_field_capacity": 6
   },
   {
    "soil_type": "Ls3",
    "organic_matter*10": 115,
    "air_capacity": 2,
    "field_capacity": 13,
    "n_field_capacity": 9
   },
   {
    "soil_type": "Ls4",
    "organic_matter*10": 15,
    "air_capacity": 0,
    "field_capacity": 3,
    "n_field_capacity": 2
   },
   {
    "soil_type": "Ls4",
    "organic_matter*10": 30,
    "air_capacity": 0,
    "field_capacity": 5,
    "n_field_capacity": 4
   },
   {
    "soil_type": "Ls4",
    "organic_matter*10": 60,
    "air_capacity": 1,
    "field_capacity": 8,
    "n_field_capacity": 7
   },
   {
    "soil_type": "Ls4",
    "organic_matter*10": 115,
    "air_capacity": 2,
    "field_capacity": 13,
    "n_field_capacity": 10
   },
   {
    "soil_type": "Lt2",
    "organic_matter*10": 15,
    "air_capacity": 0,
    "field_capacity": 2,
    "n_field_capacity": 1
   },
   {
    "soil_type": "Lt2",
    "organic_matter*10": 30,
    "air_capacity": 1,
    "field_capacity": 4,
    "n_field_capacity": 3
   },
   {
    "soil_type": "Lt2",
    "organic_matter*10": 60,
    "air_capacity": 2,
    "field_capacity": 6,
    "n_field_capacity": 4
   },
   {
    "soil_type": "Lt2",
    "organic_matter*10": 115,
    "air_capacity": 3,
    "field_capacity": 10,
    "n_field_capacity": 7
   },
   {
    "soil_type": "Lt3",
    "organic_matter*10": 15,
    "air_capacity": 1,
    "field_capacity": 2,
    "n_field_capacity": 1
   },
   {
    "soil_type": "Lt3",
    "organic_matter*10": 30,
    "air_capacity": 2,
    "field_capacity": 3,
    "n_field_capacity": 2
   },
   {
    "soil_type": "Lt3",
    "organic_matter*10": 60,
    "air_capacity": 3,
    "field_capacity": 5,
    "n_field_capacity": 3
   },
   {
    "soil_type": "Lt3",
    "organic_matter*10": 115,
    "air_capacity": 4,
    "field_capacity": 10,
    "n_field_capacity": 6
   },
   {
    "soil_type": "Lts",
    "organic_matter*10": 15,
    "air_capacity": 1,
    "field_capacity": 2,
    "n_field_capacity": 1
   },
   {
    "soil_type": "Lts",
    "organic_matter*10": 30,
    "air_capacity": 2,
    "field_capacity": 3,
    "n_field_capacity": 2
   },
   {
    "soil_type": "Lts",
    "organic_matter*10": 60,
    "air_capacity": 3,
    "field_capacity": 6,
    "n_field_capacity": 4
   },
   {
    "soil_type": "Lts",
    "organic_matter*10": 115,
    "air_capacity": 4,
    "field_capacity": 10,
    "n_field_capacity": 7
   },
   {
    "soil_type": "Lu",
    "organic_matter*10": 15,
    "air_capacity": 1,
    "field_capacity": 2,
    "n_field_capacity": 1
   },
   {
    "soil_type": "Lu",
    "organic_matter*10": 30,
    "air_capacity": 2,
    "field_capacity": 4,
    "n_field_capacity": 2
   },
   {
    "soil_type": "Lu",
    "organic_matter*10": 60,
    "air_capacity": 3,
    "field_capacity": 7,
    "n_field_capacity": 5
   },
   {
    "soil_type": "Lu",
    "organic_matter*10": 115,
    "air_capacity": 4,
    "field_capacity": 12,
    "n_field_capacity": 8
   },
   {
    "soil_type": "Sl2",
    "organic_matter*10": 15,
    "air_capacity": 0,
    "field_capacity": 2,
    "n_field_capacity": 1
   },
   {
    "soil_type": "Sl2",
    "organic_matter*10": 30,
    "air_capacity": -1,
    "field_capacity": 5,
    "n_field_capacity": 3
   },
   {
    "soil_type": "Sl2",
    "organic_matter*10": 60,
    "air_capacity": -2,
    "field_capacity": 8,
    "n_field_capacity": 5
   },
   {
    "soil_type": "Sl2",
    "organic_matter*10": 115,
    "air_capacity": -3,
    "field_capacity": 16,
    "n_field_capacity": 10
   },
   {
    "soil_type": "Sl3",
    "organic_matter*10": 15,
    "air_capacity": 0,
    "field_capacity": 2,
    "n_field_capacity": 1
   },
   {
    "soil_type": "Sl3",
    "organic_matter*10": 30,
    "air_capacity": -1,
    "field_capacity": 4,
    "n_field_capacity": 3
   },
   {
    "soil_type": "Sl3",
    "organic_matter*10": 60,
    "air_capacity": -2,
    "field_capacity": 8,
    "n_field_capacity": 5
   },
   {
    "soil_type": "Sl3",
    "organic_matter*10": 115,
    "air_capacity": -3,
    "field_capacity": 15,
    "n_field_capacity": 10
   },
   {
    "soil_type": "Sl4",
    "organic_matter*10": 15,
    "air_capacity": 0,
    "field_capacity": 2,
    "n_field_capacity": 1
   },
   {
    "soil_type": "Sl4",
    "organic_matter*10": 30,
    "air_capacity": -1,
    "field_capacity": 4,
    "n_field_capacity": 3
   },
   {
    "soil_type": "Sl4",
    "organic_matter*10": 60,
    "air_capacity": -2,
    "field_capacity": 8,
    "n_field_capacity": 5
   },
   {
    "soil_type": "Sl4",
    "organic_matter*10": 115,
    "air_capacity": -3,
    "field_capacity": 14,
    "n_field_capacity": 10
   },
   {
    "soil_type": "Slu",
    "organic_matter*10": 15,
    "air_capacity": 0,
    "field_capacity": 2,
    "n_field_capacity": 1
   },
   {
    "soil_type": "Slu",
    "organic_matter*10": 30,
    "air_capacity": -1,
    "field_capacity": 4,
    "n_field_capacity": 3
   },
   {
    "soil_type": "Slu",
    "organic_matter*10": 60,
    "air_capacity": -2,
    "field_capacity": 8,
    "n_field_capacity": 5
   },
   {
    "soil_type": "Slu",
    "organic_matter*10": 115,
    "air_capacity": -3,
    "field_capacity": 4,
    "n_field_capacity": 10
   },
   {
    "soil_type": "Ss",
    "organic_matter*10": 15,
    "air_capacity": 0,
    "field_capacity": 4,
    "n_field_capacity": 2
   },
   {
    "soil_type": "Ss",
    "organic_matter*10": 30,
    "air_capacity": -1,
    "field_capacity": 8,
    "n_field_capacity": 4
   },
   {
    "soil_type": "Ss",
    "organic_matter*10": 60,
    "air_capacity": -3,
    "field_capacity": 12,
    "n_field_capacity": 7
   },
   {
    "soil_type": "Ss",
    "organic_matter*10": 115,
    "air_capacity": -5,
    "field_capacity": 21,
    "n_field_capacity": 13
   },
   {
    "soil_type": "St2",
    "organic_matter*10": 15,
    "air_capacity": 0,
    "field_capacity": 3,
    "n_field_capacity": 2
   },
   {
    "soil_type": "St2",
    "organic_matter*10": 30,
    "air_capacity": 0,
    "field_capacity": 6,
    "n_field_capacity": 4
   },
   {
    "soil_type": "St2",
    "organic_matter*10": 60,
    "air_capacity": -1,
    "field_capacity": 9,
    "n_field_capacity": 5
   },
   {
    "soil_type": "St2",
    "organic_matter*10": 115,
    "air_capacity": -2,
    "field_capacity": 15,
    "n_field_capacity": 7
   },
   {
    "soil_type": "St3",
    "organic_matter*10": 15,
    "air_capacity": 0,
    "field_capacity": 3,
    "n_field_capacity": 2
   },
   {
    "soil_type": "St3",
    "organic_matter*10": 30,
    "air_capacity": 0,
    "field_capacity": 6,
    "n_field_capacity": 4
   },
   {
    "soil_type": "St3",
    "organic_matter*10": 60,
    "air_capacity": 0,
    "field_capacity": 8,
    "n_field_capacity": 6
   },
   {
    "soil_type": "St3",
    "organic_matter*10": 115,
    "air_capacity": 1,
    "field_capacity": 14,
    "n_field_capacity": 8
   },
   {
    "soil_type": "Su2",
    "organic_matter*10": 15,
    "air_capacity": 0,
    "field_capacity": 3,
    "n_field_capacity": 2
   },
   {
    "soil_type": "Su2",
    "organic_matter*10": 30,
    "air_capacity": -1,
    "field_capacity": 6,
    "n_field_capacity": 4
   },
   {
    "soil_type": "Su2",
    "organic_matter*10": 60,
    "air_capacity": -2,
    "field_capacity": 10,
    "n_field_capacity": 7
   },
   {
    "soil_type": "Su2",
    "organic_matter*10": 115,
    "air_capacity": -3,
    "field_capacity": 16,
    "n_field_capacity": 10
   },
   {
    "soil_type": "Su3",
    "organic_matter*10": 15,
    "air_capacity": 0,
    "field_capacity": 3,
    "n_field_capacity": 2
   },
   {
    "soil_type": "Su3",
    "organic_matter*10": 30,
    "air_capacity": -1,
    "field_capacity": 6,
    "n_field_capacity": 4
   },
   {
    "soil_type": "Su3",
    "organic_matter*10": 60,
    "air_capacity": -2,
    "field_capacity": 10,
    "n_field_capacity": 6
   },
   {
    "soil_type": "Su3",
    "organic_matter*10": 115,
    "air_capacity": -3,
    "field_capacity": 15,
    "n_field_capacity": 9
   },
   {
    "soil_type": "Su4",
    "organic_matter*10": 15,
    "air_capacity": 0,
    "field_capacity": 3,
    "n_field_capacity": 2
   },
   {
    "soil_type": "Su4",
    "organic_matter*10": 30,
    "air_capacity": 0,
    "field_capacity": 6,
    "n_field_capacity": 4
   },
   {
    "soil_type": "Su4",
    "organic_matter*10": 60,
    "air_capacity": -1,
    "field_capacity": 9,
    "n_field_capacity": 6
   },
   {
    "soil_type": "Su4",
    "organic_matter*10": 115,
    "air_capacity": -2,
    "field_capacity": 14,
    "n_field_capacity": 9
   },
   {
    "soil_type": "Tl",
    "organic_matter*10": 15,
    "air_capacity": 2,
    "field_capacity": 1,
    "n_field_capacity": 1
   },
   {
    "soil_type": "Tl",
    "organic_matter*10": 30,
    "air_capacity": 3,
    "field_capacity": 2,
    "n_field_capacity": 2
   },
   {
    "soil_type": "Tl",
    "organic_matter*10": 60,
    "air_capacity": 4,
    "field_capacity": 4,
    "n_field_capacity": 3
   },
   {
    "soil_type": "Tl",
    "organic_matter*10": 115,
    "air_capacity": 5,
    "field_capacity": 7,
    "n_field_capacity": 5
   },
   {
    "soil_type": "Ts2",
    "organic_matter*10": 15,
    "air_capacity": 1,
    "field_capacity": 3,
    "n_field_capacity": 2
   },
   {
    "soil_type": "Ts2",
    "organic_matter*10": 30,
    "air_capacity": 2,
    "field_capacity": 5,
    "n_field_capacity": 4
   },
   {
    "soil_type": "Ts2",
    "organic_matter*10": 60,
    "air_capacity": 3,
    "field_capacity": 8,
    "n_field_capacity": 6
   },
   {
    "soil_type": "Ts2",
    "organic_matter*10": 115,
    "air_capacity": 5,
    "field_capacity": 12,
    "n_field_capacity": 8
   },
   {
    "soil_type": "Ts3",
    "organic_matter*10": 15,
    "air_capacity": 0,
    "field_capacity": 3,
    "n_field_capacity": 2
   },
   {
    "soil_type": "Ts3",
    "organic_matter*10": 30,
    "air_capacity": 1,
    "field_capacity": 5,
    "n_field_capacity": 4
   },
   {
    "soil_type": "Ts3",
    "organic_matter*10": 60,
    "air_capacity": 2,
    "field_capacity": 8,
    "n_field_capacity": 6
   },
   {
    "soil_type": "Ts3",
    "organic_matter*10": 115,
    "air_capacity": 5,
    "field_capacity": 12,
    "n_field_capacity": 9
   },
   {
    "soil_type": "Ts4",
    "organic_matter*10": 15,
    "air_capacity": 0,
    "field_capacity": 3,
    "n_field_capacity": 2
   },
   {
    "soil_type": "Ts4",
    "organic_matter*10": 30,
    "air_capacity": 1,
    "field_capacity": 5,
    "n_field_capacity": 4
   },
   {
    "soil_type": "Ts4",
    "organic_matter*10": 60,
    "air_capacity": 2,
    "field_capacity": 8,
    "n_field_capacity": 6
   },
   {
    "soil_type": "Ts4",
    "organic_matter*10": 115,
    "air_capacity": 4,
    "field_capacity": 12,
    "n_field_capacity": 9
   },
   {
    "soil_type": "Tt",
    "organic_matter*10": 15,
    "air_capacity": 3,
    "field_capacity": 1,
    "n_field_capacity": 1
   },
   {
    "soil_type": "Tt",
    "organic_matter*10": 30,
    "air_capacity": 4,
    "field_capacity": 2,
    "n_field_capacity": 2
   },
   {
    "soil_type": "Tt",
    "organic_matter*10": 60,
    "air_capacity": 5,
    "field_capacity": 3,
    "n_field_capacity": 3
   },
   {
    "soil_type": "Tt",
    "organic_matter*10": 115,
    "air_capacity": 7,
    "field_capacity": 6,
    "n_field_capacity": 5
   },
   {
    "soil_type": "Tu2",
    "organic_matter*10": 15,
    "air_capacity": 2,
    "field_capacity": 1,
    "n_field_capacity": 1
   },
   {
    "soil_type": "Tu2",
    "organic_matter*10": 30,
    "air_capacity": 3,
    "field_capacity": 2,
    "n_field_capacity": 2
   },
   {
    "soil_type": "Tu2",
    "organic_matter*10": 60,
    "air_capacity": 4,
    "field_capacity": 4,
    "n_field_capacity": 3
   },
   {
    "soil_type": "Tu2",
    "organic_matter*10": 115,
    "air_capacity": 5,
    "field_capacity": 7,
    "n_field_capacity": 5
   },
   {
    "soil_type": "Tu3",
    "organic_matter*10": 15,
    "air_capacity": 1,
    "field_capacity": 2,
    "n_field_capacity": 1
   },
   {
    "soil_type": "Tu3",
    "organic_matter*10": 30,
    "air_capacity": 2,
    "field_capacity": 3,
    "n_field_capacity": 2
   },
   {
    "soil_type": "Tu3",
    "organic_matter*10": 60,
    "air_capacity": 3,
    "field_capacity": 5,
    "n_field_capacity": 4
   },
   {
    "soil_type": "Tu3",
    "organic_matter*10": 115,
    "air_capacity": 5,
    "field_capacity": 8,
    "n_field_capacity": 6
   },
   {
    "soil_type": "Tu4",
    "organic_matter*10": 15,
    "air_capacity": 1,
    "field_capacity": 2,
    "n_field_capacity": 1
   },
   {
    "soil_type": "Tu4",
    "organic_matter*10": 30,
    "air_capacity": 2,
    "field_capacity": 4,
    "n_field_capacity": 2
   },
   {
    "soil_type": "Tu4",
    "organic_matter*10": 60,
    "air_capacity": 3,
    "field_capacity": 6,
    "n_field_capacity": 4
   },
   {
    "soil_type": "Tu4",
    "organic_matter*10": 115,
    "air_capacity": 5,
    "field_capacity": 9,
    "n_field_capacity": 7
   },
   {
    "soil_type": "Uls",
    "organic_matter*10": 15,
    "air_capacity": 0,
    "field_capacity": 2,
    "n_field_capacity": 1
   },
   {
    "soil_type": "Uls",
    "organic_matter*10": 30,
    "air_capacity": 1,
    "field_capacity": 4,
    "n_field_capacity": 3
   },
   {
    "soil_type": "Uls",
    "organic_matter*10": 60,
    "air_capacity": 2,
    "field_capacity": 7,
    "n_field_capacity": 5
   },
   {
    "soil_type": "Uls",
    "organic_matter*10": 115,
    "air_capacity": 3,
    "field_capacity": 12,
    "n_field_capacity": 8
   },
   {
    "soil_type": "Us",
    "organic_matter*10": 15,
    "air_capacity": 0,
    "field_capacity": 2,
    "n_field_capacity": 1
   },
   {
    "soil_type": "Us",
    "organic_matter*10": 30,
    "air_capacity": 0,
    "field_capacity": 4,
    "n_field_capacity": 3
   },
   {
    "soil_type": "Us",
    "organic_matter*10": 60,
    "air_capacity": 1,
    "field_capacity": 7,
    "n_field_capacity": 5
   },
   {
    "soil_type": "Us",
    "organic_matter*10": 115,
    "air_capacity": 2,
    "field_capacity": 12,
    "n_field_capacity": 8
   },
   {
    "soil_type": "Ut2",
    "organic_matter*10": 15,
    "air_capacity": 0,
    "field_capacity": 2,
    "n_field_capacity": 1
   },
   {
    "soil_type": "Ut2",
    "organic_matter*10": 30,
    "air_capacity": 1,
    "field_capacity": 5,
    "n_field_capacity": 3
   },
   {
    "soil_type": "Ut2",
    "organic_matter*10": 60,
    "air_capacity": 2,
    "field_capacity": 9,
    "n_field_capacity": 6
   },
   {
    "soil_type": "Ut2",
    "organic_matter*10": 115,
    "air_capacity": 3,
    "field_capacity": 13,
    "n_field_capacity": 8
   },
   {
    "soil_type": "Ut3",
    "organic_matter*10": 15,
    "air_capacity": 0,
    "field_capacity": 2,
    "n_field_capacity": 1
   },
   {
    "soil_type": "Ut3",
    "organic_matter*10": 30,
    "air_capacity": 1,
    "field_capacity": 5,
    "n_field_capacity": 3
   },
   {
    "soil_type": "Ut3",
    "organic_matter*10": 60,
    "air_capacity": 2,
    "field_capacity": 9,
    "n_field_capacity": 6
   },
   {
    "soil_type": "Ut3",
    "organic_matter*10": 115,
    "air_capacity": 3,
    "field_capacity": 13,
    "n_field_capacity": 8
   },
   {
    "soil_type": "Ut4",
    "organic_matter*10": 15,
    "air_capacity": 1,
    "field_capacity": 2,
    "n_field_capacity": 1
   },
   {
    "soil_type": "Ut4",
    "organic_matter*10": 30,
    "air_capacity": 2,
    "field_capacity": 5,
    "n_field_capacity": 3
   },
   {
    "soil_type": "Ut4",
    "organic_matter*10": 60,
    "air_capacity": 3,
    "field_capacity": 9,
    "n_field_capacity": 6
   },
   {
    "soil_type": "Ut4",
    "organic_matter*10": 115,
    "air_capacity": 4,
    "field_capacity": 13,
    "n_field_capacity": 8
   },
   {
    "soil_type": "Uu",
    "organic_matter*10": 15,
    "air_capacity": 0,
    "field_capacity": 2,
    "n_field_capacity": 1
   },
   {
    "soil_type": "Uu",
    "organic_matter*10": 30,
    "air_capacity": 0,
    "field_capacity": 4,
    "n_field_capacity": 2
   },
   {
    "soil_type": "Uu",
    "organic_matter*10": 60,
    "air_capacity": 1,
    "field_capacity": 7,
    "n_field_capacity": 4
   },
   {
    "soil_type": "Uu",
    "organic_matter*10": 115,
    "air_capacity": 2,
    "field_capacity": 12,
    "n_field_capacity": 7
   }
  ]
 },
 "cutting_parts": {
  "columns": [
   "crop_id",
   "organ_id",
   "is_primary",
   "percentage",
   "dry_matter"
  ],
  "rows": [
   {
    "crop_id": 13,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 100,
    "dry_matter": 0.3
   },
   {
    "crop_id": 13,
    "organ_id": 3,
    "is_primary": 1,
    "percentage": 75,
    "dry_matter": 0.3
   },
   {
    "crop_id": 13,
    "organ_id": 2,
    "is_primary": 1,
    "percentage": 75,
    "dry_matter": 0.3
   },
   {
    "crop_id": 14,
    "organ_id": 2,
    "is_primary": 1,
    "percentage": 85,
    "dry_matter": 0.3
   },
   {
    "crop_id": 14,
    "organ_id": 3,
    "is_primary": 1,
    "percentage": 85,
    "dry_matter": 0.3
   },
   {
    "crop_id": 14,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 85,
    "dry_matter": 0.3
   },
   {
    "crop_id": 15,
    "organ_id": 2,
    "is_primary": 1,
    "percentage": 85,
    "dry_matter": 0.3
   },
   {
    "crop_id": 15,
    "organ_id": 3,
    "is_primary": 1,
    "percentage": 85,
    "dry_matter": 0.3
   },
   {
    "crop_id": 15,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 85,
    "dry_matter": 0.3
   },
   {
    "crop_id": 18,
    "organ_id": 2,
    "is_primary": 1,
    "percentage": 85,
    "dry_matter": 0.32
   },
   {
    "crop_id": 18,
    "organ_id": 3,
    "is_primary": 1,
    "percentage": 85,
    "dry_matter": 0.32
   },
   {
    "crop_id": 18,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 85,
    "dry_matter": 0.32
   },
   {
    "crop_id": 16,
    "organ_id": 2,
    "is_primary": 1,
    "percentage": 85,
    "dry_matter": 0.18
   },
   {
    "crop_id": 16,
    "organ_id": 3,
    "is_primary": 1,
    "percentage": 85,
    "dry_matter": 0.18
   }
  ]
 },
 "soil_characteristic_data": {
  "columns": [
   "soil_type",
   "soil_raw_density*10",
   "air_capacity",
   "field_capacity",
   "n_field_capacity"
  ],
  "rows": [
   {
    "soil_type": "Hh",
    "soil_raw_density*10": -10,
    "air_capacity": 10,
    "field_capacity": 82,
    "n_field_capacity": 65
   },
   {
    "soil_type": "Hn",
    "soil_raw_density*10": -10,
    "air_capacity": 18,
    "field_capacity": 59,
    "n_field_capacity": 29
   },
   {
    "soil_type": "Ls2",
    "soil_raw_density*10": 11,
    "air_capacity": 24,
    "field_capacity": 34,
    "n_field_capacity": 18
   },
   {
    "soil_type": "Ls2",
    "soil_raw_density*10": 13,
    "air_capacity": 20,
    "field_capacity": 31,
    "n_field_capacity": 15
   },
   {
    "soil_type": "Ls2",
    "soil_raw_density*10": 15,
    "air_capacity": 13,
    "field_capacity": 30,
    "n_field_capacity": 14
   },
   {
    "soil_type": "Ls2",
    "soil_raw_density*10": 17,
    "air_capacity": 8,
    "field_capacity": 28,
    "n_field_capacity": 12
   },
   {
    "soil_type": "Ls2",
    "soil_raw_density*10": 19,
    "air_capacity": 3,
    "field_capacity": 26,
    "n_field_capacity": 10
   },
   {
    "soil_type": "Ls3",
    "soil_raw_density*10": 11,
    "air_capacity": 24,
    "field_capacity": 34,
    "n_field_capacity": 18
   },
   {
    "soil_type": "Ls3",
    "soil_raw_density*10": 13,
    "air_capacity": 21,
    "field_capacity": 30,
    "n_field_capacity": 14
   },
   {
    "soil_type": "Ls3",
    "soil_raw_density*10": 15,
    "air_capacity": 15,
    "field_capacity": 28,
    "n_field_capacity": 12
   },
   {
    "soil_type": "Ls3",
    "soil_raw_density*10": 17,
    "air_capacity": 9,
    "field_capacity": 27,
    "n_field_capacity": 11
   },
   {
    "soil_type": "Ls3",
    "soil_raw_density*10": 19,
    "air_capacity": 4,
    "field_capacity": 25,
    "n_field_capacity": 9
   },
   {
    "soil_type": "Ls4",
    "soil_raw_density*10": 11,
    "air_capacity": 25,
    "field_capacity": 33,
    "n_field_capacity": 18
   },
   {
    "soil_type": "Ls4",
    "soil_raw_density*10": 13,
    "air_capacity": 22,
    "field_capacity": 29,
    "n_field_capacity": 14
   },
   {
    "soil_type": "Ls4",
    "soil_raw_density*10": 15,
    "air_capacity": 16,
    "field_capacity": 27,
    "n_field_capacity": 12
   },
   {
    "soil_type": "Ls4",
    "soil_raw_density*10": 17,
    "air_capacity": 10,
    "field_capacity": 26,
    "n_field_capacity": 11
   },
   {
    "soil_type": "Ls4",
    "soil_raw_density*10": 19,
    "air_capacity": 5,
    "field_capacity": 24,
    "n_field_capacity": 9
   },
   {
    "soil_type": "Lt2",
    "soil_raw_density*10": 11,
    "air_capacity": 23,
    "field_capacity": 35,
    "n_field_capacity": 15
   },
   {
    "soil_type": "Lt2",
    "soil_raw_density*10": 13,
    "air_capacity": 19,
    "field_capacity": 32,
    "n_field_capacity": 12
   },
   {
    "soil_type": "Lt2",
    "soil_raw_density*10": 15,
    "air_capacity": 13,
    "field_capacity": 30,
    "n_field_capacity": 10
   },
   {
    "soil_type": "Lt2",
    "soil_raw_density*10": 17,
    "air_capacity": 8,
    "field_capacity": 28,
    "n_field_capacity": 8
   },
   {
    "soil_type": "Lt3",
    "soil_raw_density*10": 11,
    "air_capacity": 20,
    "field_capacity": 38,
    "n_field_capacity": 14
   },
   {
    "soil_type": "Lt3",
    "soil_raw_density*10": 13,
    "air_capacity": 16,
    "field_capacity": 35,
    "n_field_capacity": 11
   },
   {
    "soil_type": "Lt3",
    "soil_raw_density*10": 15,
    "air_capacity": 10,
    "field_capacity": 33,
    "n_field_capacity": 9
   },
   {
    "soil_type": "Lt3",
    "soil_raw_density*10": 17,
    "air_capacity": 5,
    "field_capacity": 31,
    "n_field_capacity": 7
   },
   {
    "soil_type": "Lts",
    "soil_raw_density*10": 11,
    "air_capacity": 21,
    "field_capacity": 37,
    "n_field_capacity": 16
   },
   {
    "soil_type": "Lts",
    "soil_raw_density*10": 13,
    "air_capacity": 17,
    "field_capacity": 34,
    "n_field_capacity": 13
   },
   {
    "soil_type": "Lts",
    "soil_raw_density*10": 15,
    "air_capacity": 11,
    "field_capacity": 32,
    "n_field_capacity": 11
   },
   {
    "soil_type": "Lts",
    "soil_raw_density*10": 17,
    "air_capacity": 6,
    "field_capacity": 30,
    "n_field_capacity": 9
   },
   {
    "soil_type": "Lu",
    "soil_raw_density*10": 11,
    "air_capacity": 21,
    "field_capacity": 37,
    "n_field_capacity": 18
   },
   {
    "soil_type": "Lu",
    "soil_raw_density*10": 13,
    "air_capacity": 18,
    "field_capacity": 34,
    "n_field_capacity": 15
   },
   {
    "soil_type": "Lu",
    "soil_raw_density*10": 15,
    "air_capacity": 11,
    "field_capacity": 32,
    "n_field_capacity": 13
   },
   {
    "soil_type": "Lu",
    "soil_raw_density*10": 17,
    "air_capacity": 6,
    "field_capacity": 30,
    "n_field_capacity": 11
   },
   {
    "soil_type": "Sl2",
    "soil_raw_density*10": 13,
    "air_capacity": 28,
    "field_capacity": 23,
    "n_field_capacity": 15
   },
   {
    "soil_type": "Sl2",
    "soil_raw_density*10": 15,
    "air_capacity": 22,
    "field_capacity": 21,
    "n_field_capacity": 13
   },
   {
    "soil_type": "Sl2",
    "soil_raw_density*10": 17,
    "air_capacity": 17,
    "field_capacity": 19,
    "n_field_capacity": 11
   },
   {
    "soil_type": "Sl2",
    "soil_raw_density*10": 19,
    "air_capacity": 11,
    "field_capacity": 18,
    "n_field_capacity": 10
   },
   {
    "soil_type": "Sl3",
    "soil_raw_density*10": 13,
    "air_capacity": 26,
    "field_capacity": 25,
    "n_field_capacity": 15
   },
   {
    "soil_type": "Sl3",
    "soil_raw_density*10": 15,
    "air_capacity": 20,
    "field_capacity": 23,
    "n_field_capacity": 13
   },
   {
    "soil_type": "Sl3",
    "soil_raw_density*10": 17,
    "air_capacity": 14,
    "field_capacity": 22,
    "n_field_capacity": 12
   },
   {
    "soil_type": "Sl3",
    "soil_raw_density*10": 19,
    "air_capacity": 9,
    "field_capacity": 20,
    "n_field_capacity": 10
   },
   {
    "soil_type": "Sl4",
    "soil_raw_density*10": 13,
    "air_capacity": 23,
    "field_capacity": 28,
    "n_field_capacity": 15
   },
   {
    "soil_type": "Sl4",
    "soil_raw_density*10": 15,
    "air_capacity": 18,
    "field_capacity": 25,
    "n_field_capacity": 12
   },
   {
    "soil_type": "Sl4",
    "soil_raw_density*10": 17,
    "air_capacity": 12,
    "field_capacity": 24,
    "n_field_capacity": 11
   },
   {
    "soil_type": "Sl4",
    "soil_raw_density*10": 19,
    "air_capacity": 4,
    "field_capacity": 22,
    "n_field_capacity": 9
   },
   {
    "soil_type": "Slu",
    "soil_raw_density*10": 13,
    "air_capacity": 22,
    "field_capacity": 29,
    "n_field_capacity": 18
   },
   {
    "soil_type": "Slu",
    "soil_raw_density*10": 15,
    "air_capacity": 16,
    "field_capacity": 27,
    "n_field_capacity": 15
   },
   {
    "soil_type": "Slu",
    "soil_raw_density*10": 17,
    "air_capacity": 10,
    "field_capacity": 26,
    "n_field_capacity": 14
   },
   {
    "soil_type": "Slu",
    "soil_raw_density*10": 19,
    "air_capacity": 4,
    "field_capacity": 25,
    "n_field_capacity": 13
   },
   {
    "soil_type": "Ss",
    "soil_raw_density*10": 13,
    "air_capacity": 39,
    "field_capacity": 12,
    "n_field_capacity": 9
   },
   {
    "soil_type": "Ss",
    "soil_raw_density*10": 15,
    "air_capacity": 31,
    "field_capacity": 12,
    "n_field_capacity": 9
   },
   {
    "soil_type": "Ss",
    "soil_raw_density*10": 17,
    "air_capacity": 24,
    "field_capacity": 12,
    "n_field_capacity": 9
   },
   {
    "soil_type": "St2",
    "soil_raw_density*10": 13,
    "air_capacity": 30,
    "field_capacity": 21,
    "n_field_capacity": 13
   },
   {
    "soil_type": "St2",
    "soil_raw_density*10": 15,
    "air_capacity": 25,
    "field_capacity": 18,
    "n_field_capacity": 10
   },
   {
    "soil_type": "St2",
    "soil_raw_density*10": 17,
    "air_capacity": 20,
    "field_capacity": 16,
    "n_field_capacity": 8
   },
   {
    "soil_type": "St2",
    "soil_raw_density*10": 19,
    "air_capacity": 14,
    "field_capacity": 15,
    "n_field_capacity": 7
   },
   {
    "soil_type": "St3",
    "soil_raw_density*10": 13,
    "air_capacity": 22,
    "field_capacity": 29,
    "n_field_capacity": 15
   },
   {
    "soil_type": "St3",
    "soil_raw_density*10": 15,
    "air_capacity": 17,
    "field_capacity": 26,
    "n_field_capacity": 12
   },
   {
    "soil_type": "St3",
    "soil_raw_density*10": 17,
    "air_capacity": 13,
    "field_capacity": 23,
    "n_field_capacity": 9
   },
   {
    "soil_type": "St3",
    "soil_raw_density*10": 19,
    "air_capacity": 8,
    "field_capacity": 21,
    "n_field_capacity": 7
   },
   {
    "soil_type": "Su2",
    "soil_raw_density*10": 13,
    "air_capacity": 30,
    "field_capacity": 21,
    "n_field_capacity": 16
   },
   {
    "soil_type": "Su2",
    "soil_raw_density*10": 15,
    "air_capacity": 23,
    "field_capacity": 20,
    "n_field_capacity": 15
   },
   {
    "soil_type": "Su2",
    "soil_raw_density*10": 17,
    "air_capacity": 18,
    "field_capacity": 18,
    "n_field_capacity": 13
   },
   {
    "soil_type": "Su2",
    "soil_raw_density*10": 19,
    "air_capacity": 12,
    "field_capacity": 17,
    "n_field_capacity": 12
   },
   {
    "soil_type": "Su3",
    "soil_raw_density*10": 13,
    "air_capacity": 25,
    "field_capacity": 26,
    "n_field_capacity": 19
   },
   {
    "soil_type": "Su3",
    "soil_raw_density*10": 15,
    "air_capacity": 19,
    "field_capacity": 24,
    "n_field_capacity": 17
   },
   {
    "soil_type": "Su3",
    "soil_raw_density*10": 17,
    "air_capacity": 14,
    "field_capacity": 22,
    "n_field_capacity": 15
   },
   {
    "soil_type": "Su3",
    "soil_raw_density*10": 19,
    "air_capacity": 9,
    "field_capacity": 20,
    "n_field_capacity": 13
   },
   {
    "soil_type": "Su4",
    "soil_raw_density*10": 13,
    "air_capacity": 24,
    "field_capacity": 27,
    "n_field_capacity": 20
   },
   {
    "soil_type": "Su4",
    "soil_raw_density*10": 15,
    "air_capacity": 18,
    "field_capacity": 25,
    "n_field_capacity": 18
   },
   {
    "soil_type": "Su4",
    "soil_raw_density*10": 17,
    "air_capacity": 12,
    "field_capacity": 24,
    "n_field_capacity": 17
   },
   {
    "soil_type": "Su4",
    "soil_raw_density*10": 19,
    "air_capacity": 7,
    "field_capacity": 22,
    "n_field_capacity": 15
   },
   {
    "soil_type": "Tl",
    "soil_raw_density*10": 11,
    "air_capacity": 12,
    "field_capacity": 46,
    "n_field_capacity": 14
   },
   {
    "soil_type": "Tl",
    "soil_raw_density*10": 13,
    "air_capacity": 8,
    "field_capacity": 43,
    "n_field_capacity": 12
   },
   {
    "soil_type": "Tl",
    "soil_raw_density*10": 15,
    "air_capacity": 4,
    "field_capacity": 39,
    "n_field_capacity": 8
   },
   {
    "soil_type": "Tl",
    "soil_raw_density*10": 17,
    "air_capacity": 2,
    "field_capacity": 35,
    "n_field_capacity": 6
   },
   {
    "soil_type": "Ts2",
    "soil_raw_density*10": 11,
    "air_capacity": 15,
    "field_capacity": 43,
    "n_field_capacity": 15
   },
   {
    "soil_type": "Ts2",
    "soil_raw_density*10": 13,
    "air_capacity": 11,
    "field_capacity": 40,
    "n_field_capacity": 13
   },
   {
    "soil_type": "Ts2",
    "soil_raw_density*10": 15,
    "air_capacity": 6,
    "field_capacity": 37,
    "n_field_capacity": 10
   },
   {
    "soil_type": "Ts2",
    "soil_raw_density*10": 17,
    "air_capacity": 2,
    "field_capacity": 34,
    "n_field_capacity": 8
   },
   {
    "soil_type": "Ts3",
    "soil_raw_density*10": 11,
    "air_capacity": 19,
    "field_capacity": 39,
    "n_field_capacity": 17
   },
   {
    "soil_type": "Ts3",
    "soil_raw_density*10": 13,
    "air_capacity": 15,
    "field_capacity": 35,
    "n_field_capacity": 14
   },
   {
    "soil_type": "Ts3",
    "soil_raw_density*10": 15,
    "air_capacity": 12,
    "field_capacity": 31,
    "n_field_capacity": 10
   },
   {
    "soil_type": "Ts3",
    "soil_raw_density*10": 17,
    "air_capacity": 6,
    "field_capacity": 30,
    "n_field_capacity": 9
   },
   {
    "soil_type": "Ts4",
    "soil_raw_density*10": 11,
    "air_capacity": 22,
    "field_capacity": 36,
    "n_field_capacity": 17
   },
   {
    "soil_type": "Ts4",
    "soil_raw_density*10": 13,
    "air_capacity": 18,
    "field_capacity": 33,
    "n_field_capacity": 14
   },
   {
    "soil_type": "Ts4",
    "soil_raw_density*10": 15,
    "air_capacity": 14,
    "field_capacity": 29,
    "n_field_capacity": 11
   },
   {
    "soil_type": "Ts4",
    "soil_raw_density*10": 17,
    "air_capacity": 8,
    "field_capacity": 28,
    "n_field_capacity": 10
   },
   {
    "soil_type": "Tt",
    "soil_raw_density*10": 11,
    "air_capacity": 9,
    "field_capacity": 49,
    "n_field_capacity": 13
   },
   {
    "soil_type": "Tt",
    "soil_raw_density*10": 13,
    "air_capacity": 6,
    "field_capacity": 45,
    "n_field_capacity": 11
   },
   {
    "soil_type": "Tt",
    "soil_raw_density*10": 15,
    "air_capacity": 3,
    "field_capacity": 41,
    "n_field_capacity": 7
   },
   {
    "soil_type": "Tt",
    "soil_raw_density*10": 17,
    "air_capacity": 2,
    "field_capacity": 37,
    "n_field_capacity": 6
   },
   {
    "soil_type": "Tu2",
    "soil_raw_density*10": 11,
    "air_capacity": 12,
    "field_capacity": 46,
    "n_field_capacity": 15
   },
   {
    "soil_type": "Tu2",
    "soil_raw_density*10": 13,
    "air_capacity": 8,
    "field_capacity": 43,
    "n_field_capacity": 13
   },
   {
    "soil_type": "Tu2",
    "soil_raw_density*10": 15,
    "air_capacity": 4,
    "field_capacity": 39,
    "n_field_capacity": 9
   },
   {
    "soil_type": "Tu2",
    "soil_raw_density*10": 17,
    "air_capacity": 2,
    "field_capacity": 35,
    "n_field_capacity": 6
   },
   {
    "soil_type": "Tu3",
    "soil_raw_density*10": 11,
    "air_capacity": 15,
    "field_capacity": 43,
    "n_field_capacity": 17
   },
   {
    "soil_type": "Tu3",
    "soil_raw_density*10": 13,
    "air_capacity": 11,
    "field_capacity": 39,
    "n_field_capacity": 14
   },
   {
    "soil_type": "Tu3",
    "soil_raw_density*10": 15,
    "air_capacity": 7,
    "field_capacity": 36,
    "n_field_capacity": 12
   },
   {
    "soil_type": "Tu3",
    "soil_raw_density*10": 17,
    "air_capacity": 3,
    "field_capacity": 33,
    "n_field_capacity": 10
   },
   {
    "soil_type": "Tu4",
    "soil_raw_density*10": 11,
    "air_capacity": 18,
    "field_capacity": 40,
    "n_field_capacity": 18
   },
   {
    "soil_type": "Tu4",
    "soil_raw_density*10": 13,
    "air_capacity": 13,
    "field_capacity": 37,
    "n_field_capacity": 15
   },
   {
    "soil_type": "Tu4",
    "soil_raw_density*10": 15,
    "air_capacity": 9,
    "field_capacity": 33,
    "n_field_capacity": 13
   },
   {
    "soil_type": "Tu4",
    "soil_raw_density*10": 17,
    "air_capacity": 4,
    "field_capacity": 31,
    "n_field_capacity": 11
   },
   {
    "soil_type": "Uls",
    "soil_raw_density*10": 11,
    "air_capacity": 27,
    "field_capacity": 31,
    "n_field_capacity": 20
   },
   {
    "soil_type": "Uls",
    "soil_raw_density*10": 13,
    "air_capacity": 21,
    "field_capacity": 30,
    "n_field_capacity": 19
   },
   {
    "soil_type": "Uls",
    "soil_raw_density*10": 15,
    "air_capacity": 14,
    "field_capacity": 29,
    "n_field_capacity": 18
   },
   {
    "soil_type": "Uls",
    "soil_raw_density*10": 17,
    "air_capacity": 9,
    "field_capacity": 27,
    "n_field_capacity": 16
   },
   {
    "soil_type": "Us",
    "soil_raw_density*10": 11,
    "air_capacity": 26,
    "field_capacity": 32,
    "n_field_capacity": 22
   },
   {
    "soil_type": "Us",
    "soil_raw_density*10": 13,
    "air_capacity": 20,
    "field_capacity": 31,
    "n_field_capacity": 21
   },
   {
    "soil_type": "Us",
    "soil_raw_density*10": 15,
    "air_capacity": 14,
    "field_capacity": 29,
    "n_field_capacity": 19
   },
   {
    "soil_type": "Us",
    "soil_raw_density*10": 17,
    "air_capacity": 9,
    "field_capacity": 27,
    "n_field_capacity": 17
   },
   {
    "soil_type": "Ut2",
    "soil_raw_density*10": 11,
    "air_capacity": 26,
    "field_capacity": 32,
    "n_field_capacity": 21
   },
   {
    "soil_type": "Ut2",
    "soil_raw_density*10": 13,
    "air_capacity": 20,
    "field_capacity": 31,
    "n_field_capacity": 20
   },
   {
    "soil_type": "Ut2",
    "soil_raw_density*10": 15,
    "air_capacity": 14,
    "field_capacity": 29,
    "n_field_capacity": 18
   },
   {
    "soil_type": "Ut2",
    "soil_raw_density*10": 17,
    "air_capacity": 8,
    "field_capacity": 28,
    "n_field_capacity": 17
   },
   {
    "soil_type": "Ut3",
    "soil_raw_density*10": 11,
    "air_capacity": 24,
    "field_capacity": 34,
    "n_field_capacity": 20
   },
   {
    "soil_type": "Ut3",
    "soil_raw_density*10": 13,
    "air_capacity": 19,
    "field_capacity": 33,
    "n_field_capacity": 19
   },
   {
    "soil_type": "Ut3",
    "soil_raw_density*10": 15,
    "air_capacity": 12,
    "field_capacity": 31,
    "n_field_capacity": 17
   },
   {
    "soil_type": "Ut3",
    "soil_raw_density*10": 17,
    "air_capacity": 6,
    "field_capacity": 30,
    "n_field_capacity": 16
   },
   {
    "soil_type": "Ut4",
    "soil_raw_density*10": 11,
    "air_capacity": 23,
    "field_capacity": 35,
    "n_field_capacity": 18
   },
   {
    "soil_type": "Ut4",
    "soil_raw_density*10": 13,
    "air_capacity": 17,
    "field_capacity": 34,
    "n_field_capacity": 17
   },
   {
    "soil_type": "Ut4",
    "soil_raw_density*10": 15,
    "air_capacity": 12,
    "field_capacity": 33,
    "n_field_capacity": 16
   },
   {
    "soil_type": "Ut4",
    "soil_raw_density*10": 17,
    "air_capacity": 4,
    "field_capacity": 31,
    "n_field_capacity": 14
   },
   {
    "soil_type": "Uu",
    "soil_raw_density*10": 11,
    "air_capacity": 22,
    "field_capacity": 36,
    "n_field_capacity": 25
   },
   {
    "soil_type": "Uu",
    "soil_raw_density*10": 13,
    "air_capacity": 17,
    "field_capacity": 34,
    "n_field_capacity": 23
   },
   {
    "soil_type": "Uu",
    "soil_raw_density*10": 15,
    "air_capacity": 11,
    "field_capacity": 32,
    "n_field_capacity": 21
   },
   {
    "soil_type": "Uu",
    "soil_raw_density*10": 17,
    "air_capacity": 6,
    "field_capacity": 30,
    "n_field_capacity": 19
   },
   {
    "soil_type": "fS",
    "soil_raw_density*10": 13,
    "air_capacity": 35,
    "field_capacity": 15,
    "n_field_capacity": 11
   },
   {
    "soil_type": "fS",
    "soil_raw_density*10": 15,
    "air_capacity": 28,
    "field_capacity": 15,
    "n_field_capacity": 11
   },
   {
    "soil_type": "fS",
    "soil_raw_density*10": 17,
    "air_capacity": 21,
    "field_capacity": 15,
    "n_field_capacity": 11
   },
   {
    "soil_type": "fSgs",
    "soil_raw_density*10": 13,
    "air_capacity": 35,
    "field_capacity": 15,
    "n_field_capacity": 11
   },
   {
    "soil_type": "fSgs",
    "soil_raw_density*10": 15,
    "air_capacity": 28,
    "field_capacity": 15,
    "n_field_capacity": 11
   },
   {
    "soil_type": "fSgs",
    "soil_raw_density*10": 17,
    "air_capacity": 21,
    "field_capacity": 15,
    "n_field_capacity": 11
   },
   {
    "soil_type": "fSms",
    "soil_raw_density*10": 13,
    "air_capacity": 35,
    "field_capacity": 15,
    "n_field_capacity": 11
   },
   {
    "soil_type": "fSms",
    "soil_raw_density*10": 15,
    "air_capacity": 28,
    "field_capacity": 15,
    "n_field_capacity": 11
   },
   {
    "soil_type": "fSms",
    "soil_raw_density*10": 17,
    "air_capacity": 21,
    "field_capacity": 15,
    "n_field_capacity": 11
   },
   {
    "soil_type": "gS",
    "soil_raw_density*10": 13,
    "air_capacity": 43,
    "field_capacity": 8,
    "n_field_capacity": 5
   },
   {
    "soil_type": "gS",
    "soil_raw_density*10": 15,
    "air_capacity": 35,
    "field_capacity": 8,
    "n_field_capacity": 5
   },
   {
    "soil_type": "gS",
    "soil_raw_density*10": 17,
    "air_capacity": 28,
    "field_capacity": 8,
    "n_field_capacity": 5
   },
   {
    "soil_type": "mS",
    "soil_raw_density*10": 13,
    "air_capacity": 38,
    "field_capacity": 12,
    "n_field_capacity": 9
   },
   {
    "soil_type": "mS",
    "soil_raw_density*10": 15,
    "air_capacity": 31,
    "field_capacity": 12,
    "n_field_capacity": 9
   },
   {
    "soil_type": "mS",
    "soil_raw_density*10": 17,
    "air_capacity": 24,
    "field_capacity": 12,
    "n_field_capacity": 9
   },
   {
    "soil_type": "mSfs",
    "soil_raw_density*10": 13,
    "air_capacity": 38,
    "field_capacity": 12,
    "n_field_capacity": 9
   },
   {
    "soil_type": "mSfs",
    "soil_raw_density*10": 15,
    "air_capacity": 31,
    "field_capacity": 12,
    "n_field_capacity": 9
   },
   {
    "soil_type": "mSfs",
    "soil_raw_density*10": 17,
    "air_capacity": 24,
    "field_capacity": 12,
    "n_field_capacity": 9
   },
   {
    "soil_type": "mSgs",
    "soil_raw_density*10": 13,
    "air_capacity": 38,
    "field_capacity": 12,
    "n_field_capacity": 9
   },
   {
    "soil_type": "mSgs",
    "soil_raw_density*10": 15,
    "air_capacity": 24,
    "field_capacity": 12,
    "n_field_capacity": 9
   },
   {
    "soil_type": "mSgs",
    "soil_raw_density*10": 17,
    "air_capacity": 31,
    "field_capacity": 12,
    "n_field_capacity": 9
   }
  ]
 },
 "dev_stage": {
  "columns": [
   "crop_id",
   "id",
   "name",
   "stage_temperature_sum",
   "base_temperature",
   "vernalisation_requirement",
   "day_length_requirement",
   "base_day_length",
   "drought_stress_threshold",
   "critical_oxygen_content",
   "specific_leaf_area",
   "stage_max_root_n_content",
   "stage_kc_factor",
   "stage_description",
   "BBCH_start",
   "BBCH_end",
   "Info",
   "opt_temperature"
  ],
  "rows": [
   {
    "crop_id": 1,
    "id": 1,
    "name": "wheat stage 1",
    "stage_temperature_sum": 148,
    "base_temperature": 0,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.4,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 1,
    "id": 2,
    "name": "wheat stage 2",
    "stage_temperature_sum": 284,
    "base_temperature": 1,
    "vernalisation_requirement": 50,
    "day_length_requirement": 20,
    "base_day_length": 0,
    "drought_stress_threshold": 0.9,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0018,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.7,
    "stage_description": "emergence to double ridge",
    "BBCH_start": 10,
    "BBCH_end": 25,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 1,
    "id": 3,
    "name": "wheat stage 3",
    "stage_temperature_sum": 380,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0017,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 1.1,
    "stage_description": "double ridge to flowering",
    "BBCH_start": 26,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 1,
    "id": 4,
    "name": "wheat stage 4",
    "stage_temperature_sum": 200,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0016,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "flowering to begin grain filling",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 1,
    "id": 5,
    "name": "wheat stage 5",
    "stage_temperature_sum": 420,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.9,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0015,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.8,
    "stage_description": "grain filling",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 1,
    "id": 6,
    "name": "wheat stage 6",
    "stage_temperature_sum": 25,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0015,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.25,
    "stage_description": "senescence",
    "BBCH_start": 80,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 2,
    "id": 1,
    "name": "winter barley stage 1",
    "stage_temperature_sum": 108,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.4,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 2,
    "id": 2,
    "name": "winter barley stage 2",
    "stage_temperature_sum": 284,
    "base_temperature": 1,
    "vernalisation_requirement": 33,
    "day_length_requirement": 20,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.04,
    "specific_leaf_area": 0.0019,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.7,
    "stage_description": "emergence to double ridge",
    "BBCH_start": 10,
    "BBCH_end": 25,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 2,
    "id": 3,
    "name": "winter barley stage 3",
    "stage_temperature_sum": 380,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.04,
    "specific_leaf_area": 0.0018,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 1.1,
    "stage_description": "double ridge to flowering",
    "BBCH_start": 26,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 2,
    "id": 4,
    "name": "winter barley stage 4",
    "stage_temperature_sum": 120,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 0.75,
    "critical_oxygen_content": 0.04,
    "specific_leaf_area": 0.0017,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "flowering to begin grain filling",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 2,
    "id": 5,
    "name": "winter barley stage 5",
    "stage_temperature_sum": 200,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.6,
    "critical_oxygen_content": 0.04,
    "specific_leaf_area": 0.0016,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.8,
    "stage_description": "grain filling",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 2,
    "id": 6,
    "name": "winter barley stage 6",
    "stage_temperature_sum": 25,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.5,
    "critical_oxygen_content": 0.04,
    "specific_leaf_area": 0.0016,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.25,
    "stage_description": "senescence",
    "BBCH_start": 80,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 3,
    "id": 1,
    "name": "rye stage 1",
    "stage_temperature_sum": 148,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.4,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 3,
    "id": 2,
    "name": "rye stage 2",
    "stage_temperature_sum": 284,
    "base_temperature": 1,
    "vernalisation_requirement": 50,
    "day_length_requirement": 20,
    "base_day_length": 0,
    "drought_stress_threshold": 0.7,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.7,
    "stage_description": "emergence to double ridge",
    "BBCH_start": 10,
    "BBCH_end": 25,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 3,
    "id": 3,
    "name": "rye stage 3",
    "stage_temperature_sum": 200,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 0.75,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 1.1,
    "stage_description": "double ridge to flowering",
    "BBCH_start": 26,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 3,
    "id": 4,
    "name": "rye stage 4",
    "stage_temperature_sum": 400,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 0.75,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "flowering to begin grain filling",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 3,
    "id": 5,
    "name": "rye stage 5",
    "stage_temperature_sum": 350,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.6,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.8,
    "stage_description": "grain filling",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 3,
    "id": 6,
    "name": "rye stage 6",
    "stage_temperature_sum": 25,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.5,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.25,
    "stage_description": "senescence",
    "BBCH_start": 80,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 4,
    "id": 1,
    "name": "spring barley stage 1",
    "stage_temperature_sum": 108,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.4,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 4,
    "id": 2,
    "name": "spring barley stage 2",
    "stage_temperature_sum": 284,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.04,
    "specific_leaf_area": 0.0019,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.6,
    "stage_description": "emergence to double ridge",
    "BBCH_start": 10,
    "BBCH_end": 25,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 4,
    "id": 3,
    "name": "spring barley stage 3",
    "stage_temperature_sum": 330,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.04,
    "specific_leaf_area": 0.0018,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 1,
    "stage_description": "double ridge to flowering",
    "BBCH_start": 26,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 4,
    "id": 4,
    "name": "spring barley stage 4",
    "stage_temperature_sum": 120,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.75,
    "critical_oxygen_content": 0.04,
    "specific_leaf_area": 0.0017,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1,
    "stage_description": "flowering to begin grain filling",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 4,
    "id": 5,
    "name": "spring barley stage 5",
    "stage_temperature_sum": 200,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.6,
    "critical_oxygen_content": 0.04,
    "specific_leaf_area": 0.0016,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.8,
    "stage_description": "grain filling",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 4,
    "id": 6,
    "name": "spring barley stage 6",
    "stage_temperature_sum": 25,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.5,
    "critical_oxygen_content": 0.04,
    "specific_leaf_area": 0.0016,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.25,
    "stage_description": "senescence",
    "BBCH_start": 80,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 10,
    "id": 1,
    "name": "sugar beet stage 1",
    "stage_temperature_sum": 100,
    "base_temperature": 3,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.03,
    "specific_leaf_area": 0.0009,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.4,
    "stage_description": "sowing to emergence",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 10,
    "id": 2,
    "name": "sugar beet stage 2",
    "stage_temperature_sum": 300,
    "base_temperature": 3,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.7,
    "critical_oxygen_content": 0.03,
    "specific_leaf_area": 0.001,
    "stage_max_root_n_content": 0.015,
    "stage_kc_factor": 0.8,
    "stage_description": "emergence to ten leaves",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 10,
    "id": 3,
    "name": "sugar beet stage 3",
    "stage_temperature_sum": 565,
    "base_temperature": 0,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.03,
    "specific_leaf_area": 0.001,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 1,
    "stage_description": "ten leaves to tuber growth",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 10,
    "id": 4,
    "name": "sugar beet stage 4",
    "stage_temperature_sum": 608,
    "base_temperature": 0,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.03,
    "specific_leaf_area": 0.0009,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.35,
    "stage_description": "tuber growth",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 10,
    "id": 5,
    "name": "sugar beet stage 5",
    "stage_temperature_sum": 1600,
    "base_temperature": 0,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.03,
    "specific_leaf_area": 0.0009,
    "stage_max_root_n_content": 0.009,
    "stage_kc_factor": 0.85,
    "stage_description": "until harvest size",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 10,
    "id": 6,
    "name": "sugar beet stage 6",
    "stage_temperature_sum": 25,
    "base_temperature": 0,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.7,
    "critical_oxygen_content": 0.03,
    "specific_leaf_area": 0.0009,
    "stage_max_root_n_content": 0.009,
    "stage_kc_factor": 0.4,
    "stage_description": "after harvest size",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 8,
    "id": 1,
    "name": "moderately early potato stage 1",
    "stage_temperature_sum": 148,
    "base_temperature": 3,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.2,
    "critical_oxygen_content": 0.03,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.4,
    "stage_description": "planting to emergence",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 8,
    "id": 2,
    "name": "moderately early potato stage 2",
    "stage_temperature_sum": 350,
    "base_temperature": 3,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.2,
    "critical_oxygen_content": 0.03,
    "specific_leaf_area": 0.0012,
    "stage_max_root_n_content": 0.015,
    "stage_kc_factor": 0.6,
    "stage_description": "emergence to total coverage",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 8,
    "id": 3,
    "name": "moderately early potato stage 3",
    "stage_temperature_sum": 200,
    "base_temperature": 0,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.03,
    "specific_leaf_area": 0.0007,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 1,
    "stage_description": "total coverage to tuber growth",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 8,
    "id": 4,
    "name": "moderately early potato stage 4",
    "stage_temperature_sum": 350,
    "base_temperature": 0,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.7,
    "critical_oxygen_content": 0.03,
    "specific_leaf_area": 0.0007,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "tuber growth",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 8,
    "id": 5,
    "name": "moderately early potato stage 5",
    "stage_temperature_sum": 800,
    "base_temperature": 0,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.7,
    "critical_oxygen_content": 0.03,
    "specific_leaf_area": 0.0007,
    "stage_max_root_n_content": 0.009,
    "stage_kc_factor": 0.85,
    "stage_description": "until harvest size",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 8,
    "id": 6,
    "name": "moderately early potato stage 6",
    "stage_temperature_sum": 25,
    "base_temperature": 0,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.7,
    "critical_oxygen_content": 0.03,
    "specific_leaf_area": 0.0007,
    "stage_max_root_n_content": 0.009,
    "stage_kc_factor": 0.4,
    "stage_description": "after harvest size",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 9,
    "id": 1,
    "name": "oilseed rape stage 1",
    "stage_temperature_sum": 130,
    "base_temperature": 0,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.6,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 9,
    "id": 2,
    "name": "oilseed rape stage 2",
    "stage_temperature_sum": 284,
    "base_temperature": 1,
    "vernalisation_requirement": 35,
    "day_length_requirement": 20,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 1.1,
    "stage_description": "emergence to double ridge",
    "BBCH_start": 10,
    "BBCH_end": 16,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 9,
    "id": 3,
    "name": "oilseed rape stage 3",
    "stage_temperature_sum": 160,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 1.3,
    "stage_description": "double ridge to flowering",
    "BBCH_start": 17,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 9,
    "id": 4,
    "name": "oilseed rape stage 4",
    "stage_temperature_sum": 160,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "flowering to begin seed ripening",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 9,
    "id": 5,
    "name": "oilseed rape stage 5",
    "stage_temperature_sum": 900,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.8,
    "stage_description": "seed ripening",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 9,
    "id": 6,
    "name": "oilseed rape stage 6",
    "stage_temperature_sum": 25,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.03,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.6,
    "stage_description": "senescence",
    "BBCH_start": 80,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 5,
    "id": 1,
    "name": "grain maize stage 1",
    "stage_temperature_sum": 68,
    "base_temperature": 7,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.5,
    "critical_oxygen_content": 0.04,
    "specific_leaf_area": 0.0025,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.4,
    "stage_description": "sowing to emergence",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 5,
    "id": 2,
    "name": "grain maize stage 2",
    "stage_temperature_sum": 284,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.5,
    "critical_oxygen_content": 0.02,
    "specific_leaf_area": 0.0017,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 1,
    "stage_description": "emergence to shooting",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 5,
    "id": 3,
    "name": "grain maize stage 3",
    "stage_temperature_sum": 190,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.5,
    "critical_oxygen_content": 0.02,
    "specific_leaf_area": 0.0015,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 1,
    "stage_description": "shooting to tasseling",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 5,
    "id": 4,
    "name": "grain maize stage 4",
    "stage_temperature_sum": 250,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.5,
    "critical_oxygen_content": 0.02,
    "specific_leaf_area": 0.0014,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.2,
    "stage_description": "tasseling to flowering",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 5,
    "id": 5,
    "name": "grain maize stage 5",
    "stage_temperature_sum": 200,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.6,
    "critical_oxygen_content": 0.02,
    "specific_leaf_area": 0.0012,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.25,
    "stage_description": "flowering to corn filling",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 5,
    "id": 6,
    "name": "grain maize stage 6",
    "stage_temperature_sum": 400,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.6,
    "critical_oxygen_content": 0.02,
    "specific_leaf_area": 0.0012,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.25,
    "stage_description": "corn filling",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 5,
    "id": 7,
    "name": "grain maize stage 7",
    "stage_temperature_sum": 25,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.2,
    "critical_oxygen_content": 0.04,
    "specific_leaf_area": 0.0012,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1,
    "stage_description": "senescence",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 11,
    "id": 1,
    "name": "mustard stage 1",
    "stage_temperature_sum": 40,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.6,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": "wie W.Raps",
    "opt_temperature": 30
   },
   {
    "crop_id": 11,
    "id": 2,
    "name": "mustard stage 2",
    "stage_temperature_sum": 284,
    "base_temperature": 1,
    "vernalisation_requirement": 50,
    "day_length_requirement": 20,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 1.1,
    "stage_description": "emergence to double ridge",
    "BBCH_start": 10,
    "BBCH_end": 16,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 11,
    "id": 3,
    "name": "mustard stage 3",
    "stage_temperature_sum": 200,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 1.3,
    "stage_description": "double ridge to flowering",
    "BBCH_start": 17,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 11,
    "id": 4,
    "name": "mustard stage 4",
    "stage_temperature_sum": 400,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "flowering to begin seed ripening",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 11,
    "id": 5,
    "name": "mustard stage 5",
    "stage_temperature_sum": 350,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.8,
    "stage_description": "seed ripening",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 11,
    "id": 6,
    "name": "mustard stage 6",
    "stage_temperature_sum": 25,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.03,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.6,
    "stage_description": "senescence",
    "BBCH_start": 80,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 12,
    "id": 1,
    "name": "phacelia stage 1",
    "stage_temperature_sum": 40,
    "base_temperature": 1,
    "vernalisation_requirement": 35,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.6,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": "vorläufig, nach allgemeiner BBCH-Skala",
    "opt_temperature": 30
   },
   {
    "crop_id": 12,
    "id": 2,
    "name": "phacelia stage 2",
    "stage_temperature_sum": 284,
    "base_temperature": 1,
    "vernalisation_requirement": 35,
    "day_length_requirement": 20,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.95,
    "stage_description": "emergence to double ridge",
    "BBCH_start": 10,
    "BBCH_end": 16,
    "Info": "wie Raps",
    "opt_temperature": 30
   },
   {
    "crop_id": 12,
    "id": 3,
    "name": "phacelia stage 3",
    "stage_temperature_sum": 200,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 1,
    "stage_description": "double ridge to flowering",
    "BBCH_start": 17,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 12,
    "id": 4,
    "name": "phacelia stage 4",
    "stage_temperature_sum": 400,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1,
    "stage_description": "flowering to begin seed ripening",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 12,
    "id": 5,
    "name": "phacelia stage 5",
    "stage_temperature_sum": 350,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1,
    "stage_description": "seed ripening",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 12,
    "id": 6,
    "name": "phacelia stage 6",
    "stage_temperature_sum": 25,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.8,
    "stage_description": "senescence",
    "BBCH_start": 80,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 13,
    "id": 1,
    "name": "clover grass ley stage 1",
    "stage_temperature_sum": 40,
    "base_temperature": 1,
    "vernalisation_requirement": 35,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.6,
    "stage_description": "sowing to emergence",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 13,
    "id": 2,
    "name": "clover grass ley stage 2",
    "stage_temperature_sum": 284,
    "base_temperature": 1,
    "vernalisation_requirement": 35,
    "day_length_requirement": 20,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.9,
    "stage_description": "emergence to double ridge",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 13,
    "id": 3,
    "name": "clover grass ley stage 3 original stage_temperature_sum = 200",
    "stage_temperature_sum": 200,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 0.93,
    "stage_description": "double ridge to flowering",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 13,
    "id": 4,
    "name": "clover grass ley stage 4",
    "stage_temperature_sum": 400,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.93,
    "stage_description": "flowering to begin seed ripening",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 13,
    "id": 5,
    "name": "clover grass ley stage 5",
    "stage_temperature_sum": 350,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.93,
    "stage_description": "seed ripening",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 13,
    "id": 6,
    "name": "clover grass ley stage 6",
    "stage_temperature_sum": 25,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.8,
    "stage_description": "senescence",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 27,
    "id": 1,
    "name": "grapevine stage 1",
    "stage_temperature_sum": 389,
    "base_temperature": 0,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0,
    "specific_leaf_area": 0.0012,
    "stage_max_root_n_content": 0.0155,
    "stage_kc_factor": 0.17,
    "stage_description": "dormance to bud burst",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": "",
    "opt_temperature": 30
   },
   {
    "crop_id": 27,
    "id": 2,
    "name": "grapevine stage 2",
    "stage_temperature_sum": 259,
    "base_temperature": 10,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.0168,
    "stage_kc_factor": 0.24,
    "stage_description": "bud burst to bloom",
    "BBCH_start": 10,
    "BBCH_end": 60,
    "Info": "",
    "opt_temperature": 30
   },
   {
    "crop_id": 27,
    "id": 3,
    "name": "grapevine stage 3",
    "stage_temperature_sum": 291,
    "base_temperature": 0,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0,
    "specific_leaf_area": 0.0018,
    "stage_max_root_n_content": 0.015,
    "stage_kc_factor": 0.33,
    "stage_description": "bloom to fruit setting",
    "BBCH_start": 61,
    "BBCH_end": 70,
    "Info": "",
    "opt_temperature": 30
   },
   {
    "crop_id": 27,
    "id": 4,
    "name": "grapevine stage 4",
    "stage_temperature_sum": 962,
    "base_temperature": 0,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0,
    "specific_leaf_area": 0.0016,
    "stage_max_root_n_content": 0.0142,
    "stage_kc_factor": 0.56,
    "stage_description": "fruit setting to veraison",
    "BBCH_start": 71,
    "BBCH_end": 84,
    "Info": "",
    "opt_temperature": 30
   },
   {
    "crop_id": 27,
    "id": 5,
    "name": "grapevine stage 5",
    "stage_temperature_sum": 792,
    "base_temperature": 0,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0,
    "specific_leaf_area": 0.0015,
    "stage_max_root_n_content": 0.0145,
    "stage_kc_factor": 0.62,
    "stage_description": "veraison to maturity",
    "BBCH_start": 85,
    "BBCH_end": 89,
    "Info": "",
    "opt_temperature": 30
   },
   {
    "crop_id": 27,
    "id": 6,
    "name": "grapevine stage 6",
    "stage_temperature_sum": 400,
    "base_temperature": 0,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0,
    "specific_leaf_area": 0.0014,
    "stage_max_root_n_content": 0.0155,
    "stage_kc_factor": 0.25,
    "stage_description": "senescence",
    "BBCH_start": 90,
    "BBCH_end": 97,
    "Info": "",
    "opt_temperature": 30
   },
   {
    "crop_id": 7,
    "id": 1,
    "name": "silage maize stage 1",
    "stage_temperature_sum": 68,
    "base_temperature": 7,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.5,
    "critical_oxygen_content": 0.04,
    "specific_leaf_area": 0.0025,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.4,
    "stage_description": "sowing to emergence",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 7,
    "id": 2,
    "name": "silage maize stage 2",
    "stage_temperature_sum": 284,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.5,
    "critical_oxygen_content": 0.02,
    "specific_leaf_area": 0.0017,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 1,
    "stage_description": "emergence to shooting",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 7,
    "id": 3,
    "name": "silage maize stage 3",
    "stage_temperature_sum": 190,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.5,
    "critical_oxygen_content": 0.02,
    "specific_leaf_area": 0.0015,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 1,
    "stage_description": "shooting to tasseling",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 7,
    "id": 4,
    "name": "silage maize stage 4",
    "stage_temperature_sum": 250,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.5,
    "critical_oxygen_content": 0.02,
    "specific_leaf_area": 0.0014,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.2,
    "stage_description": "tasseling to flowering",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 7,
    "id": 5,
    "name": "silage maize stage 5",
    "stage_temperature_sum": 200,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.6,
    "critical_oxygen_content": 0.02,
    "specific_leaf_area": 0.0012,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.25,
    "stage_description": "flowering to corn filling",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 7,
    "id": 6,
    "name": "silage maize stage 6",
    "stage_temperature_sum": 400,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.6,
    "critical_oxygen_content": 0.02,
    "specific_leaf_area": 0.0012,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.25,
    "stage_description": "corn filling",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 7,
    "id": 7,
    "name": "silage maize stage 7",
    "stage_temperature_sum": 25,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.2,
    "critical_oxygen_content": 0.04,
    "specific_leaf_area": 0.0012,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1,
    "stage_description": "senescence",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 6,
    "id": 1,
    "name": "grain maize Pioneer 30K75 stage 1",
    "stage_temperature_sum": 160,
    "base_temperature": 7,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.04,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.4,
    "stage_description": "sowing to emergence",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 6,
    "id": 2,
    "name": "grain maize Pioneer 30K75 stage 2",
    "stage_temperature_sum": 284,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.02,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 1,
    "stage_description": "emergence to shooting",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 6,
    "id": 3,
    "name": "grain maize Pioneer 30K75 stage 3",
    "stage_temperature_sum": 790,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.02,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 1,
    "stage_description": "shooting to tasseling",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 6,
    "id": 4,
    "name": "grain maize Pioneer 30K75 stage 4",
    "stage_temperature_sum": 200,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.02,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.2,
    "stage_description": "tasseling to flowering",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 6,
    "id": 5,
    "name": "grain maize Pioneer 30K75 stage 5",
    "stage_temperature_sum": 200,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.02,
    "specific_leaf_area": 0.0019,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.25,
    "stage_description": "flowering to corn filling",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 6,
    "id": 6,
    "name": "grain maize Pioneer 30K75 stage 6",
    "stage_temperature_sum": 670,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.02,
    "specific_leaf_area": 0.0018,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.25,
    "stage_description": "corn filling",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 6,
    "id": 7,
    "name": "grain maize Pioneer 30K75 stage 7",
    "stage_temperature_sum": 25,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.04,
    "specific_leaf_area": 0.0018,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1,
    "stage_description": "senescence",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 14,
    "id": 1,
    "name": "alfalfa stage 1",
    "stage_temperature_sum": 40,
    "base_temperature": 1,
    "vernalisation_requirement": 35,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.3,
    "stage_description": "sowing to emergence",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 14,
    "id": 2,
    "name": "alfalfa stage 2",
    "stage_temperature_sum": 284,
    "base_temperature": 1,
    "vernalisation_requirement": 35,
    "day_length_requirement": 20,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 1,
    "stage_description": "emergence to double ridge",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 14,
    "id": 3,
    "name": "alfalfa stage 3",
    "stage_temperature_sum": 200,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 1.1,
    "stage_description": "double ridge to flowering",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 14,
    "id": 4,
    "name": "alfalfa stage 4",
    "stage_temperature_sum": 400,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "flowering to begin seed ripening",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 14,
    "id": 5,
    "name": "alfalfa stage 5",
    "stage_temperature_sum": 350,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "seed ripening",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 14,
    "id": 6,
    "name": "alfalfa stage 6",
    "stage_temperature_sum": 25,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1,
    "stage_description": "senescence",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 15,
    "id": 1,
    "name": "alfalfa - clover grass ley stage 1",
    "stage_temperature_sum": 40,
    "base_temperature": 1,
    "vernalisation_requirement": 35,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.2023,
    "stage_description": "sowing to emergence",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 15,
    "id": 2,
    "name": "alfalfa - clover grass ley stage 2",
    "stage_temperature_sum": 284,
    "base_temperature": 1,
    "vernalisation_requirement": 35,
    "day_length_requirement": 20,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.9223,
    "stage_description": "emergence to double ridge",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 15,
    "id": 3,
    "name": "alfalfa - clover grass ley stage 3",
    "stage_temperature_sum": 200.6,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 1.3,
    "stage_description": "double ridge to flowering",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 15,
    "id": 4,
    "name": "alfalfa - clover grass ley stage 4",
    "stage_temperature_sum": 400.1,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.185,
    "stage_description": "flowering to begin seed ripening",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 15,
    "id": 5,
    "name": "alfalfa - clover grass ley stage 5",
    "stage_temperature_sum": 350,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.3,
    "stage_description": "seed ripening",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 15,
    "id": 6,
    "name": "alfalfa - clover grass ley stage 6",
    "stage_temperature_sum": 24.8,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.118,
    "stage_description": "senescence",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 28,
    "id": 1,
    "name": "soybean 000 stage 1",
    "stage_temperature_sum": 148,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0035,
    "stage_max_root_n_content": 0.0155,
    "stage_kc_factor": 0.4,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 28,
    "id": 2,
    "name": "soybean 000 stage 2",
    "stage_temperature_sum": 50,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": -12.33,
    "base_day_length": -15.455,
    "drought_stress_threshold": 0.9,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.003,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 0.7,
    "stage_description": "emergence to end of juvenile phase",
    "BBCH_start": 10,
    "BBCH_end": 25,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 28,
    "id": 3,
    "name": "soybean 000 stage 3",
    "stage_temperature_sum": 680,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -12.33,
    "base_day_length": -15.455,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0025,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "end of juvenile phase to flower appearance",
    "BBCH_start": 26,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 28,
    "id": 4,
    "name": "soybean 000 stage 4",
    "stage_temperature_sum": 430,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -11.83,
    "base_day_length": -14.955,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "flower appearance to first pod ",
    "BBCH_start": 59,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 28,
    "id": 5,
    "name": "soybean 000 stage 5",
    "stage_temperature_sum": 500,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -11.83,
    "base_day_length": -14.955,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "first pod to last pod",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 28,
    "id": 6,
    "name": "soybean 000 stage 6",
    "stage_temperature_sum": 970,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": -11.83,
    "base_day_length": -14.955,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.9,
    "stage_description": "last pod to harvest maturity",
    "BBCH_start": 80,
    "BBCH_end": 89,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 28,
    "id": 7,
    "name": "soybean 000 stage 7",
    "stage_temperature_sum": 25,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.4,
    "stage_description": "senescence",
    "BBCH_start": 90,
    "BBCH_end": 97,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 29,
    "id": 1,
    "name": "soybean 00 stage 1",
    "stage_temperature_sum": 148,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0035,
    "stage_max_root_n_content": 0.0155,
    "stage_kc_factor": 0.4,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 29,
    "id": 2,
    "name": "soybean 00 stage 2",
    "stage_temperature_sum": 50,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": 0,
    "drought_stress_threshold": 0.9,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.003,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 0.7,
    "stage_description": "emergence to end of juvenile phase",
    "BBCH_start": 10,
    "BBCH_end": 25,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 29,
    "id": 3,
    "name": "soybean 00 stage 3",
    "stage_temperature_sum": 630,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0025,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "end of juvenile phase to flower appearance",
    "BBCH_start": 26,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 29,
    "id": 4,
    "name": "soybean 00 stage 4",
    "stage_temperature_sum": 430,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "flower appearance to first pod",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 29,
    "id": 5,
    "name": "soybean 00 stage 5",
    "stage_temperature_sum": 500,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "first pod to last pod",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 29,
    "id": 6,
    "name": "soybean 00 stage 6",
    "stage_temperature_sum": 970,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.9,
    "stage_description": "last pod to harvest maturity",
    "BBCH_start": 80,
    "BBCH_end": 89,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 29,
    "id": 7,
    "name": "soybean 00 stage 7",
    "stage_temperature_sum": 25,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.4,
    "stage_description": "senescence",
    "BBCH_start": 90,
    "BBCH_end": 97,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 30,
    "id": 1,
    "name": "soybean 0 stage 1",
    "stage_temperature_sum": 320,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0035,
    "stage_max_root_n_content": 0.0155,
    "stage_kc_factor": 0.4,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 30,
    "id": 2,
    "name": "soybean 0 stage 2",
    "stage_temperature_sum": 50,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": 0,
    "drought_stress_threshold": 0.9,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.003,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 0.7,
    "stage_description": "emergence to end of juvenile phase",
    "BBCH_start": 10,
    "BBCH_end": 25,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 30,
    "id": 3,
    "name": "soybean 0 stage 3",
    "stage_temperature_sum": 100,
    "base_temperature": 5,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0025,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "end of juvenile phase to flower appearance",
    "BBCH_start": 26,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 30,
    "id": 4,
    "name": "soybean 0 stage 4",
    "stage_temperature_sum": 250,
    "base_temperature": 5,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "flower appearance to first pod",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 30,
    "id": 5,
    "name": "soybean 0 stage 5",
    "stage_temperature_sum": 400,
    "base_temperature": 5,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "first pod to last pod",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 30,
    "id": 6,
    "name": "soybean 0 stage 6",
    "stage_temperature_sum": 1300,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.9,
    "stage_description": "last pod to harvest maturity",
    "BBCH_start": 80,
    "BBCH_end": 89,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 30,
    "id": 7,
    "name": "soybean 0 stage 7",
    "stage_temperature_sum": 325,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.1,
    "stage_kc_factor": 0.4,
    "stage_description": "senescence",
    "BBCH_start": 90,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 31,
    "id": 1,
    "name": "soybean I stage 1",
    "stage_temperature_sum": 148,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0035,
    "stage_max_root_n_content": 0.0155,
    "stage_kc_factor": 0.4,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 31,
    "id": 2,
    "name": "soybean I stage 2",
    "stage_temperature_sum": 50,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": 0,
    "drought_stress_threshold": 0.9,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.003,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 0.7,
    "stage_description": "emergence to end of juvenile phase",
    "BBCH_start": 10,
    "BBCH_end": 25,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 31,
    "id": 3,
    "name": "soybean I stage 3",
    "stage_temperature_sum": 630,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0025,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "end of juvenile phase to flower appearance",
    "BBCH_start": 26,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 31,
    "id": 4,
    "name": "soybean I stage 4",
    "stage_temperature_sum": 430,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "flower appearance to first pod",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 31,
    "id": 5,
    "name": "soybean I stage 5",
    "stage_temperature_sum": 500,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "first pod to last pod",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 31,
    "id": 6,
    "name": "soybean I stage 6",
    "stage_temperature_sum": 970,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.9,
    "stage_description": "last pod to harvest maturity",
    "BBCH_start": 80,
    "BBCH_end": 89,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 31,
    "id": 7,
    "name": "soybean I stage 7",
    "stage_temperature_sum": 25,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.1,
    "stage_kc_factor": 0.4,
    "stage_description": "senescence",
    "BBCH_start": 90,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 32,
    "id": 1,
    "name": "soybean II stage 1",
    "stage_temperature_sum": 148,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0035,
    "stage_max_root_n_content": 0.0155,
    "stage_kc_factor": 0.4,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 32,
    "id": 2,
    "name": "soybean II stage 2",
    "stage_temperature_sum": 50,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": 0,
    "drought_stress_threshold": 0.9,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.003,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 0.7,
    "stage_description": "emergence to end of juvenile phase",
    "BBCH_start": 10,
    "BBCH_end": 25,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 32,
    "id": 3,
    "name": "soybean II stage 3",
    "stage_temperature_sum": 630,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0025,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "end of juvenile phase to flower appearance",
    "BBCH_start": 26,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 32,
    "id": 4,
    "name": "soybean II stage 4",
    "stage_temperature_sum": 430,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "flower appearance to first pod",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 32,
    "id": 5,
    "name": "soybean II stage 5",
    "stage_temperature_sum": 500,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "first pod to last pod",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 32,
    "id": 6,
    "name": "soybean II stage 6",
    "stage_temperature_sum": 970,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.9,
    "stage_description": "last pod to harvest maturity",
    "BBCH_start": 80,
    "BBCH_end": 89,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 32,
    "id": 7,
    "name": "soybean II stage 7",
    "stage_temperature_sum": 25,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.1,
    "stage_kc_factor": 0.4,
    "stage_description": "senescence",
    "BBCH_start": 90,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 33,
    "id": 1,
    "name": "soybean III stage 1",
    "stage_temperature_sum": 148,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0035,
    "stage_max_root_n_content": 0.0155,
    "stage_kc_factor": 0.4,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 33,
    "id": 2,
    "name": "soybean III stage 2",
    "stage_temperature_sum": 50,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": 0,
    "drought_stress_threshold": 0.9,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.003,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 0.7,
    "stage_description": "emergence to end of juvenile phase",
    "BBCH_start": 10,
    "BBCH_end": 25,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 33,
    "id": 3,
    "name": "soybean III stage 3",
    "stage_temperature_sum": 630,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0025,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "end of juvenile phase to flower appearance",
    "BBCH_start": 26,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 33,
    "id": 4,
    "name": "soybean III stage 4",
    "stage_temperature_sum": 430,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "flower appearance to first pod",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 33,
    "id": 5,
    "name": "soybean III stage 5",
    "stage_temperature_sum": 500,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "first pod to last pod",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 33,
    "id": 6,
    "name": "soybean III stage 6",
    "stage_temperature_sum": 970,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.9,
    "stage_description": "last pod to harvest maturity",
    "BBCH_start": 80,
    "BBCH_end": 89,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 33,
    "id": 7,
    "name": "soybean III stage 7",
    "stage_temperature_sum": 25,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.1,
    "stage_kc_factor": 0.4,
    "stage_description": "senescence",
    "BBCH_start": 90,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 34,
    "id": 1,
    "name": "soybean IV stage 1",
    "stage_temperature_sum": 148,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0035,
    "stage_max_root_n_content": 0.0155,
    "stage_kc_factor": 0.4,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 34,
    "id": 2,
    "name": "soybean IV stage 2",
    "stage_temperature_sum": 50,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": 0,
    "drought_stress_threshold": 0.9,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.003,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 0.7,
    "stage_description": "emergence to end of juvenile phase",
    "BBCH_start": 10,
    "BBCH_end": 25,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 34,
    "id": 3,
    "name": "soybean IV stage 3",
    "stage_temperature_sum": 630,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0025,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "end of juvenile phase to flower appearance",
    "BBCH_start": 26,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 34,
    "id": 4,
    "name": "soybean IV stage 4",
    "stage_temperature_sum": 430,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "flower appearance to first pod",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 34,
    "id": 5,
    "name": "soybean IV stage 5",
    "stage_temperature_sum": 500,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "first pod to last pod",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 34,
    "id": 6,
    "name": "soybean IV stage 6",
    "stage_temperature_sum": 970,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.9,
    "stage_description": "last pod to harvest maturity",
    "BBCH_start": 80,
    "BBCH_end": 89,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 34,
    "id": 7,
    "name": "soybean IV stage 7",
    "stage_temperature_sum": 25,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.1,
    "stage_kc_factor": 0.4,
    "stage_description": "senescence",
    "BBCH_start": 90,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 35,
    "id": 1,
    "name": "soybean V stage 1",
    "stage_temperature_sum": 148,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0035,
    "stage_max_root_n_content": 0.0155,
    "stage_kc_factor": 0.4,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 35,
    "id": 2,
    "name": "soybean V stage 2",
    "stage_temperature_sum": 50,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": 0,
    "drought_stress_threshold": 0.9,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.003,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 0.7,
    "stage_description": "emergence to end of juvenile phase",
    "BBCH_start": 10,
    "BBCH_end": 25,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 35,
    "id": 3,
    "name": "soybean V stage 3",
    "stage_temperature_sum": 630,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0025,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "end of juvenile phase to flower appearance",
    "BBCH_start": 26,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 35,
    "id": 4,
    "name": "soybean V stage 4",
    "stage_temperature_sum": 430,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "flower appearance to first pod",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 35,
    "id": 5,
    "name": "soybean V stage 5",
    "stage_temperature_sum": 500,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "first pod to last pod",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 35,
    "id": 6,
    "name": "soybean V stage 6",
    "stage_temperature_sum": 970,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.9,
    "stage_description": "last pod to harvest maturity",
    "BBCH_start": 80,
    "BBCH_end": 89,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 35,
    "id": 7,
    "name": "soybean V stage 7",
    "stage_temperature_sum": 25,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.1,
    "stage_kc_factor": 0.4,
    "stage_description": "senescence",
    "BBCH_start": 90,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 36,
    "id": 1,
    "name": "soybean VI stage 1",
    "stage_temperature_sum": 148,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0035,
    "stage_max_root_n_content": 0.0155,
    "stage_kc_factor": 0.4,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 36,
    "id": 2,
    "name": "soybean VI stage 2",
    "stage_temperature_sum": 50,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": 0,
    "drought_stress_threshold": 0.9,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.003,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 0.7,
    "stage_description": "emergence to end of juvenile phase",
    "BBCH_start": 10,
    "BBCH_end": 25,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 36,
    "id": 3,
    "name": "soybean VI stage 3",
    "stage_temperature_sum": 630,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0028,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "end of juvenile phase to flower appearance",
    "BBCH_start": 26,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 36,
    "id": 4,
    "name": "soybean VI stage 4",
    "stage_temperature_sum": 430,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0026,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "flower appearance to first pod",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 36,
    "id": 5,
    "name": "soybean VI stage 5",
    "stage_temperature_sum": 500,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0025,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "first pod to last pod",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 36,
    "id": 6,
    "name": "soybean VI stage 6",
    "stage_temperature_sum": 970,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0025,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.9,
    "stage_description": "last pod to harvest maturity",
    "BBCH_start": 80,
    "BBCH_end": 89,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 36,
    "id": 7,
    "name": "soybean VI stage 7",
    "stage_temperature_sum": 25,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0025,
    "stage_max_root_n_content": 0.1,
    "stage_kc_factor": 0.4,
    "stage_description": "senescence",
    "BBCH_start": 90,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 37,
    "id": 1,
    "name": "soybean VII stage 1",
    "stage_temperature_sum": 148,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0035,
    "stage_max_root_n_content": 0.0155,
    "stage_kc_factor": 0.7,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 37,
    "id": 2,
    "name": "soybean VII stage 2",
    "stage_temperature_sum": 50,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.003,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 0.9,
    "stage_description": "emergence to end of juvenile phase",
    "BBCH_start": 10,
    "BBCH_end": 25,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 37,
    "id": 3,
    "name": "soybean VII stage 3",
    "stage_temperature_sum": 630,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0025,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "end of juvenile phase to flower appearance",
    "BBCH_start": 26,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 37,
    "id": 4,
    "name": "soybean VII stage 4",
    "stage_temperature_sum": 430,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "flower appearance to first pod",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 37,
    "id": 5,
    "name": "soybean VII stage 5",
    "stage_temperature_sum": 500,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "first pod to last pod",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 37,
    "id": 6,
    "name": "soybean VII stage 6",
    "stage_temperature_sum": 970,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.9,
    "stage_description": "last pod to harvest maturity",
    "BBCH_start": 80,
    "BBCH_end": 89,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 37,
    "id": 7,
    "name": "soybean VII stage 7",
    "stage_temperature_sum": 25,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.1,
    "stage_kc_factor": 0.4,
    "stage_description": "senescence",
    "BBCH_start": 90,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 38,
    "id": 1,
    "name": "soybean VIII stage 1",
    "stage_temperature_sum": 148,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0035,
    "stage_max_root_n_content": 0.0155,
    "stage_kc_factor": 0.4,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 38,
    "id": 2,
    "name": "soybean VIII stage 2",
    "stage_temperature_sum": 50,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": 0,
    "drought_stress_threshold": 0.9,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.003,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 0.7,
    "stage_description": "emergence to end of juvenile phase",
    "BBCH_start": 10,
    "BBCH_end": 25,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 38,
    "id": 3,
    "name": "soybean VIII stage 3",
    "stage_temperature_sum": 630,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0025,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "end of juvenile phase to flower appearance",
    "BBCH_start": 26,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 38,
    "id": 4,
    "name": "soybean VIII stage 4",
    "stage_temperature_sum": 430,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "flower appearance to first pod",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 38,
    "id": 5,
    "name": "soybean VIII stage 5",
    "stage_temperature_sum": 500,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "first pod to last pod",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 38,
    "id": 6,
    "name": "soybean VIII stage 6",
    "stage_temperature_sum": 970,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.9,
    "stage_description": "last pod to harvest maturity",
    "BBCH_start": 80,
    "BBCH_end": 89,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 38,
    "id": 7,
    "name": "soybean VIII stage 7",
    "stage_temperature_sum": 25,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.1,
    "stage_kc_factor": 0.4,
    "stage_description": "senescence",
    "BBCH_start": 90,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 39,
    "id": 1,
    "name": "soybean IX stage 1",
    "stage_temperature_sum": 148,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0035,
    "stage_max_root_n_content": 0.0155,
    "stage_kc_factor": 0.4,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 39,
    "id": 2,
    "name": "soybean IX stage 2",
    "stage_temperature_sum": 50,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": 0,
    "drought_stress_threshold": 0.9,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.003,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 0.7,
    "stage_description": "emergence to end of juvenile phase",
    "BBCH_start": 10,
    "BBCH_end": 25,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 39,
    "id": 3,
    "name": "soybean IX stage 3",
    "stage_temperature_sum": 630,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0025,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "end of juvenile phase to flower appearance",
    "BBCH_start": 26,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 39,
    "id": 4,
    "name": "soybean IX stage 4",
    "stage_temperature_sum": 430,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "flower appearance to first pod",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 39,
    "id": 5,
    "name": "soybean IX stage 5",
    "stage_temperature_sum": 500,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "first pod to last pod",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 39,
    "id": 6,
    "name": "soybean IX stage 6",
    "stage_temperature_sum": 970,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.9,
    "stage_description": "last pod to harvest maturity",
    "BBCH_start": 80,
    "BBCH_end": 89,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 39,
    "id": 7,
    "name": "soybean IX stage 7",
    "stage_temperature_sum": 25,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.1,
    "stage_kc_factor": 0.4,
    "stage_description": "senescence",
    "BBCH_start": 90,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 40,
    "id": 1,
    "name": "soybean X stage 1",
    "stage_temperature_sum": 148,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0035,
    "stage_max_root_n_content": 0.0155,
    "stage_kc_factor": 0.4,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 40,
    "id": 2,
    "name": "soybean X stage 2",
    "stage_temperature_sum": 50,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": 0,
    "drought_stress_threshold": 0.9,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.003,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 0.7,
    "stage_description": "emergence to end of juvenile phase",
    "BBCH_start": 10,
    "BBCH_end": 25,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 40,
    "id": 3,
    "name": "soybean X stage 3",
    "stage_temperature_sum": 630,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0025,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "end of juvenile phase to flower appearance",
    "BBCH_start": 26,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 40,
    "id": 4,
    "name": "soybean X stage 4",
    "stage_temperature_sum": 430,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "flower appearance to first pod",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 40,
    "id": 5,
    "name": "soybean X stage 5",
    "stage_temperature_sum": 500,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "first pod to last pod",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 40,
    "id": 6,
    "name": "soybean X stage 6",
    "stage_temperature_sum": 970,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.9,
    "stage_description": "last pod to harvest maturity",
    "BBCH_start": 80,
    "BBCH_end": 89,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 40,
    "id": 7,
    "name": "soybean X stage 7",
    "stage_temperature_sum": 25,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.1,
    "stage_kc_factor": 0.4,
    "stage_description": "senescence",
    "BBCH_start": 90,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 41,
    "id": 1,
    "name": "soybean XI stage 1",
    "stage_temperature_sum": 148,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0035,
    "stage_max_root_n_content": 0.0155,
    "stage_kc_factor": 0.4,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 41,
    "id": 2,
    "name": "soybean XI stage 2",
    "stage_temperature_sum": 50,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": 0,
    "drought_stress_threshold": 0.9,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.003,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 0.7,
    "stage_description": "emergence to end of juvenile phase",
    "BBCH_start": 10,
    "BBCH_end": 25,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 41,
    "id": 3,
    "name": "soybean XI stage 3",
    "stage_temperature_sum": 630,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0025,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "end of juvenile phase to flower appearance",
    "BBCH_start": 26,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 41,
    "id": 4,
    "name": "soybean XI stage 4",
    "stage_temperature_sum": 430,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "flower appearance to first pod",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 41,
    "id": 5,
    "name": "soybean XI stage 5",
    "stage_temperature_sum": 500,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "first pod to last pod",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 41,
    "id": 6,
    "name": "soybean XI stage 6",
    "stage_temperature_sum": 970,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.9,
    "stage_description": "last pod to harvest maturity",
    "BBCH_start": 80,
    "BBCH_end": 89,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 41,
    "id": 7,
    "name": "soybean XI stage 7",
    "stage_temperature_sum": 25,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.1,
    "stage_kc_factor": 0.4,
    "stage_description": "senescence",
    "BBCH_start": 90,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 42,
    "id": 1,
    "name": "soybean XII stage 1",
    "stage_temperature_sum": 148,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0035,
    "stage_max_root_n_content": 0.0155,
    "stage_kc_factor": 0.4,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 42,
    "id": 2,
    "name": "soybean XII stage 2",
    "stage_temperature_sum": 50,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": 0,
    "drought_stress_threshold": 0.9,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.003,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 0.7,
    "stage_description": "emergence to end of juvenile phase",
    "BBCH_start": 10,
    "BBCH_end": 25,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 42,
    "id": 3,
    "name": "soybean XII stage 3",
    "stage_temperature_sum": 630,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0025,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "end of juvenile phase to flower appearance",
    "BBCH_start": 26,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 42,
    "id": 4,
    "name": "soybean XII stage 4",
    "stage_temperature_sum": 430,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "flower appearance to first pod",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 42,
    "id": 5,
    "name": "soybean XII stage 5",
    "stage_temperature_sum": 500,
    "base_temperature": 6,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "first pod to last pod",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 42,
    "id": 6,
    "name": "soybean XII stage 6",
    "stage_temperature_sum": 970,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.9,
    "stage_description": "last pod to harvest maturity",
    "BBCH_start": 80,
    "BBCH_end": 89,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 42,
    "id": 7,
    "name": "soybean XII stage 7",
    "stage_temperature_sum": 25,
    "base_temperature": -15,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.1,
    "stage_kc_factor": 0.4,
    "stage_description": "senescence",
    "BBCH_start": 90,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 18,
    "id": 1,
    "name": "sudan gras stage 1",
    "stage_temperature_sum": 51,
    "base_temperature": 12,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0,
    "critical_oxygen_content": 0.04,
    "specific_leaf_area": 0.0025,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.3,
    "stage_description": "sowing to emergence",
    "BBCH_start": 1,
    "BBCH_end": 9,
    "Info": "BBCH wie Getreide",
    "opt_temperature": 30
   },
   {
    "crop_id": 18,
    "id": 2,
    "name": "sudan gras stage 2",
    "stage_temperature_sum": 213.6,
    "base_temperature": 12,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0,
    "critical_oxygen_content": 0.02,
    "specific_leaf_area": 0.0017,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.8,
    "stage_description": "emergence to shooting",
    "BBCH_start": 10,
    "BBCH_end": 29,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 18,
    "id": 3,
    "name": "sudan gras stage 3",
    "stage_temperature_sum": 130,
    "base_temperature": 10,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0,
    "critical_oxygen_content": 0.02,
    "specific_leaf_area": 0.0015,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 0.8,
    "stage_description": "shooting to tasseling",
    "BBCH_start": 30,
    "BBCH_end": 49,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 18,
    "id": 4,
    "name": "sudan gras stage 4",
    "stage_temperature_sum": 108,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0,
    "critical_oxygen_content": 0.02,
    "specific_leaf_area": 0.0014,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.97,
    "stage_description": "tasseling to flowering",
    "BBCH_start": 50,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 18,
    "id": 5,
    "name": "sudan gras stage 5",
    "stage_temperature_sum": 222.5,
    "base_temperature": 8,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0,
    "critical_oxygen_content": 0.02,
    "specific_leaf_area": 0.0012,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.97,
    "stage_description": "flowering to corn filling",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 18,
    "id": 6,
    "name": "sudan gras stage 6",
    "stage_temperature_sum": 115.5,
    "base_temperature": 7,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0,
    "critical_oxygen_content": 0.02,
    "specific_leaf_area": 0.0012,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.9,
    "stage_description": "corn filling",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 18,
    "id": 7,
    "name": "sudan gras stage 7",
    "stage_temperature_sum": 25,
    "base_temperature": 7,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0,
    "critical_oxygen_content": 0.04,
    "specific_leaf_area": 0.0012,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.8,
    "stage_description": "senescence",
    "BBCH_start": 80,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 19,
    "id": 1,
    "name": "winter triticale stage 1",
    "stage_temperature_sum": 300,
    "base_temperature": 0,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.04,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 19,
    "id": 2,
    "name": "winter triticale stage 2",
    "stage_temperature_sum": 650,
    "base_temperature": 1,
    "vernalisation_requirement": 50,
    "day_length_requirement": 20,
    "base_day_length": 0,
    "drought_stress_threshold": 0.7,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0018,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.7,
    "stage_description": "emergence to double ridge",
    "BBCH_start": 10,
    "BBCH_end": 25,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 19,
    "id": 3,
    "name": "winter triticale stage 3",
    "stage_temperature_sum": 200,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 0.75,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0017,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 1,
    "stage_description": "double ridge to flowering",
    "BBCH_start": 26,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 19,
    "id": 4,
    "name": "winter triticale stage 4",
    "stage_temperature_sum": 250,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 7,
    "drought_stress_threshold": 0.75,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0016,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "flowering to begin grain filling",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 19,
    "id": 5,
    "name": "winter triticale stage 5",
    "stage_temperature_sum": 300,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.6,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0015,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.8,
    "stage_description": "grain filling",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 19,
    "id": 6,
    "name": "winter triticale stage 6",
    "stage_temperature_sum": 25,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.5,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0015,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.25,
    "stage_description": "senescence",
    "BBCH_start": 80,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 16,
    "id": 1,
    "name": "rye grass stage 1",
    "stage_temperature_sum": 10,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.6,
    "stage_description": "sowing to emergence",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 16,
    "id": 2,
    "name": "rye grass stage 2",
    "stage_temperature_sum": 281.5,
    "base_temperature": 2,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.9,
    "stage_description": "emergence to double ridge",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 16,
    "id": 3,
    "name": "rye grass stage 3",
    "stage_temperature_sum": 340,
    "base_temperature": 4,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 7,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 0.93,
    "stage_description": "double ridge to flowering",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 16,
    "id": 4,
    "name": "rye grass stage 4",
    "stage_temperature_sum": 400,
    "base_temperature": 4,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 7,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.93,
    "stage_description": "flowering to begin seed ripening",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 16,
    "id": 5,
    "name": "rye grass stage 5",
    "stage_temperature_sum": 350,
    "base_temperature": 4,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.93,
    "stage_description": "seed ripening",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 16,
    "id": 6,
    "name": "rye grass stage 6",
    "stage_temperature_sum": 25,
    "base_temperature": 4,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.8,
    "stage_description": "senescence",
    "BBCH_start": null,
    "BBCH_end": null,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 17,
    "id": 1,
    "name": "oil raddish stage 1",
    "stage_temperature_sum": 148,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.3,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": "wie W.Raps",
    "opt_temperature": 30
   },
   {
    "crop_id": 17,
    "id": 2,
    "name": "oil raddish stage 2",
    "stage_temperature_sum": 150,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.7,
    "stage_description": "emergence to double ridge",
    "BBCH_start": 10,
    "BBCH_end": 16,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 17,
    "id": 3,
    "name": "oil raddish stage 3",
    "stage_temperature_sum": 200,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 0.9,
    "stage_description": "double ridge to flowering",
    "BBCH_start": 17,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 17,
    "id": 4,
    "name": "oil raddish stage 4",
    "stage_temperature_sum": 200,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.99,
    "stage_description": "flowering to begin seed ripening",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 17,
    "id": 5,
    "name": "oil raddish stage 5",
    "stage_temperature_sum": 325,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.6,
    "stage_description": "seed ripening",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 17,
    "id": 6,
    "name": "oil raddish stage 6",
    "stage_temperature_sum": 25,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.03,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.6,
    "stage_description": "senescence",
    "BBCH_start": 80,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 20,
    "id": 1,
    "name": "spring rye stage 1",
    "stage_temperature_sum": 148,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.4,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 20,
    "id": 2,
    "name": "spring rye stage 2",
    "stage_temperature_sum": 284,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 0,
    "drought_stress_threshold": 0.3,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.7,
    "stage_description": "emergence to double ridge",
    "BBCH_start": 10,
    "BBCH_end": 16,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 20,
    "id": 3,
    "name": "spring rye stage 3",
    "stage_temperature_sum": 200,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 0.3,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 1.1,
    "stage_description": "double ridge to flowering",
    "BBCH_start": 17,
    "BBCH_end": 60,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 20,
    "id": 4,
    "name": "spring rye stage 4",
    "stage_temperature_sum": 400,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 0.3,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "flowering to begin grain filling",
    "BBCH_start": 61,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 20,
    "id": 5,
    "name": "spring rye stage 5",
    "stage_temperature_sum": 350,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.3,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.8,
    "stage_description": "grain filling",
    "BBCH_start": 70,
    "BBCH_end": 89,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 20,
    "id": 6,
    "name": "spring rye stage 6",
    "stage_temperature_sum": 25,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.3,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.25,
    "stage_description": "senescence",
    "BBCH_start": 90,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 21,
    "id": 1,
    "name": "sorghum stage 1",
    "stage_temperature_sum": 89.9,
    "base_temperature": 12,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0,
    "critical_oxygen_content": 0.04,
    "specific_leaf_area": 0.0025,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.2,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": "wie Sudangras, BBCH wie Geteide",
    "opt_temperature": 30
   },
   {
    "crop_id": 21,
    "id": 2,
    "name": "sorghum stage 2",
    "stage_temperature_sum": 250.2,
    "base_temperature": 12,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0,
    "critical_oxygen_content": 0.02,
    "specific_leaf_area": 0.0017,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.8,
    "stage_description": "emergence to shooting",
    "BBCH_start": 10,
    "BBCH_end": 29,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 21,
    "id": 3,
    "name": "sorghum stage 3",
    "stage_temperature_sum": 299.5,
    "base_temperature": 10,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0,
    "critical_oxygen_content": 0.02,
    "specific_leaf_area": 0.0015,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 1,
    "stage_description": "shooting to tasseling",
    "BBCH_start": 30,
    "BBCH_end": 49,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 21,
    "id": 4,
    "name": "sorghum stage 4",
    "stage_temperature_sum": 400,
    "base_temperature": 12,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0,
    "critical_oxygen_content": 0.02,
    "specific_leaf_area": 0.0014,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.9,
    "stage_description": "tasseling to flowering",
    "BBCH_start": 50,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 21,
    "id": 5,
    "name": "sorghum stage 5",
    "stage_temperature_sum": 200,
    "base_temperature": 12,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0,
    "critical_oxygen_content": 0.02,
    "specific_leaf_area": 0.0012,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.25,
    "stage_description": "flowering to corn filling",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 21,
    "id": 6,
    "name": "sorghum stage 6",
    "stage_temperature_sum": 300,
    "base_temperature": 12,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0,
    "critical_oxygen_content": 0.02,
    "specific_leaf_area": 0.0012,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.9,
    "stage_description": "corn filling",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 21,
    "id": 7,
    "name": "sorghum stage 7",
    "stage_temperature_sum": 25,
    "base_temperature": 12,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0,
    "critical_oxygen_content": 0.04,
    "specific_leaf_area": 0.0012,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1,
    "stage_description": "senescence",
    "BBCH_start": 80,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 22,
    "id": 1,
    "name": "oat compound stage 1",
    "stage_temperature_sum": 100,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.4244,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 22,
    "id": 2,
    "name": "oat compound stage 2",
    "stage_temperature_sum": 299.9,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 0,
    "drought_stress_threshold": 0.7,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.7,
    "stage_description": "emergence to double ridge",
    "BBCH_start": 10,
    "BBCH_end": 25,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 22,
    "id": 3,
    "name": "oat compound stage 3",
    "stage_temperature_sum": 419.2,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 0.75,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 0.9,
    "stage_description": "double ridge to flowering",
    "BBCH_start": 26,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 22,
    "id": 4,
    "name": "oat compound stage 4",
    "stage_temperature_sum": 200,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 0.75,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.9,
    "stage_description": "flowering to begin grain filling",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 22,
    "id": 5,
    "name": "oat compound stage 5",
    "stage_temperature_sum": 200,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.6,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.61,
    "stage_description": "grain filling",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 22,
    "id": 6,
    "name": "oat compound stage 6",
    "stage_temperature_sum": 25,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.5,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.25,
    "stage_description": "senescence",
    "BBCH_start": 80,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 23,
    "id": 1,
    "name": "spring triticale stage 1",
    "stage_temperature_sum": 150,
    "base_temperature": 0,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.1,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 23,
    "id": 2,
    "name": "spring triticale stage 2",
    "stage_temperature_sum": 200,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 0,
    "drought_stress_threshold": 0,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0018,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.3,
    "stage_description": "emergence to double ridge",
    "BBCH_start": 10,
    "BBCH_end": 25,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 23,
    "id": 3,
    "name": "spring triticale stage 3",
    "stage_temperature_sum": 400,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 0,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0017,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 0.6,
    "stage_description": "double ridge to flowering",
    "BBCH_start": 26,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 23,
    "id": 4,
    "name": "spring triticale stage 4",
    "stage_temperature_sum": 350,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 7,
    "drought_stress_threshold": 0,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0016,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.7,
    "stage_description": "flowering to begin grain filling",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 23,
    "id": 5,
    "name": "spring triticale stage 5",
    "stage_temperature_sum": 300,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0015,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.7,
    "stage_description": "grain filling",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 23,
    "id": 6,
    "name": "spring triticale stage 6",
    "stage_temperature_sum": 25,
    "base_temperature": 9,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0015,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.25,
    "stage_description": "senescence",
    "BBCH_start": 80,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 24,
    "id": 1,
    "name": "field pea stage 1",
    "stage_temperature_sum": 25,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.8,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.4,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 24,
    "id": 2,
    "name": "field pea stage 2",
    "stage_temperature_sum": 160,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 0,
    "drought_stress_threshold": 0.7,
    "critical_oxygen_content": 0.8,
    "specific_leaf_area": 0.0018,
    "stage_max_root_n_content": 0.02,
    "stage_kc_factor": 0.7,
    "stage_description": "emergence to double ridge",
    "BBCH_start": 10,
    "BBCH_end": 25,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 24,
    "id": 3,
    "name": "field pea stage 3",
    "stage_temperature_sum": 210,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 0.75,
    "critical_oxygen_content": 0.8,
    "specific_leaf_area": 0.0017,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 1.1,
    "stage_description": "double ridge to flowering",
    "BBCH_start": 26,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 24,
    "id": 4,
    "name": "field pea stage 4",
    "stage_temperature_sum": 180,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 20,
    "base_day_length": 7,
    "drought_stress_threshold": 0.75,
    "critical_oxygen_content": 0.8,
    "specific_leaf_area": 0.0016,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "flowering to begin grain filling",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 24,
    "id": 5,
    "name": "field pea stage 5",
    "stage_temperature_sum": 480,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.6,
    "critical_oxygen_content": 0.8,
    "specific_leaf_area": 0.0015,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.8,
    "stage_description": "grain filling",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 24,
    "id": 6,
    "name": "field pea stage 6",
    "stage_temperature_sum": 25,
    "base_temperature": 1,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.5,
    "critical_oxygen_content": 0.8,
    "specific_leaf_area": 0.0015,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.25,
    "stage_description": "senescence",
    "BBCH_start": 80,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 43,
    "id": 1,
    "name": "cotton short stage 1",
    "stage_temperature_sum": 148,
    "base_temperature": 14,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 1,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.00164,
    "stage_max_root_n_content": 0.0155,
    "stage_kc_factor": 0.4,
    "stage_description": "sowing to emergence",
    "BBCH_start": 0,
    "BBCH_end": 9,
    "Info": null,
    "opt_temperature": 26
   },
   {
    "crop_id": 43,
    "id": 2,
    "name": "cotton short stage 2",
    "stage_temperature_sum": 50,
    "base_temperature": 14,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": 0,
    "drought_stress_threshold": 0.9,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0022,
    "stage_max_root_n_content": 0.012,
    "stage_kc_factor": 0.7,
    "stage_description": "emergence to first square",
    "BBCH_start": 10,
    "BBCH_end": 25,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 43,
    "id": 3,
    "name": "cotton short stage 3",
    "stage_temperature_sum": 630,
    "base_temperature": 14,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.002,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "\nfirst square to first flower",
    "BBCH_start": 26,
    "BBCH_end": 59,
    "Info": null,
    "opt_temperature": 30
   },
   {
    "crop_id": 43,
    "id": 4,
    "name": "cotton short stage 4",
    "stage_temperature_sum": 430,
    "base_temperature": 14,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0018,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "first flower to first boll",
    "BBCH_start": 60,
    "BBCH_end": 69,
    "Info": null,
    "opt_temperature": 26
   },
   {
    "crop_id": 43,
    "id": 5,
    "name": "cotton short stage 5",
    "stage_temperature_sum": 500,
    "base_temperature": 14,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0016,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 1.1,
    "stage_description": "first boll to last boll",
    "BBCH_start": 70,
    "BBCH_end": 79,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 43,
    "id": 6,
    "name": "cotton short stage 6",
    "stage_temperature_sum": 970,
    "base_temperature": 14,
    "vernalisation_requirement": 0,
    "day_length_requirement": -13,
    "base_day_length": -21,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.0015,
    "stage_max_root_n_content": 0.01,
    "stage_kc_factor": 0.9,
    "stage_description": "last boll to harvest maturity",
    "BBCH_start": 80,
    "BBCH_end": 89,
    "Info": null,
    "opt_temperature": 25
   },
   {
    "crop_id": 43,
    "id": 7,
    "name": "cotton short stage 7",
    "stage_temperature_sum": 25,
    "base_temperature": 14,
    "vernalisation_requirement": 0,
    "day_length_requirement": 0,
    "base_day_length": 0,
    "drought_stress_threshold": 0.8,
    "critical_oxygen_content": 0.08,
    "specific_leaf_area": 0.00136,
    "stage_max_root_n_content": 0.1,
    "stage_kc_factor": 0.4,
    "stage_description": "senescence",
    "BBCH_start": 90,
    "BBCH_end": 99,
    "Info": null,
    "opt_temperature": 30
   }
  ]
 },
 "organic_fertilisers": {
  "columns": [
   "ID",
   "type",
   "om_type",
   "dm",
   "nh4_n",
   "no3_n",
   "nh2_n",
   "k_slow",
   "k_fast",
   "part_s",
   "part_f",
   "cn_s",
   "cn_f",
   "smb_s",
   "smb_f"
  ],
  "rows": [
   {
    "ID": 1,
    "type": "CADLM",
    "om_type": "cattle deep-litter manure",
    "dm": 0.289,
    "nh4_n": 0.007,
    "no3_n": 0,
    "nh2_n": 0,
    "k_slow": 0.0002,
    "k_fast": 0.002,
    "part_s": 0.72,
    "part_f": 0.18,
    "cn_s": 100,
    "cn_f": 7.3,
    "smb_s": 0,
    "smb_f": 1
   },
   {
    "ID": 2,
    "type": "CAM",
    "om_type": "cattle manure",
    "dm": 0.196,
    "nh4_n": 0.007,
    "no3_n": 0,
    "nh2_n": 0,
    "k_slow": 0.0002,
    "k_fast": 0.002,
    "part_s": 0.72,
    "part_f": 0.18,
    "cn_s": 100,
    "cn_f": 6.5,
    "smb_s": 0,
    "smb_f": 1
   },
   {
    "ID": 3,
    "type": "CAS",
    "om_type": "cattle slurry",
    "dm": 0.103,
    "nh4_n": 0.032,
    "no3_n": 0,
    "nh2_n": 0,
    "k_slow": 0.0002,
    "k_fast": 0.002,
    "part_s": 0.72,
    "part_f": 0.18,
    "cn_s": 100,
    "cn_f": 6.1,
    "smb_s": 0,
    "smb_f": 1
   },
   {
    "ID": 4,
    "type": "CAU",
    "om_type": "cattle urine",
    "dm": 0.033,
    "nh4_n": 0.146,
    "no3_n": 0,
    "nh2_n": 0,
    "k_slow": 0.0002,
    "k_fast": 0.002,
    "part_s": 0.72,
    "part_f": 0.18,
    "cn_s": 100,
    "cn_f": 8.4,
    "smb_s": 0,
    "smb_f": 1
   },
   {
    "ID": 5,
    "type": "PIDLM",
    "om_type": "pig deep-litter manure",
    "dm": 0.33,
    "nh4_n": 0.009,
    "no3_n": 0,
    "nh2_n": 0,
    "k_slow": 0.0002,
    "k_fast": 0.002,
    "part_s": 0.72,
    "part_f": 0.18,
    "cn_s": 100,
    "cn_f": 4.8,
    "smb_s": 0,
    "smb_f": 1
   },
   {
    "ID": 6,
    "type": "PIM",
    "om_type": "pig manue",
    "dm": 0.039,
    "nh4_n": 0.014,
    "no3_n": 0,
    "nh2_n": 0,
    "k_slow": 0.0002,
    "k_fast": 0.002,
    "part_s": 0.72,
    "part_f": 0.18,
    "cn_s": 100,
    "cn_f": 5,
    "smb_s": 0,
    "smb_f": 1
   },
   {
    "ID": 7,
    "type": "PIS",
    "om_type": "pig slurry",
    "dm": 0.054,
    "nh4_n": 0.068,
    "no3_n": 0,
    "nh2_n": 0,
    "k_slow": 0.0002,
    "k_fast": 0.002,
    "part_s": 0.72,
    "part_f": 0.18,
    "cn_s": 100,
    "cn_f": 5.7,
    "smb_s": 0,
    "smb_f": 1
   },
   {
    "ID": 8,
    "type": "PIU",
    "om_type": "pig urine",
    "dm": 0.02,
    "nh4_n": 0.162,
    "no3_n": 0,
    "nh2_n": 0,
    "k_slow": 0.0002,
    "k_fast": 0.002,
    "part_s": 0.72,
    "part_f": 0.18,
    "cn_s": 100,
    "cn_f": 7.3,
    "smb_s": 0,
    "smb_f": 1
   },
   {
    "ID": 9,
    "type": "PIUDK",
    "om_type": "pig slurry-DK",
    "dm": 0.05,
    "nh4_n": 0.08,
    "no3_n": 0,
    "nh2_n": 0,
    "k_slow": 0.0002,
    "k_fast": 0.002,
    "part_s": 0.72,
    "part_f": 0.18,
    "cn_s": 85,
    "cn_f": 5,
    "smb_s": 0,
    "smb_f": 1
   },
   {
    "ID": 10,
    "type": "HODLM",
    "om_type": "horse deep-litter manure",
    "dm": 0.26,
    "nh4_n": 0.008,
    "no3_n": 0,
    "nh2_n": 0,
    "k_slow": 0.0002,
    "k_fast": 0.002,
    "part_s": 0.72,
    "part_f": 0.18,
    "cn_s": 100,
    "cn_f": 5.3,
    "smb_s": 0,
    "smb_f": 1
   },
   {
    "ID": 11,
    "type": "PODLM",
    "om_type": "poultry deep-litter manure",
    "dm": 0.633,
    "nh4_n": 0.037,
    "no3_n": 0,
    "nh2_n": 0,
    "k_slow": 0.0002,
    "k_fast": 0.002,
    "part_s": 0.72,
    "part_f": 0.18,
    "cn_s": 100,
    "cn_f": 1.3,
    "smb_s": 0,
    "smb_f": 1
   },
   {
    "ID": 12,
    "type": "POM",
    "om_type": "poultry manure",
    "dm": 0.4,
    "nh4_n": 0.019,
    "no3_n": 0,
    "nh2_n": 0,
    "k_slow": 0.0002,
    "k_fast": 0.002,
    "part_s": 0.72,
    "part_f": 0.18,
    "cn_s": 100,
    "cn_f": 3.5,
    "smb_s": 0,
    "smb_f": 1
   },
   {
    "ID": 13,
    "type": "TUDLM",
    "om_type": "turkey deep-litter manure",
    "dm": 0.48,
    "nh4_n": 0.038,
    "no3_n": 0,
    "nh2_n": 0,
    "k_slow": 0.0002,
    "k_fast": 0.002,
    "part_s": 0.72,
    "part_f": 0.18,
    "cn_s": 100,
    "cn_f": 1.3,
    "smb_s": 0,
    "smb_f": 1
   },
   {
    "ID": 14,
    "type": "DGDLM",
    "om_type": "duck or goose deep-litter manure",
    "dm": 0.35,
    "nh4_n": 0.024,
    "no3_n": 0,
    "nh2_n": 0,
    "k_slow": 0.0002,
    "k_fast": 0.002,
    "part_s": 0.72,
    "part_f": 0.18,
    "cn_s": 100,
    "cn_f": 2.1,
    "smb_s": 0,
    "smb_f": 1
   },
   {
    "ID": 15,
    "type": "GWC",
    "om_type": "green-waste compost",
    "dm": 0.5,
    "nh4_n": 0.002,
    "no3_n": 0,
    "nh2_n": 0,
    "k_slow": 0.0002,
    "k_fast": 0.002,
    "part_s": 0.72,
    "part_f": 0.18,
    "cn_s": 100,
    "cn_f": 8,
    "smb_s": 0,
    "smb_f": 1
   },
   {
    "ID": 16,
    "type": "SS",
    "om_type": "sewage sludge",
    "dm": 0.141,
    "nh4_n": 0.089,
    "no3_n": 0,
    "nh2_n": 0,
    "k_slow": 0.0002,
    "k_fast": 0.002,
    "part_s": 0.72,
    "part_f": 0.18,
    "cn_s": 100,
    "cn_f": 0.5,
    "smb_s": 0,
    "smb_f": 1
   },
   {
    "ID": 17,
    "type": "PLW",
    "om_type": "potato liquid waste",
    "dm": 0.02,
    "nh4_n": 0.028,
    "no3_n": 0,
    "nh2_n": 0,
    "k_slow": 0.0002,
    "k_fast": 0.002,
    "part_s": 0.72,
    "part_f": 0.18,
    "cn_s": 100,
    "cn_f": 4.5,
    "smb_s": 0,
    "smb_f": 1
   },
   {
    "ID": 18,
    "type": "OIC",
    "om_type": "oilseed-rape cake fert. (5-1-10)",
    "dm": 0.9,
    "nh4_n": 0,
    "no3_n": 0,
    "nh2_n": 0,
    "k_slow": 0.012,
    "k_fast": 0.05,
    "part_s": 0.38,
    "part_f": 0.62,
    "cn_s": 47.7,
    "cn_f": 6,
    "smb_s": 0,
    "smb_f": 1
   },
   {
    "ID": 19,
    "type": "WS",
    "om_type": "wheat straw",
    "dm": 0.85,
    "nh4_n": 0,
    "no3_n": 0,
    "nh2_n": 0,
    "k_slow": 0.0002,
    "k_fast": 0.002,
    "part_s": 0.72,
    "part_f": 0.18,
    "cn_s": 100,
    "cn_f": 8,
    "smb_s": 0,
    "smb_f": 1
   },
   {
    "ID": 20,
    "type": "MC",
    "om_type": "mushroom compost",
    "dm": 0.39,
    "nh4_n": 0,
    "no3_n": 0,
    "nh2_n": 0,
    "k_slow": 0.0002,
    "k_fast": 0.002,
    "part_s": 0.72,
    "part_f": 0.18,
    "cn_s": 100,
    "cn_f": 6,
    "smb_s": 0,
    "smb_f": 1
   },
   {
    "ID": 21,
    "type": "MS",
    "om_type": "maize straw",
    "dm": 0.85,
    "nh4_n": 0,
    "no3_n": 0,
    "nh2_n": 0,
    "k_slow": 0.0002,
    "k_fast": 0.002,
    "part_s": 0.72,
    "part_f": 0.18,
    "cn_s": 50,
    "cn_f": 6,
    "smb_s": 0,
    "smb_f": 1
   },
   {
    "ID": 22,
    "type": "WEEDS",
    "om_type": "weeds",
    "dm": 0.85,
    "nh4_n": 0,
    "no3_n": 0,
    "nh2_n": 0,
    "k_slow": 0.0002,
    "k_fast": 0.002,
    "part_s": 0.72,
    "part_f": 0.18,
    "cn_s": 30,
    "cn_f": 6,
    "smb_s": 0,
    "smb_f": 1
   }
  ]
 },
 "user_parameter": {
  "columns": [
   "NAME",
   "VALUE_HERMES"
  ],
  "rows": [
   {
    "NAME": "tortuosity",
    "VALUE_HERMES": 0.002
   },
   {
    "NAME": "canopy_reflection_coefficient",
    "VALUE_HERMES": 0.08
   },
   {
    "NAME": "reference_max_assimilation_rate",
    "VALUE_HERMES": 30
   },
   {
    "NAME": "reference_leaf_area_index",
    "VALUE_HERMES": 1.44
   },
   {
    "NAME": "maintenance_respiration_parameter_2",
    "VALUE_HERMES": 44
   },
   {
    "NAME": "maintenance_respiration_parameter_1",
    "VALUE_HERMES": 0.08
   },
   {
    "NAME": "minimum_n_concentration_root",
    "VALUE_HERMES": 0.005
   },
   {
    "NAME": "minimum_available_n",
    "VALUE_HERMES": 0.000075
   },
   {
    "NAME": "reference_albedo",
    "VALUE_HERMES": 0.23
   },
   {
    "NAME": "stomata_conductance_alpha",
    "VALUE_HERMES": 40
   },
   {
    "NAME": "saturation_beta",
    "VALUE_HERMES": 2.5
   },
   {
    "NAME": "growth_respiration_redux",
    "VALUE_HERMES": 0.7
   },
   {
    "NAME": "max_crop_n_demand",
    "VALUE_HERMES": 6
   },
   {
    "NAME": "growth_respiration_parameter_2",
    "VALUE_HERMES": 38
   },
   {
    "NAME": "growth_respiration_parameter_1",
    "VALUE_HERMES": 0.1
   },
   {
    "NAME": "use_automatic_irrigation",
    "VALUE_HERMES": 0
   },
   {
    "NAME": "use_nmin_mineral_fertilising_method",
    "VALUE_HERMES": 0
   },
   {
    "NAME": "layer_thickness",
    "VALUE_HERMES": 0.1
   },
   {
    "NAME": "number_of_layers",
    "VALUE_HERMES": 20
   },
   {
    "NAME": "start_pv_index",
    "VALUE_HERMES": 0
   },
   {
    "NAME": "albedo",
    "VALUE_HERMES": 0.23
   },
   {
    "NAME": "athmospheric_co2",
    "VALUE_HERMES": 0
   },
   {
    "NAME": "wind_speed_height",
    "VALUE_HERMES": 2
   },
   {
    "NAME": "use_secondary_yields",
    "VALUE_HERMES": 1
   },
   {
    "NAME": "julian_day_automatic_fertilising",
    "VALUE_HERMES": 74
   },
   {
    "NAME": "critical_moisture_depth",
    "VALUE_HERMES": 0.3
   },
   {
    "NAME": "saturated_hydraulic_conductivity",
    "VALUE_HERMES": 8640
   },
   {
    "NAME": "surface_roughness",
    "VALUE_HERMES": 0.02
   },
   {
    "NAME": "hydraulic_conductivity_redux",
    "VALUE_HERMES": 0.1
   },
   {
    "NAME": "snow_accumulation_treshold_temperature",
    "VALUE_HERMES": 1.8
   },
   {
    "NAME": "kc_factor",
    "VALUE_HERMES": 0.75
   },
   {
    "NAME": "time_step",
    "VALUE_HERMES": 1
   },
   {
    "NAME": "temperature_limit_for_liquid_water",
    "VALUE_HERMES": -3
   },
   {
    "NAME": "correction_snow",
    "VALUE_HERMES": 1.14
   },
   {
    "NAME": "correction_rain",
    "VALUE_HERMES": 1
   },
   {
    "NAME": "snow_max_additional_density",
    "VALUE_HERMES": 0.25
   },
   {
    "NAME": "new_snow_density_min",
    "VALUE_HERMES": 0.1
   },
   {
    "NAME": "snow_retention_capacity_min",
    "VALUE_HERMES": 0.05
   },
   {
    "NAME": "refreeze_parameter_2",
    "VALUE_HERMES": 0.36
   },
   {
    "NAME": "refreeze_parameter_1",
    "VALUE_HERMES": 1.5
   },
   {
    "NAME": "refreeze_temperature",
    "VALUE_HERMES": -1.7
   },
   {
    "NAME": "snowmelt_temperature",
    "VALUE_HERMES": 0.31
   },
   {
    "NAME": "snow_packing",
    "VALUE_HERMES": 0.01
   },
   {
    "NAME": "snow_retention_capacity_max",
    "VALUE_HERMES": 0.17
   },
   {
    "NAME": "evaporation_zeta",
    "VALUE_HERMES": 40
   },
   {
    "NAME": "xsa_critical_soil_moisture",
    "VALUE_HERMES": 0.1
   },
   {
    "NAME": "maximum_evaporation_impact_depth",
    "VALUE_HERMES": 5
   },
   {
    "NAME": "ntau",
    "VALUE_HERMES": 0.65
   },
   {
    "NAME": "initial_surface_temperature",
    "VALUE_HERMES": 10
   },
   {
    "NAME": "base_temperature",
    "VALUE_HERMES": 9.5
   },
   {
    "NAME": "quartz_raw_density",
    "VALUE_HERMES": 2650
   },
   {
    "NAME": "density_air",
    "VALUE_HERMES": 1.25
   },
   {
    "NAME": "density_water",
    "VALUE_HERMES": 1000
   },
   {
    "NAME": "specific_heat_capacity_air",
    "VALUE_HERMES": 1005
   },
   {
    "NAME": "specific_heat_capacity_quartz",
    "VALUE_HERMES": 750
   },
   {
    "NAME": "specific_heat_capacity_water",
    "VALUE_HERMES": 4192
   },
   {
    "NAME": "soil_albedo",
    "VALUE_HERMES": 0.7
   },
   {
    "NAME": "dispersion_length",
    "VALUE_HERMES": 0.049
   },
   {
    "NAME": "AD",
    "VALUE_HERMES": 0.002
   },
   {
    "NAME": "diffusion_coefficient_standard",
    "VALUE_HERMES": 0.000214
   },
   {
    "NAME": "leaching_depth",
    "VALUE_HERMES": 1.6
   },
   {
    "NAME": "max_percolation_rate",
    "VALUE_HERMES": 10
   },
   {
    "NAME": "groundwater_discharge",
    "VALUE_HERMES": 3
   },
   {
    "NAME": "density_humus",
    "VALUE_HERMES": 1300
   },
   {
    "NAME": "specific_heat_capacity_humus",
    "VALUE_HERMES": 1920
   },
   {
    "NAME": "soilmoisture_init_value",
    "VALUE_HERMES": 0.1
   },
   {
    "NAME": "max_groundwater_depth",
    "VALUE_HERMES": 18
   },
   {
    "NAME": "min_groundwater_depth",
    "VALUE_HERMES": 20
   },
   {
    "NAME": "min_groundwater_depth_month",
    "VALUE_HERMES": 3
   },
   {
    "NAME": "SOM_SlowDecCoeffStandard",
    "VALUE_HERMES": 0.000043
   },
   {
    "NAME": "SOM_FastDecCoeffStandard",
    "VALUE_HERMES": 0.00014
   },
   {
    "NAME": "SMB_SlowMaintRateStandard",
    "VALUE_HERMES": 0.001
   },
   {
    "NAME": "SMB_FastMaintRateStandard",
    "VALUE_HERMES": 0.01
   },
   {
    "NAME": "SMB_SlowDeathRateStandard",
    "VALUE_HERMES": 0.001
   },
   {
    "NAME": "SMB_FastDeathRateStandard",
    "VALUE_HERMES": 0.01
   },
   {
    "NAME": "SMB_UtilizationEfficiency",
    "VALUE_HERMES": 0.6
   },
   {
    "NAME": "SOM_SlowUtilizationEfficiency",
    "VALUE_HERMES": 0.4
   },
   {
    "NAME": "SOM_FastUtilizationEfficiency",
    "VALUE_HERMES": 0.5
   },
   {
    "NAME": "AOM_SlowUtilizationEfficiency",
    "VALUE_HERMES": 0.4
   },
   {
    "NAME": "AOM_FastUtilizationEfficiency",
    "VALUE_HERMES": 0.1
   },
   {
    "NAME": "AOM_FastMaxC_to_N",
    "VALUE_HERMES": 1000
   },
   {
    "NAME": "PartSOM_Fast_to_SOM_Slow",
    "VALUE_HERMES": 0.3
   },
   {
    "NAME": "PartSMB_Slow_to_SOM_Fast",
    "VALUE_HERMES": 0.6
   },
   {
    "NAME": "PartSMB_Fast_to_SOM_Fast",
    "VALUE_HERMES": 0.6
   },
   {
    "NAME": "PartSOM_to_SMB_Slow",
    "VALUE_HERMES": 0.015
   },
   {
    "NAME": "PartSOM_to_SMB_Fast",
    "VALUE_HERMES": 0.0002
   },
   {
    "NAME": "CN_Ratio_SMB",
    "VALUE_HERMES": 6.7
   },
   {
    "NAME": "LimitClayEffect",
    "VALUE_HERMES": 0.25
   },
   {
    "NAME": "AmmoniaOxidationRateCoeffStandard",
    "VALUE_HERMES": 0.1
   },
   {
    "NAME": "NitriteOxidationRateCoeffStandard",
    "VALUE_HERMES": 0.9
   },
   {
    "NAME": "TransportRateCoeff",
    "VALUE_HERMES": 0.1
   },
   {
    "NAME": "SpecAnaerobDenitrification",
    "VALUE_HERMES": 0.1
   },
   {
    "NAME": "ImmobilisationRateCoeffNO3",
    "VALUE_HERMES": 0.5
   },
   {
    "NAME": "ImmobilisationRateCoeffNH4",
    "VALUE_HERMES": 0.5
   },
   {
    "NAME": "Denit1",
    "VALUE_HERMES": 0.2
   },
   {
    "NAME": "Denit2",
    "VALUE_HERMES": 0.8
   },
   {
    "NAME": "Denit3",
    "VALUE_HERMES": 0.9
   },
   {
    "NAME": "HydrolysisKM",
    "VALUE_HERMES": 0.00334
   },
   {
    "NAME": "ActivationEnergy",
    "VALUE_HERMES": 41000
   },
   {
    "NAME": "HydrolysisP1",
    "VALUE_HERMES": 4.259e-12
   },
   {
    "NAME": "HydrolysisP2",
    "VALUE_HERMES": 1.408e-12
   },
   {
    "NAME": "AtmosphericResistance",
    "VALUE_HERMES": 0.0025
   },
   {
    "NAME": "N2OProductionRate",
    "VALUE_HERMES": 0.5
   },
   {
    "NAME": "Inhibitor_NH3",
    "VALUE_HERMES": 1
   }
  ]
 },
 "organ": {
  "columns": [
   "crop_id",
   "id",
   "name",
   "initial_organ_biomass",
   "organ_maintainance_respiration",
   "is_above_ground",
   "organ_growth_respiration",
   "is_storage_organ"
  ],
  "rows": [
   {
    "crop_id": 1,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 1,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 1,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 1,
    "id": 4,
    "name": "ear",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 2,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 2,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 2,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 2,
    "id": 4,
    "name": "ear",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 3,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 3,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 3,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 3,
    "id": 4,
    "name": "ear",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 4,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 4,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 4,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 4,
    "id": 4,
    "name": "ear",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 10,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 5,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 10,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 10,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 10,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.003,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.003,
    "is_storage_organ": 0
   },
   {
    "crop_id": 10,
    "id": 4,
    "name": "tuber",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 8,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 5,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 8,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 10,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 8,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.003,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.003,
    "is_storage_organ": 0
   },
   {
    "crop_id": 8,
    "id": 4,
    "name": "tuber",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 9,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 9,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 9,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 9,
    "id": 4,
    "name": "pod",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 5,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 12,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 5,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 12,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 5,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 5,
    "id": 4,
    "name": "cob",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.007,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.007,
    "is_storage_organ": 1
   },
   {
    "crop_id": 11,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 11,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 11,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 11,
    "id": 4,
    "name": "pod",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 12,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 12,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 12,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 12,
    "id": 4,
    "name": "pod",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 1
   },
   {
    "crop_id": 13,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 13,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 13,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 13,
    "id": 4,
    "name": "ear",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 1
   },
   {
    "crop_id": 27,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 250,
    "organ_maintainance_respiration": 0.001,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.001,
    "is_storage_organ": 0
   },
   {
    "crop_id": 27,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 18,
    "organ_maintainance_respiration": 0.025,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.025,
    "is_storage_organ": 0
   },
   {
    "crop_id": 27,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.013,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.013,
    "is_storage_organ": 0
   },
   {
    "crop_id": 27,
    "id": 4,
    "name": "grape",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.008,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.008,
    "is_storage_organ": 1
   },
   {
    "crop_id": 27,
    "id": 5,
    "name": "wood",
    "initial_organ_biomass": 380,
    "organ_maintainance_respiration": 0.008,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.008,
    "is_storage_organ": 0
   },
   {
    "crop_id": 7,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 12,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 7,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 12,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 7,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 7,
    "id": 4,
    "name": "cob",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.007,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.007,
    "is_storage_organ": 1
   },
   {
    "crop_id": 6,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 12,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 6,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 12,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 6,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 6,
    "id": 4,
    "name": "cob",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.007,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.007,
    "is_storage_organ": 1
   },
   {
    "crop_id": 14,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 14,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 14,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 14,
    "id": 4,
    "name": "ear",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 1
   },
   {
    "crop_id": 15,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 15,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 15,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 15,
    "id": 4,
    "name": "ear",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 1
   },
   {
    "crop_id": 28,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 28,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 28,
    "id": 3,
    "name": "stem",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 28,
    "id": 4,
    "name": "pod",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 29,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 29,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 29,
    "id": 3,
    "name": "stem",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 29,
    "id": 4,
    "name": "pod",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 30,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 30,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 30,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 30,
    "id": 4,
    "name": "pod",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 31,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 31,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 31,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 31,
    "id": 4,
    "name": "pod",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 32,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 32,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 32,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 32,
    "id": 4,
    "name": "pod",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 33,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 33,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 33,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 33,
    "id": 4,
    "name": "pod",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 34,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 34,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 34,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 34,
    "id": 4,
    "name": "pod",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 35,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 35,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 35,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 35,
    "id": 4,
    "name": "pod",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 36,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 36,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 36,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 36,
    "id": 4,
    "name": "pod",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 37,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 37,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 37,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 37,
    "id": 4,
    "name": "pod",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 38,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 38,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 38,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 38,
    "id": 4,
    "name": "pod",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 39,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 39,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 39,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 39,
    "id": 4,
    "name": "pod",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 40,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 40,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 40,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 40,
    "id": 4,
    "name": "pod",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 41,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 41,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 41,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 41,
    "id": 4,
    "name": "pod",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 42,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 42,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 42,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 42,
    "id": 4,
    "name": "pod",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 18,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 12,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 18,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 12,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 18,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 18,
    "id": 4,
    "name": "cob",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.007,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.007,
    "is_storage_organ": 1
   },
   {
    "crop_id": 19,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 19,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 19,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 19,
    "id": 4,
    "name": "ear",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 16,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 16,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 16,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 20,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 17,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 17,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 17,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 17,
    "id": 4,
    "name": "pod",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 20,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 20,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 20,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 20,
    "id": 4,
    "name": "ear",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 21,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 12,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 21,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 12,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 21,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 22,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 22,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 22,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 22,
    "id": 4,
    "name": "panicle",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 23,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 23,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 23,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 23,
    "id": 4,
    "name": "ear",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 24,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 24,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 24,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 24,
    "id": 4,
    "name": "pod",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   },
   {
    "crop_id": 43,
    "id": 1,
    "name": "root",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 0,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 0
   },
   {
    "crop_id": 43,
    "id": 2,
    "name": "leaf",
    "initial_organ_biomass": 53,
    "organ_maintainance_respiration": 0.03,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.03,
    "is_storage_organ": 0
   },
   {
    "crop_id": 43,
    "id": 3,
    "name": "shoot",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.015,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.015,
    "is_storage_organ": 0
   },
   {
    "crop_id": 43,
    "id": 4,
    "name": "boll",
    "initial_organ_biomass": 0,
    "organ_maintainance_respiration": 0.01,
    "is_above_ground": 1,
    "organ_growth_respiration": 0.01,
    "is_storage_organ": 1
   }
  ]
 },
 "yield_parts": {
  "columns": [
   "crop_id",
   "organ_id",
   "is_primary",
   "percentage",
   "dry_matter"
  ],
  "rows": [
   {
    "crop_id": 1,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 85,
    "dry_matter": 0.86
   },
   {
    "crop_id": 3,
    "organ_id": 2,
    "is_primary": 0,
    "percentage": 85,
    "dry_matter": 0.86
   },
   {
    "crop_id": 2,
    "organ_id": 2,
    "is_primary": 0,
    "percentage": 85,
    "dry_matter": 0.86
   },
   {
    "crop_id": 1,
    "organ_id": 2,
    "is_primary": 0,
    "percentage": 85,
    "dry_matter": 0.86
   },
   {
    "crop_id": 3,
    "organ_id": 3,
    "is_primary": 0,
    "percentage": 90,
    "dry_matter": 0.86
   },
   {
    "crop_id": 2,
    "organ_id": 3,
    "is_primary": 0,
    "percentage": 90,
    "dry_matter": 0.86
   },
   {
    "crop_id": 1,
    "organ_id": 3,
    "is_primary": 0,
    "percentage": 90,
    "dry_matter": 0.86
   },
   {
    "crop_id": 10,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 100,
    "dry_matter": 0.23
   },
   {
    "crop_id": 3,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 95,
    "dry_matter": 0.86
   },
   {
    "crop_id": 2,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 85,
    "dry_matter": 0.86
   },
   {
    "crop_id": 8,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 95,
    "dry_matter": 0.22
   },
   {
    "crop_id": 9,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 55,
    "dry_matter": 0.91
   },
   {
    "crop_id": 5,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 78,
    "dry_matter": 0.86
   },
   {
    "crop_id": 10,
    "organ_id": 2,
    "is_primary": 0,
    "percentage": 95,
    "dry_matter": 0.16
   },
   {
    "crop_id": 4,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 95,
    "dry_matter": 0.86
   },
   {
    "crop_id": 4,
    "organ_id": 2,
    "is_primary": 0,
    "percentage": 85,
    "dry_matter": 0.86
   },
   {
    "crop_id": 4,
    "organ_id": 3,
    "is_primary": 0,
    "percentage": 85,
    "dry_matter": 0.86
   },
   {
    "crop_id": 11,
    "organ_id": 2,
    "is_primary": 1,
    "percentage": 1,
    "dry_matter": 0.15
   },
   {
    "crop_id": 11,
    "organ_id": 3,
    "is_primary": 1,
    "percentage": 1,
    "dry_matter": 0.15
   },
   {
    "crop_id": 11,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 1,
    "dry_matter": 0.15
   },
   {
    "crop_id": 9,
    "organ_id": 3,
    "is_primary": 0,
    "percentage": 85,
    "dry_matter": 0.35
   },
   {
    "crop_id": 9,
    "organ_id": 2,
    "is_primary": 0,
    "percentage": 85,
    "dry_matter": 0.35
   },
   {
    "crop_id": 27,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 95,
    "dry_matter": 0.22
   },
   {
    "crop_id": 7,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 100,
    "dry_matter": 0.32
   },
   {
    "crop_id": 7,
    "organ_id": 2,
    "is_primary": 1,
    "percentage": 90,
    "dry_matter": 0.32
   },
   {
    "crop_id": 7,
    "organ_id": 3,
    "is_primary": 1,
    "percentage": 90,
    "dry_matter": 0.32
   },
   {
    "crop_id": 6,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 78,
    "dry_matter": 0.86
   },
   {
    "crop_id": 28,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 79,
    "dry_matter": 0.86
   },
   {
    "crop_id": 29,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 79,
    "dry_matter": 0.86
   },
   {
    "crop_id": 30,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 79,
    "dry_matter": 0.86
   },
   {
    "crop_id": 31,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 79,
    "dry_matter": 0.86
   },
   {
    "crop_id": 32,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 79,
    "dry_matter": 0.86
   },
   {
    "crop_id": 33,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 79,
    "dry_matter": 0.86
   },
   {
    "crop_id": 34,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 79,
    "dry_matter": 0.86
   },
   {
    "crop_id": 35,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 79,
    "dry_matter": 0.86
   },
   {
    "crop_id": 36,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 79,
    "dry_matter": 0.86
   },
   {
    "crop_id": 37,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 79,
    "dry_matter": 0.86
   },
   {
    "crop_id": 38,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 79,
    "dry_matter": 0.86
   },
   {
    "crop_id": 39,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 79,
    "dry_matter": 0.86
   },
   {
    "crop_id": 40,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 79,
    "dry_matter": 0.86
   },
   {
    "crop_id": 41,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 79,
    "dry_matter": 0.86
   },
   {
    "crop_id": 42,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 79,
    "dry_matter": 0.86
   },
   {
    "crop_id": 18,
    "organ_id": 2,
    "is_primary": 1,
    "percentage": 90,
    "dry_matter": 0.32
   },
   {
    "crop_id": 18,
    "organ_id": 3,
    "is_primary": 1,
    "percentage": 90,
    "dry_matter": 0.32
   },
   {
    "crop_id": 18,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 100,
    "dry_matter": 0.32
   },
   {
    "crop_id": 19,
    "organ_id": 2,
    "is_primary": 0,
    "percentage": 85,
    "dry_matter": 0.86
   },
   {
    "crop_id": 19,
    "organ_id": 3,
    "is_primary": 0,
    "percentage": 85,
    "dry_matter": 0.86
   },
   {
    "crop_id": 19,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 85,
    "dry_matter": 0.86
   },
   {
    "crop_id": 17,
    "organ_id": 2,
    "is_primary": 1,
    "percentage": 85,
    "dry_matter": 0.3
   },
   {
    "crop_id": 17,
    "organ_id": 3,
    "is_primary": 1,
    "percentage": 85,
    "dry_matter": 0.3
   },
   {
    "crop_id": 17,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 85,
    "dry_matter": 0.91
   },
   {
    "crop_id": 20,
    "organ_id": 2,
    "is_primary": 0,
    "percentage": 85,
    "dry_matter": 0.86
   },
   {
    "crop_id": 20,
    "organ_id": 3,
    "is_primary": 0,
    "percentage": 90,
    "dry_matter": 0.86
   },
   {
    "crop_id": 20,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 95,
    "dry_matter": 0.86
   },
   {
    "crop_id": 21,
    "organ_id": 2,
    "is_primary": 1,
    "percentage": 90,
    "dry_matter": 0.32
   },
   {
    "crop_id": 21,
    "organ_id": 3,
    "is_primary": 1,
    "percentage": 90,
    "dry_matter": 0.32
   },
   {
    "crop_id": 22,
    "organ_id": 2,
    "is_primary": 0,
    "percentage": 85,
    "dry_matter": 0.86
   },
   {
    "crop_id": 22,
    "organ_id": 3,
    "is_primary": 0,
    "percentage": 90,
    "dry_matter": 0.86
   },
   {
    "crop_id": 22,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 95,
    "dry_matter": 0.86
   },
   {
    "crop_id": 23,
    "organ_id": 2,
    "is_primary": 0,
    "percentage": 85,
    "dry_matter": 0.86
   },
   {
    "crop_id": 23,
    "organ_id": 3,
    "is_primary": 0,
    "percentage": 85,
    "dry_matter": 0.86
   },
   {
    "crop_id": 23,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 85,
    "dry_matter": 0.86
   },
   {
    "crop_id": 24,
    "organ_id": 2,
    "is_primary": 0,
    "percentage": 90,
    "dry_matter": 0.86
   },
   {
    "crop_id": 24,
    "organ_id": 3,
    "is_primary": 0,
    "percentage": 90,
    "dry_matter": 0.86
   },
   {
    "crop_id": 24,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 80,
    "dry_matter": 0.86
   },
   {
    "crop_id": 43,
    "organ_id": 4,
    "is_primary": 1,
    "percentage": 45,
    "dry_matter": 0.86
   }
  ]
 }
};
var config = {
 "sim": {
  "time": {
   "dateFormat": "YYYY-MM-DD",
   "startYear": 1991,
   "endYear": 1992
  },
  "switch": {
   "useSecondaryYieldOn": false,
   "nitrogenResponseOn": true,
   "waterDeficitResponseOn": true,
   "emergenceMoistureControlOn": false,
   "emergenceFloodingControlOn": false
  },
  "init": {
   "percentageFC": 1,
   "soilNitrate": 0.001,
   "soilAmmonium": 0.0001
  }
 },
 "site": {
  "latitude": 52.809399,
  "slope": 0,
  "heightNN": 38,
  "atmosphericCO2": 380,
  "windSpeedHeight": 2.5,
  "leachingDepth": 1.5,
  "NDeposition": 0,
  "groundwaterDepthMin": null,
  "groundwaterDepthMax": null,
  "groundwaterDepthMinMonth": null,
  "horizons": [
   {
    "upperBoundary": 0,
    "lowerBoundary": 0.3,
    "Corg": 0.8,
    "textureClass": "Ls2",
    "sand": 0.15,
    "clay": 0.24,
    "sceleton": 0.02,
    "poreVolume": 0.45,
    "fieldCapacity": 0.33,
    "permanentWiltingPoint": 0.2,
    "pH": 6.9,
    "CN": 10,
    "bulkDensity": 1400
   },
   {
    "upperBoundary": 0.3,
    "lowerBoundary": 0.4,
    "Corg": 0.15,
    "textureClass": "Ls2",
    "sand": 0.15,
    "clay": 0.24,
    "sceleton": 0.02,
    "poreVolume": 0.45,
    "fieldCapacity": 0.33,
    "permanentWiltingPoint": 0.2,
    "pH": 6.9,
    "CN": 10,
    "bulkDensity": 1400
   },
   {
    "upperBoundary": 0.4,
    "lowerBoundary": 2,
    "Corg": 0.05,
    "textureClass": "Ls2",
    "sand": 0.15,
    "clay": 0.24,
    "sceleton": 0.02,
    "poreVolume": 0.45,
    "fieldCapacity": 0.33,
    "permanentWiltingPoint": 0.2,
    "pH": 6.9,
    "CN": 10,
    "bulkDensity": 1400
   }
  ]
 },
 "crop": {
  "crops": [
   {
    "name": "winter rye",
    "genType": "",
    "spec": "",
    "sowingDate": "1991-10-01",
    "rowWidth": 5,
    "plantSpace": 5,
    "plantDryWeight": 225,
    "percNTRansplant": 0,
    "finalHarvestDate": "1992-08-01",
    "residuesRemoval": 85,
    "tillageOps": [
     {
      "date": "1991-09-15",
      "method": "Plough",
      "depth": 15
     }
    ],
    "irrigations": [
     {
      "date": "1992-06-01",
      "method": "Sprinkler",
      "eventType": "Fixed",
      "threshold": 30,
      "area": 1,
      "amount": 11,
      "NConc": 0
     }
    ],
    "mineralFertilisers": [
     {
      "date": "1992-04-01",
      "method": "Fixed",
      "type": "AN",
      "amount": 40
     }
    ],
    "organicFertilisers": [
     {
      "date": "1992-05-01",
      "method": "Fixed",
      "type": "CAM",
      "amount": 3000
     }
    ]
   }
  ]
 }
};
/* JS debugging */

var DEBUG = DEBUG || false;

var debugArgs = function (arguments_, funcName) {

  // TODO: recursive

  if (!DEBUG) return; 

  var args = Array.prototype.slice.call(arguments_)
    , funcName = funcName || ''
    , isInvalid = function (x) {
        if (x instanceof Function)
          return false;
        if (typeof x === 'object') 
          return (x === null || x === undefined);
        if (typeof x === 'string' || x === 'boolean')
          return (x === null || x === undefined);
        return (isNaN(x) || x === null || x === undefined || x === Infinity);
      }
    , doLog = function (x) {
        console.log('args: ' + JSON.stringify(x, null, 2));
      }
    ;

  for (var i = 0, is = args.length; i < is; i++) {
    var arg = args[i];
    if (arg && typeof arg === 'object') {
      if (Array.isArray(arg)) {
        arg.forEach(function (e) {
          if (e && typeof e === 'object') {
            if (isTypedArray(e)) {
              for (var i = 0, is = arg.length; i < is; i++) {
                if (isInvalid(arg[i])) {
                  doLog(arg);
                  throw arg;
                }
              }
            } else if (Array.isArray(e)) {
              e.forEach(function (e2) {
                if (isInvalid(e2)) {
                  doLog(e);
                  throw e2;
                }
              });
            } else {
              for (var prop in e) {
                if (e.hasOwnProperty(prop)) {
                  if (isInvalid(e[prop])) {
                    doLog(e);
                    throw prop;
                  }
                }
              }
            }
          } else {
            if (isInvalid(e)) {
              doLog(arg);
              throw e;
            }
          }
        });
      } else if (isTypedArray(arg)) {
        for (var i = 0, is = arg.length; i < is; i++) {
          if (isInvalid(arg[i])) {
            doLog(arg);
            throw arg;
          }
        }
      } else {
        for (var prop in arg) {
          if (arg.hasOwnProperty(prop)) {
            if (isInvalid(arg[prop])) {
              doLog(arg);
              throw arg;
            }
          }
        }
      }
    } else { 
      if (isInvalid(arg)) {
        doLog(args);
        throw arg;
      }
    }
  }

};

var isTypedArray = function (x) {
  return (
    x instanceof Int8Array ||
    x instanceof Uint8Array || 
    x instanceof Uint8ClampedArray || 
    x instanceof Int16Array ||
    x instanceof Uint16Array || 
    x instanceof Int32Array ||
    x instanceof Uint32Array ||
    x instanceof Float64Array || 
    x instanceof Float64Array
  );
}

var debug = function () {

  if (!DEBUG) return;

  // check if it is an arguments object
  if (
    typeof arguments[0] === 'object' &&
    arguments[0].length != undefined && 
    !Array.isArray(arguments[0]) &&
    !isTypedArray(arguments[0])
  ) return debugArgs(arguments[0]);

  if (arguments.length === 2) {
    if (typeof arguments[1] === 'string')
      console.log("debug: " + arguments[1] + ' = ' + ((typeof arguments[0] === 'object') ? JSON.stringify(arguments[0], null, 1) : arguments[0]));
    if (typeof arguments[0] === 'string')
      console.log("debug: " + arguments[0] + ' = ' + ((typeof arguments[1] === 'object') ? JSON.stringify(arguments[1], null, 1) : arguments[1]));
  } else if (typeof arguments[0] === 'string') {
    console.log("debug: " + arguments[0]);
  } else {
    console.log(arguments[0]);
  }

};

/* math, constants and helper functions */

var abs   = Math.abs
  , acos  = Math.acos
  , asin  = Math.asin
  , atan  = Math.atan
  , ceil  = Math.ceil
  , cos   = Math.cos
  , exp   = Math.exp
  , floor = Math.floor
  , int   = function (x) {
      return x | 0;
    }
  , log   = Math.log
  , log10 = function (x) { 
      return Math.log(x) / Math.LN10; 
    }
  , max   = Math.max
  , min   = Math.min
  , pow   = Math.pow
  , round = Math.round
  , fixed = function (n, x) { 
      return x.toFixed(n);
    }
  , roundN  = function (n, x) { 
      return parseFloat(x.toFixed(n));
    }
  , sin   = Math.sin
  , sqrt  = Math.sqrt
  , tan   = Math.tan
  , PI    = Math.PI
  ;

var UNDEFINED = -9999.9,
    UNDEFINED_INT = -9999;

var ROOT = 0
  , LEAF = 1
  , SHOOT = 2
  , STORAGE_ORGAN = 3
  ;

// var Eva2_Nutzung = {
//   NUTZUNG_UNDEFINED: 0,
//   NUTZUNG_GANZPFLANZE: 1,
//   NUTZUNG_KORN: 2,
//   NUTZUNG_GRUENDUENGUNG: 7,
//   NUTZUNG_CCM: 8
// };  

var ResultId = [
  //! primary yield for the crop (e.g. the actual fruit)
  'primaryYield',
  //! secondary yield for the crop (e.g. leafs and other stuff useable)
  'secondaryYield',
  //! sum of applied fertilizer for that crop during growth period
  'sumFertiliser',
  //! sum of used irrigation water for the crop during growth period
  'sumIrrigation',
  //! sum of N turnover
  'sumMineralisation',
  //! the monthly average of the average corg content in the first 10 cm soil
  'avg10cmMonthlyAvgCorg',
  //! the monthly average of the average corg content in the first 30 cm soil
  'avg30cmMonthlyAvgCorg',
  //! the monthly average of the summed up water content in the first 90 cm soil
  'mean90cmMonthlyAvgWaterContent',
  //! at some day in the year the sum of the N content in the first 90cm soil
  'sum90cmYearlyNatDay',
  //! the monthly summed up amount of ground water recharge
  'monthlySumGroundWaterRecharge',
  //! the monthly sum of N leaching
  'monthlySumNLeaching',
  //! height of crop at harvesting date
  'cropHeight',
  //! sum of NO3 content in the first 90cm soil at a 'special', hardcoded date
  'sum90cmYearlyNO3AtDay',
  //! sum of NH4 content in the first 90cm soil at a 'special', hardcoded date
  'sum90cmYearlyNH4AtDay',
  //! value of maximal snow depth during simulation duration
  'maxSnowDepth',
  //! sum of snow depth for every day
  'sumSnowDepth',
  //! sum of frost depth
  'sumFrostDepth',
  //! Average soil temperature in the first 30cm soil at 'special', hardcoded date
  'avg30cmSoilTemperature',
  //! Sum of soil temperature in the first 30cm soil at 'special', hardcoded date
  'sum30cmSoilTemperature',
  //! Average soilmoisture content in first 30cm soil at 'special', hardcoded date
  'avg0_30cmSoilMoisture',
  //! Average soilmoisture content in 30-60cm soil at 'special', hardcoded date
  'avg30_60cmSoilMoisture',
  //! Average soilmoisture content in 60-90cm soil at 'special', hardcoded date
  'avg60_90cmSoilMoisture',
  //! water flux at bottom layer of soil at 'special', hardcoded date
  'waterFluxAtLowerBoundary',
  //! capillary rise in first 30 cm soil at special date
  'avg0_30cmCapillaryRise',
  //! capillary rise in 30-60 cm soil at special date
  'avg30_60cmCapillaryRise',
  //! capillary rise in 60-90cm cm soil at special date
  'avg60_90cmCapillaryRise',
  //! percolation ratein first 30 cm soil at special date
  'avg0_30cmPercolationRate',
  //! percolation ratein 30-60 cm soil at special date
  'avg30_60cmPercolationRate',
  //! percolation rate in 60-90cm cm soil at special date
  'avg60_90cmPercolationRate',
  //! sum of surface run off volumes during hole simulation duration
  'sumSurfaceRunOff',
  //! Evapotranspiration amount at a special date
  'evapotranspiration',
  //! Transpiration amount at a special date
  'transpiration',
  //! Evaporation amount at a special date
  'evaporation',
  //! N content in biomass after harvest
  'biomassNContent',
  //! N content in above ground biomass after harvest
  'aboveBiomassNContent',
  //! sum of total N uptake of plant
  'sumTotalNUptake',
  //! sum of CO2 evolution rate in first 30 cm soil at special date
  'sum30cmSMB_CO2EvolutionRate',
  //! volatilised NH3 at a special date
  'NH3Volatilised',
  //! sum of all volatilised NH3
  'sumNH3Volatilised',
  //! sum of denitrification rate in first 30cm at a special date
  'sum30cmActDenitrificationRate',
  //! leaching N at boundary at special date
  'leachingNAtBoundary',
  //! leaching N accumulated for a year
  'yearlySumNLeaching',
  //! Groundwater recharge accumulated for a year
  'yearlySumGroundWaterRecharge',
  //! Evapotranspiration in time of crop cultivation
  'sumETaPerCrop',
  'cropname',
  'primaryYieldTM',
  'secondaryYieldTM',
  'monthlySurfaceRunoff',
  'monthlyPrecip',
  'monthlyETa',
  'monthlySoilMoistureL0',
  'monthlySoilMoistureL1',
  'monthlySoilMoistureL2',
  'monthlySoilMoistureL3',
  'monthlySoilMoistureL4',
  'monthlySoilMoistureL5',
  'monthlySoilMoistureL6',
  'monthlySoilMoistureL7',
  'monthlySoilMoistureL8',
  'monthlySoilMoistureL9',
  'monthlySoilMoistureL10',
  'monthlySoilMoistureL11',
  'monthlySoilMoistureL12',
  'monthlySoilMoistureL13',
  'monthlySoilMoistureL14',
  'monthlySoilMoistureL15',
  'monthlySoilMoistureL16',
  'monthlySoilMoistureL17',
  'monthlySoilMoistureL18',
  'daysWithCrop',
  'NStress',
  'WaterStress',
  'HeatStress',
  'OxygenStress',
  'dev_stage'
];

var perCropResults = [
  'primaryYield',
  'secondaryYield',
  'primaryYieldTM',
  'secondaryYieldTM',
  'sumIrrigation',
  'biomassNContent',
  'aboveBiomassNContent',
  'daysWithCrop',
  'sumTotalNUptake',
  'cropHeight',
  'sumETaPerCrop',
  'cropname',
  'id',
  'NStress',
  'WaterStress',
  'HeatStress',
  'OxygenStress',
];


/**
 * @brief Definition of organic constants
 */
var organicConstants = {
    po_UreaMolecularWeight: 0.06006 //[kg mol-1]
  , po_Urea_to_N: 0.46667 //Converts 1 kg urea to 1 kg N
  , po_NH3MolecularWeight: 0.01401 //[kg mol-1]
  , po_NH4MolecularWeight: 0.01401 //[kg mol-1]
  , po_H2OIonConcentration: 1.0
  , po_pKaHNO2: 3.29 // [] pKa value for nitrous acid
  , po_pKaNH3: 6.5 // [] pKa value for ammonium
  , po_SOM_to_C: 0.57 //: 0.58, // [] converts soil organic matter to carbon
  , po_AOM_to_C: 0.45 // [] converts added organic matter to carbon
};

var Climate = {
    tmin: 0
  , tmax: 1
  , tavg: 2
  , globrad: 3
  , wind: 4
  , precip: 5
  , sunhours: 6
  , relhumid: 7
};

var Tools = {
    texture2lambda: function (sand, clay) {
      return (2.0 * (sand * sand * 0.575)) + (clay * 0.1) + ((1.0 - sand - clay) * 0.35);
    }
  , sunshine2globalRadiation: function (yd, sonn, lat, asMJpm2pd) {
      var pi=4.0*atan(1.0);
      var dec=-23.4*cos(2*pi*(yd+10)/365);
      var sinld=sin(dec*pi/180)*sin(lat*pi/180);
      var cosld=cos(dec*pi/180)*cos(lat*pi/180);
      var dl=12*(pi+2*asin(sinld/cosld))/pi;
      var dle=12*(pi+2*asin((-sin(8*pi/180)+sinld)/cosld))/pi;
      var rdn=3600*(sinld*dl+24/pi*cosld*sqrt(1.0-(sinld/cosld)*(sinld/cosld)));
      var drc=1300*rdn*exp(-0.14/(rdn/(dl*3600)));
      var dro=0.2*drc;
      var dtga=sonn/dle*drc+(1-sonn/dle)*dro;
      var t = dtga/10000.0;
      //convert J/cm²/d to MJ/m²/d
      //1cm²=1/(100*100)m², 1J = 1/1000000MJ
      //-> (t * 100.0 * 100.0) / 1000000.0 -> t / 100
      return asMJpm2pd ? t/100.0 : t;
    }
};

// TODO: do not change JS types. Instead create own type.

Date.prototype.isValid = function () { 
  return (this.toDateString() !== 'Invalid Date'); 
};

Date.prototype.isLeapYear = function () { 
  return (ceil((new Date(this.getFullYear() + 1, 0, 1) - new Date(this.getFullYear(), 0, 1)) / (24 * 60 * 60 * 1000)) === 366); 
};



/*
  Changes:
    - vs_SoilBulkDensity: wenn nicht in json, dann aus rawdensity schätzen.

*/


var YieldComponent = function (oid, yp, ydm) {
  
  var yc = (arguments[0] instanceof YieldComponent) ? arguments[0] : null;

  this.organId = (yc) ? yc.organId : oid;
  this.yieldPercentage = (yc) ? yc.yieldPercentage : yp;
  this.yieldDryMatter = (yc) ? yc.yieldDryMatter : ydm;
  
};


var NMinCropParameters = function (samplingDepth, nTarget, nTarget30) {

  this.samplingDepth = samplingDepth || 0;
  this.nTarget = nTarget || 0;
  this.nTarget30 = nTarget30 || 0;

  this.toString = function () {
    return "samplingDepth: " + this.samplingDepth + " nTarget: " + this.nTarget + " nTarget40: " + this.nTarget30;
  };

};


var NMinUserParameters = function (min, max, delayInDays) {

  this.min = min || 0;
  this.max = max || 0;
  this.delayInDays = delayInDays || 0;

  this.toString = function () {
    return "min: " + min + " max: " + max + " delay: " + delayInDays + " days";
  };

};


var IrrigationParameters = function (n, s) {
  
  this.nitrateConcentration = n || 0;
  this.sulfateConcentration = s || 0;

  this.toString = function () {
    return "nitrateConcentration: " + this.nitrateConcentration + " sulfateConcentration: " + this.sulfateConcentration;
  };

};


var AutomaticIrrigationParameters = function (a, t, n, s) {
  
  this.amount = a || 17; 
  this.threshold = t || 0.35;
  this.nitrateConcentration = n || 0;
  this.sulfateConcentration = s || 0;

  this.toString = function () {
    return "amount: " + this.amount + " treshold: " + this.treshold + " " + this.prototype.toString();
  };

};

AutomaticIrrigationParameters.prototype = new IrrigationParameters();


var ResidueParameters = function () {
  this.vo_AOM_DryMatterContent = 0.289;
  this.vo_AOM_NH4Content = 0.007;
  this.vo_AOM_NO3Content = 0.0;
  this.vo_AOM_CarbamidContent = 0.0;
  this.vo_AOM_SlowDecCoeffStandard = 2.0e-4;
  this.vo_AOM_FastDecCoeffStandard = 2.0e-3;
  this.vo_PartAOM_to_AOM_Slow = 0.72;
  this.vo_PartAOM_to_AOM_Fast = 0.18;
  this.vo_CN_Ratio_AOM_Slow = 100.0;
  this.vo_CN_Ratio_AOM_Fast = 7.3;
  this.vo_PartAOM_Slow_to_SMB_Slow = 0.0;
  this.vo_PartAOM_Slow_to_SMB_Fast = 1.0;
};


var AOM_Properties = function () {
  this.vo_AOM_Slow = 0.0;  /**< C content in slowly decomposing added organic matter pool [kgC m-3] */
  this.vo_AOM_Fast = 0.0; /**< C content in rapidly decomposing added organic matter pool [kgC m-3] */
  this.vo_AOM_SlowDecRate = 0.0; /**< Rate for slow AOM transformation that will be calculated. */
  this.vo_AOM_FastDecRate = 0.0; /**< Rate for fast AOM transformation that will be calculated. */
  this.vo_AOM_SlowDecCoeff = 0.0; /**< Is dependent on environment */
  this.vo_AOM_FastDecCoeff = 0.0; /**< Is dependent on environment */
  this.vo_AOM_SlowDecCoeffStandard = 1.0; /**< Decomposition rate coefficient for slow AOM pool at standard conditions */
  this.vo_AOM_FastDecCoeffStandard = 1.0; /**< Decomposition rate coefficient for fast AOM pool at standard conditions */
  this.vo_PartAOM_Slow_to_SMB_Slow = 0.0; /**< Partial transformation from AOM to SMB (soil microbiological biomass) for slow AOMs. */
  this.vo_PartAOM_Slow_to_SMB_Fast = 0.0; /**< Partial transformation from AOM to SMB (soil microbiological biomass) for fast AOMs.*/
  this.vo_CN_Ratio_AOM_Slow = 1.0; /**< Used for calculation N-value if only C-value is known. Usually a constant value.*/
  this.vo_CN_Ratio_AOM_Fast = 1.0; /**< C-N-Ratio is dependent on the nutritional condition of the plant. */
  this.vo_DaysAfterApplication = 0; /**< Fertilization parameter */  
  this.vo_AOM_DryMatterContent = 0.0; /**< Fertilization parameter */
  this.vo_AOM_NH4Content = 0.0; /**< Fertilization parameter */
  this.vo_AOM_SlowDelta = 0.0; /**< Difference of AOM slow between to timesteps */
  this.vo_AOM_FastDelta = 0.0; /**< Difference of AOM slow between to timesteps */
  this.incorporation = false;  /**< True if organic fertilizer is added with a subsequent incorporation. */
};


var CropParameters = function () {

  this.pc_NumberOfDevelopmentalStages = 0; 
  this.pc_CropName; /**< Name */
  this.pc_NumberOfOrgans = 0; 
  this.pc_CarboxylationPathway; 
  this.pc_DefaultRadiationUseEfficiency;
  this.pc_FixingN;
  this.pc_InitialKcFactor; 
  this.pc_LuxuryNCoeff; 
  this.pc_MaxAssimilationRate;
  this.pc_MaxCropDiameter;
  this.pc_MaxCropHeight;
  this.pc_CropHeightP1; 
  this.pc_CropHeightP2; 
  this.pc_StageAtMaxHeight;
  this.pc_StageAtMaxDiameter; 
  this.pc_MinimumNConcentration; 
  this.pc_MinimumTemperatureForAssimilation; 
  this.pc_NConcentrationAbovegroundBiomass; 
  this.pc_NConcentrationB0; 
  this.pc_NConcentrationPN; 
  this.pc_NConcentrationRoot; 
  this.pc_ResidueNRatio; 
  this.pc_DevelopmentAccelerationByNitrogenStress; 

  this.pc_AssimilatePartitioningCoeff = [];
  this.pc_OrganSenescenceRate = [];

  this.pc_BaseDaylength = [];
  this.pc_BaseTemperature = [];
  this.pc_OptimumTemperature = [];
  this.pc_DaylengthRequirement = [];
  this.pc_DroughtStressThreshold = [];
  this.pc_OrganMaintenanceRespiration = [];
  this.pc_OrganGrowthRespiration = [];
  this.pc_SpecificLeafArea = [];
  this.pc_StageMaxRootNConcentration = [];
  this.pc_StageKcFactor = [];
  this.pc_StageTemperatureSum = [];
  this.pc_VernalisationRequirement = [];
  this.pc_InitialOrganBiomass = [];
  this.pc_CriticalOxygenContent = [];

  this.pc_CropSpecificMaxRootingDepth;
  this.pc_AbovegroundOrgan = [];
  this.pc_StorageOrgan = [];

  this.pc_SamplingDepth;
  this.pc_TargetNSamplingDepth;
  this.pc_TargetN30;
  this.pc_HeatSumIrrigationStart;
  this.pc_HeatSumIrrigationEnd;
  this.pc_MaxNUptakeParam;
  this.pc_RootDistributionParam;
  this.pc_PlantDensity;
  this.pc_RootGrowthLag;
  this.pc_MinimumTemperatureRootGrowth;
  this.pc_InitialRootingDepth;
  this.pc_RootPenetrationRate;
  this.pc_RootFormFactor;
  this.pc_SpecificRootLength;
  this.pc_StageAfterCut;
  this.pc_CriticalTemperatureHeatStress;
  this.pc_LimitingTemperatureHeatStress;
  this.pc_BeginSensitivePhaseHeatStress;
  this.pc_EndSensitivePhaseHeatStress;
  this.pc_CuttingDelayDays;
  this.pc_FieldConditionModifier;
  this.pc_DroughtImpactOnFertilityFactor;

  this.organIdsForPrimaryYield = [];
  this.organIdsForSecondaryYield = [];
  this.organIdsForCutting = [];

  // test jv kg DM ha-1
  // this.maxRootDM = 0;

  this.resizeStageOrganVectors = function () {
    var is = this.pc_NumberOfDevelopmentalStages - this.pc_AssimilatePartitioningCoeff.length;
    for (var i = 0; i < is; i++) {
      var a = new Array(this.pc_NumberOfOrgans);
      this.pc_AssimilatePartitioningCoeff.push(a);
    } 
    var is = this.pc_NumberOfDevelopmentalStages - this.pc_OrganSenescenceRate.length;
    for (var i = 0; i < is; i++) {
      var a = new Array(this.pc_NumberOfOrgans);
      this.pc_OrganSenescenceRate.push(a);
    }
  };

  /**
   * @brief Returns a string of information about crop parameters.
   *
   * Generates a string that contains all relevant crop parameter information.
   *
   * @return String of crop information.
   */
  this.toString = function () {

    var s = '', endl = '\n';

    s += "pc_CropName:\t" + this.pc_CropName + endl;

    s += "------------------------------------------------" + endl;

    s += "pc_NumberOfDevelopmentalStages:\t" + this.pc_NumberOfDevelopmentalStages + endl;
    s += "pc_NumberOfOrgans:\t\t\t\t" + this.pc_NumberOfOrgans + endl;
    
    s += "------------------------------------------------" + endl;

    // assimilate partitioning coefficient matrix
    s += "pc_AssimilatePartitioningCoeff:\t" + endl;
    for (var i = 0; i < this.pc_AssimilatePartitioningCoeff.length; i++)   {
      for (var j = 0; j < this.pc_AssimilatePartitioningCoeff[i].length; j++) {
        s += this.pc_AssimilatePartitioningCoeff[i][j] + " ";
      }
      s += endl;
    }
    s += "------------------------------------------------" + endl;

    s += "pc_CarboxylationPathway:\t\t\t\t" + this.pc_CarboxylationPathway + endl;
    s += "pc_MaxAssimilationRate:\t\t\t\t\t" + this.pc_MaxAssimilationRate + endl;
    s += "pc_MinimumTemperatureForAssimilation:\t" + this.pc_MinimumTemperatureForAssimilation + endl;
    s += "pc_CropSpecificMaxRootingDepth:\t\t\t" + this.pc_CropSpecificMaxRootingDepth + endl;
    s += "pc_InitialKcFactor:\t\t\t\t\t\t" + this.pc_InitialKcFactor + endl;
    s += "pc_MaxCropDiameter:\t\t\t\t\t\t" + this.pc_MaxCropDiameter + endl;
    s += "pc_StageAtMaxDiameter:\t\t\t\t\t" + this.pc_StageAtMaxDiameter + endl;
    s += "pc_PlantDensity:\t\t\t\t\t\t" + this.pc_PlantDensity + endl;
    s += "pc_DefaultRadiationUseEfficiency:\t\t" + this.pc_DefaultRadiationUseEfficiency + endl;
    s += "pc_StageAfterCut:\t\t\t\t\t\t" + this.pc_StageAfterCut + endl;
    s += "pc_CuttingDelayDays:\t\t\t\t\t" + this.pc_CuttingDelayDays + endl;

    s += "------------------------------------------------" + endl;

    s += "pc_RootDistributionParam:\t\t\t" + this.pc_RootDistributionParam + endl;
    s += "pc_RootGrowthLag:\t\t\t\t\t" + this.pc_RootGrowthLag + endl;
    s += "pc_MinimumTemperatureRootGrowth:\t" + this.pc_MinimumTemperatureRootGrowth + endl;
    s += "pc_InitialRootingDepth:\t\t\t\t" + this.pc_InitialRootingDepth + endl;
    s += "pc_RootPenetrationRate:\t\t\t\t" + this.pc_RootPenetrationRate + endl;
    s += "pc_RootFormFactor:\t\t\t\t\t" + this.pc_RootFormFactor + endl;
    s += "pc_SpecificRootLength:\t\t\t\t" + this.pc_SpecificRootLength + endl;

    s += "------------------------------------------------" + endl;

    s += "pc_MaxCropHeight:\t\t" + this.pc_MaxCropHeight + endl;
    s += "pc_CropHeightP1:\t\t" + this.pc_CropHeightP1 + endl;
    s += "pc_CropHeightP2:\t\t" + this.pc_CropHeightP2 + endl;
    s += "pc_StageAtMaxHeight:\t" + this.pc_StageAtMaxHeight + endl;

    s += "------------------------------------------------" + endl;

    s += "pc_FixingN:\t\t\t\t\t" + this.pc_FixingN + endl;
    s += "pc_MinimumNConcentration:\t" + this.pc_MinimumNConcentration + endl;
    s += "pc_LuxuryNCoeff:\t\t\t" + this.pc_LuxuryNCoeff + endl;
    s += "pc_NConcentrationB0:\t\t" + this.pc_NConcentrationB0 + endl;
    s += "pc_NConcentrationPN:\t\t" + this.pc_NConcentrationPN + endl;
    s += "pc_NConcentrationRoot:\t\t" + this.pc_NConcentrationRoot + endl;
    s += "pc_ResidueNRatio:\t\t\t" + this.pc_ResidueNRatio + endl;
    s += "pc_MaxNUptakeParam:\t\t\t" + this.pc_MaxNUptakeParam + endl;

    s += "------------------------------------------------" + endl;

    s += "pc_DevelopmentAccelerationByNitrogenStress:\t" + this.pc_DevelopmentAccelerationByNitrogenStress + endl;
    s += "pc_NConcentrationAbovegroundBiomass:\t\t" + this.pc_NConcentrationAbovegroundBiomass + endl;
    s += "pc_DroughtImpactOnFertilityFactor:\t\t\t" + this.pc_DroughtImpactOnFertilityFactor + endl;

    s += "------------------------------------------------" + endl;

    s += "pc_SamplingDepth:\t\t\t\t\t" + this.pc_SamplingDepth + endl;
    s += "pc_TargetNSamplingDepth:\t\t\t" + this.pc_TargetNSamplingDepth + endl;
    s += "pc_TargetN30:\t\t\t\t\t\t" + this.pc_TargetN30 + endl;
    s += "pc_HeatSumIrrigationStart:\t\t\t" + this.pc_HeatSumIrrigationStart + endl;
    s += "pc_HeatSumIrrigationEnd:\t\t\t" + this.pc_HeatSumIrrigationEnd + endl;
    s += "pc_CriticalTemperatureHeatStress:\t" + this.pc_CriticalTemperatureHeatStress + endl;
    s += "pc_LimitingTemperatureHeatStress:\t" + this.pc_LimitingTemperatureHeatStress + endl;
    s += "pc_BeginSensitivePhaseHeatStress:\t" + this.pc_BeginSensitivePhaseHeatStress + endl;
    s += "pc_EndSensitivePhaseHeatStress:\t\t" + this.pc_EndSensitivePhaseHeatStress + endl;

    //s + endl;
    s += "------------------------------------------------" + endl;
    // above-ground organ
    s += "pc_AbovegroundOrgan:" + endl;
    for (var i = 0; i < this.pc_AbovegroundOrgan.length; i++) 
      s += (this.pc_AbovegroundOrgan[i] == 1) + " ";

    s += endl;
    s += endl;

    // initial organic biomass
    s  + "pc_InitialOrganBiomass:" + endl;
    for (var i = 0; i < this.pc_InitialOrganBiomass.length; i++)
      s += this.pc_InitialOrganBiomass[i] + " ";

    s += endl;
    s += endl;

    // organ maintenance respiration rate
    s += "pc_OrganMaintenanceRespiration:" + endl;
    for (var i = 0; i < this.pc_OrganMaintenanceRespiration.length; i++)
      s += this.pc_OrganMaintenanceRespiration[i] + " ";

    s += endl;
    s += endl;

    // organ growth respiration rate
    s  += "pc_OrganGrowthRespiration:" + endl;
    for (var i = 0; i < this.pc_OrganGrowthRespiration.length; i++)
      s += this.pc_OrganGrowthRespiration[i] + " ";

    s += endl;
    s += endl;

    // organ senescence rate
    s += "pc_OrganSenescenceRate:" + endl;
    for (var i = 0; i < this.pc_OrganSenescenceRate.length; i++) {
      for (var j = 0; j < this.pc_OrganSenescenceRate[i].length; j++) {
        s += this.pc_OrganSenescenceRate[i][j] + " ";    
      }
      s += endl;
   }

    s += "------------------------------------------------" + endl;
    //s + endl;  
    //s + endl;  

    // stage temperature sum
    s += "pc_StageTemperatureSum:" + endl;
    for (var i = 0; i < this.pc_StageTemperatureSum.length; i++)
      s += this.pc_StageTemperatureSum[i] + " ";

    s += endl;
    s += endl;  

    // Base day length
    s += "pc_BaseDaylength: " + endl;
    for (var i = 0; i < this.pc_BaseDaylength.length; i++)
      s += this.pc_BaseDaylength[i] + " ";

    s += endl;
    s += endl;  

    // base temperature
    s += "pc_BaseTemperature: " + endl;
    for (var i = 0; i < this.pc_BaseTemperature.length; i++)
      s += this.pc_BaseTemperature[i] + " ";

    s += endl;
    s += endl;  

    // optimum temperature
    s += "pc_OptimumTemperature: " + endl;
    for (var i = 0; i < this.pc_OptimumTemperature.length; i++)
      s += this.pc_OptimumTemperature[i] + " ";

    s += endl;
    s += endl;  

    // day length requirement
    s += "pc_DaylengthRequirement: " + endl;
    for (var i = 0; i < this.pc_DaylengthRequirement.length; i++)
      s += this.pc_DaylengthRequirement[i] + " ";

    s += endl;
    s += endl;  

    // specific leaf area
    s += "pc_SpecificLeafArea:" + endl;
    for (var i = 0; i < this.pc_SpecificLeafArea.length; i++)
      s += this.pc_SpecificLeafArea[i] + " ";

    s += endl;
    s += endl;  

    // stage max root n content
    s += "pc_StageMaxRootNConcentration:" + endl;
    for (var i = 0; i < this.pc_StageMaxRootNConcentration.length; i++)
      s += this.pc_StageMaxRootNConcentration[i] + " ";

    s += endl;
    s += endl;  

    // stage kc factor
    s += "pc_StageKcFactor:" + endl;
    for (var i = 0; i < this.pc_StageKcFactor.length; i++)
      s += this.pc_StageKcFactor[i] + " ";

    s += endl;
    s += endl;  

    // drought stress treshold
    s += "pc_DroughtStressThreshold:" + endl;
    for (var i = 0; i < this.pc_DroughtStressThreshold.length; i++)
      s += this.pc_DroughtStressThreshold[i] + " ";

    s += endl;
    s += endl;  

    // vernalisation requirement
    s += "pc_VernalisationRequirement:" + endl;
    for (var i = 0; i < this.pc_VernalisationRequirement.length; i++)
      s += this.pc_VernalisationRequirement[i] + " ";

    s += endl;
    s += endl;  

    // critical oxygen content
    s += "pc_CriticalOxygenContent:" + endl;
    for (var i = 0; i < this.pc_CriticalOxygenContent.length; i++)
      s += this.pc_CriticalOxygenContent[i] + " ";

    s += endl;

    return s;
  };


};


var GeneralParameters = function (
  _ps_LayerThickness,
  ps_ProfileDepth, 
  ps_MaximumMineralisationDepth,
  pc_NitrogenResponseOn,
  pc_WaterDeficitResponseOn,
  pc_EmergenceFloodingControlOn,
  pc_EmergenceMoistureControlOn
) {

  this._ps_LayerThickness = _ps_LayerThickness || 0.1,
  this.ps_ProfileDepth = ps_ProfileDepth || 2.0,
  this.ps_LayerThickness  = new Float64Array(int(this.ps_ProfileDepth / this._ps_LayerThickness)),
  this.ps_MaxMineralisationDepth = ps_MaximumMineralisationDepth || 0.4,
  this.pc_NitrogenResponseOn = pc_NitrogenResponseOn || true,
  this.pc_WaterDeficitResponseOn = pc_WaterDeficitResponseOn || true,
  this.pc_EmergenceFloodingControlOn = pc_EmergenceFloodingControlOn || true,
  this.pc_EmergenceMoistureControlOn = pc_EmergenceMoistureControlOn || true;

  for (var i = 0; i < this.ps_LayerThickness.length; i++)
    this.ps_LayerThickness[i] = this._ps_LayerThickness;

  this.ps_NumberOfLayers = function () { 
    return this.ps_LayerThickness.length;
  };

};


var SiteParameters = function () {
    
  this.vs_Latitude = 60.0;
  this.vs_Slope = 0.01;
  this.vs_HeightNN = 50.0;
  this.vs_GroundwaterDepth = 70.0;
  this.vs_Soil_CN_Ratio = 10.0;
  this.vs_DrainageCoeff = 1.0;
  this.vq_NDeposition = 30.0;
  this.vs_MaxEffectiveRootingDepth = 2.0;

};


var SoilParameters = function () {

  this.vs_SoilSandContent = 0.4;
  this.vs_SoilClayContent = 0.05;
  this.vs_SoilpH = 6.9;
  this._vs_SoilRawDensity = 0;
  this._vs_SoilOrganicCarbon = -1;
  this._vs_SoilOrganicMatter = -1;
  this.vs_SoilAmmonium = -1;
  this.vs_SoilNitrate = -1;
  // TODO: neuer Parameter g cm-3
  this._vs_BulkDensity = -1;

  this.isValid = function () {

    var is_valid = true;

    if (this.vs_FieldCapacity <= 0) {
        console.log("SoilParameters::Error: No field capacity defined in database for " + this.vs_SoilTexture + " , RawDensity: "+ this._vs_SoilRawDensity);
        is_valid = false;
    }
    if (this.vs_Saturation <= 0) {
        console.log("SoilParameters::Error: No saturation defined in database for " + this.vs_SoilTexture + " , RawDensity: " + this._vs_SoilRawDensity);
        is_valid = false;
    }
    if (this.vs_PermanentWiltingPoint <= 0) {
        console.log("SoilParameters::Error: No saturation defined in database for " + this.vs_SoilTexture + " , RawDensity: " + this._vs_SoilRawDensity);
        is_valid = false;
    }

    if (this.vs_SoilSandContent<0) {
        console.log("SoilParameters::Error: Invalid soil sand content: "+ this.vs_SoilSandContent);
        is_valid = false;
    }

    if (this.vs_SoilClayContent<0) {
        console.log("SoilParameters::Error: Invalid soil clay content: "+ this.vs_SoilClayContent);
        is_valid = false;
    }

    if (this.vs_SoilpH<0) {
        console.log("SoilParameters::Error: Invalid soil ph value: "+ this.vs_SoilpH);
        is_valid = false;
    }

    if (this.vs_SoilStoneContent<0) {
        console.log("SoilParameters::Error: Invalid soil stone content: "+ this.vs_SoilStoneContent);
        is_valid = false;
    }

    if (this.vs_Saturation<0) {
        console.log("SoilParameters::Error: Invalid value for saturation: "+ this.vs_Saturation);
        is_valid = false;
    }

    if (this.vs_PermanentWiltingPoint<0) {
        console.log("SoilParameters::Error: Invalid value for permanent wilting point: "+ this.vs_PermanentWiltingPoint);
        is_valid = false;
    }

    if (this._vs_SoilRawDensity<0) {
        console.log("SoilParameters::Error: Invalid soil raw density: "+ this._vs_SoilRawDensity);
        is_valid = false;
    }

    return is_valid;
  };

  /**
   * @brief Returns raw density of soil
   * @return raw density of soil
   */
  this.vs_SoilRawDensity = function () {
    // conversion from g cm-3 in kg m-3
    return this._vs_SoilRawDensity * 1000;
  };

  /**
   * @brief Sets soil raw density
   * @param srd New soil rad density
   */
  this.set_vs_SoilRawDensity = function (srd) {
    this._vs_SoilRawDensity = srd;
  };

  /**
   * @brief Returns soil organic carbon.
   * @return soil organic carbon
   */
  this.vs_SoilOrganicCarbon = function () {
    if (this._vs_SoilOrganicMatter < 0)
      return this._vs_SoilOrganicCarbon;

    return this._vs_SoilOrganicMatter * organicConstants.po_SOM_to_C;
  };

  /**
   * @brief Setter of soil organic carbon.
   * @param soc New soil organic carbon
   */
  this.set_vs_SoilOrganicCarbon = function (soc) {
    this._vs_SoilOrganicCarbon = soc;
  };

  /**
   * @brief Getter for soil organic matter.
   * @return Soil organic matter
   */
  this.vs_SoilOrganicMatter = function () {
    if (this._vs_SoilOrganicCarbon < 0)
      return this._vs_SoilOrganicMatter;
    return this._vs_SoilOrganicCarbon / organicConstants.po_SOM_to_C;
  };

  /**
   * @brief Setter for soil organic matter.
   * @param som New soil organic matter
   */
  this.set_vs_SoilOrganicMatter = function (som) {
    this._vs_SoilOrganicMatter = som;
  };

  /**
   * @brief Getter for silt content
   * @return silt content
   */
  this.vs_SoilSiltContent = function () {
    if ((this.vs_SoilSandContent - 0.001) < 0 && (this.vs_SoilClayContent - 0.001) < 0)
      return 0;

    return 1 - this.vs_SoilSandContent - this.s_SoilClayContent;
  };

  /**
   * @brief Getter for soil bulk density.
   * @return bulk density [kg m-3]
   */
  this.vs_SoilBulkDensity = function () {
    if (this._vs_BulkDensity <= 0)
      return (this._vs_SoilRawDensity + (0.009 * 100 * this.vs_SoilClayContent)) * 1000;
    else
      return this._vs_BulkDensity * 1000;
  };

  /**
   * @brief Setter for soil bulk density.
   * @param soilBulkDensity [g cm-3]
   */
  this.set_vs_SoilBulkDensity = function (soilBulkDensity) {
    this._vs_BulkDensity = soilBulkDensity;
  };

  /**
   * @brief Returns lambda from soil texture
   *
   * @param lambda
   *
   * @return
   */
  this.texture2lambda = function (sand, clay) {
    return conversion.texture2lambda(sand, clay);
  };

};


var MineralFertiliserParameters = function (name, carbamid, no3, nh4) {

  var name = name,
      vo_Carbamid = carbamid,
      vo_NH4 = nh4,
      vo_NO3 = no3;

  return {
    /**
     * @brief Returns name of fertiliser.
     * @return Name
     */
    getName: function () { 
      return name; 
    },
    /**
     * @brief Returns carbamid part in percentage of fertiliser.
     * @return Carbamid in percent
     */
    getCarbamid: function () { 
      return vo_Carbamid; 
    },
    /**
     * @brief Returns ammonium part of fertliser.
     * @return Ammonium in percent
     */
    getNH4: function () { 
      return vo_NH4; 
    },
    /**
     * @brief Returns nitrat part of fertiliser
     * @return Nitrat in percent
     */
    getNO3: function () { 
      return vo_NO3; 
    },
    /**
     * @brief Sets name of fertiliser
     * @param name
     */
    setName: function (_name) { 
      name = name_; 
    },
    /**
     * Sets carbamid part of fertilisers
     * @param vo_Carbamid percent
     */
    setCarbamid: function (_vo_Carbamid) {
      vo_Carbamid = _vo_Carbamid;
    },
    /**
     * @brief Sets nitrat part of fertiliser.
     * @param vo_NH4
     */
    setNH4: function (_vo_NH4) { 
      vo_NH4 = _vo_NH4; 
    },
    /**
     * @brief Sets nitrat part of fertiliser.
     * @param vo_NO3
     */
    setNO3: function (_vo_NO3) { 
      vo_NO3 = _vo_NO3; 
    }
  };

};


var OrganicMatterParameters = function (omp) {

  this.name = "";
  this.vo_AOM_DryMatterContent = omp ? omp.vo_AOM_DryMatterContent : 0.0;
  this.vo_AOM_NH4Content = omp ? omp.vo_AOM_NH4Content : 0.0;
  this.vo_AOM_NO3Content = omp ? omp.vo_AOM_NO3Content : 0.0;
  this.vo_AOM_CarbamidContent = omp ? omp.vo_AOM_CarbamidContent : 0.0;
  this.vo_AOM_SlowDecCoeffStandard = omp ? omp.vo_AOM_SlowDecCoeffStandard : 0.0;
  this.vo_AOM_FastDecCoeffStandard = omp ? omp.vo_AOM_FastDecCoeffStandard : 0.0;
  this.vo_PartAOM_to_AOM_Slow = omp ? omp.vo_PartAOM_to_AOM_Slow : 0.0;
  this.vo_PartAOM_to_AOM_Fast = omp ? omp.vo_PartAOM_to_AOM_Fast : 0.0;
  this.vo_CN_Ratio_AOM_Slow = omp ? omp.vo_CN_Ratio_AOM_Slow : 0.0;
  this.vo_CN_Ratio_AOM_Fast = omp ? omp.vo_CN_Ratio_AOM_Fast : 0.0;
  this.vo_PartAOM_Slow_to_SMB_Slow = omp ? omp.vo_PartAOM_Slow_to_SMB_Slow : 0.0;
  this.vo_PartAOM_Slow_to_SMB_Fast = omp ? omp.vo_PartAOM_Slow_to_SMB_Fast : 0.0;
  this.vo_NConcentration = 0.0;

  this.toString = function () {
    var s = '', endl = '\n';
    s += "Name: " + this.name + endl
      + "vo_NConcentration: " + this.vo_NConcentration + endl
      + "vo_DryMatter: " + this.vo_AOM_DryMatterContent + endl
      + "vo_NH4: " + this.vo_AOM_NH4Content + endl
      + "vo_NO3: " + this.vo_AOM_NO3Content + endl
      + "vo_NH2: " + this.vo_AOM_CarbamidContent + endl
      + "vo_kSlow: " + this.vo_AOM_SlowDecCoeffStandard + endl
      + "vo_kFast: " + this.vo_AOM_FastDecCoeffStandard + endl
      + "vo_PartSlow: " + this.vo_PartAOM_to_AOM_Slow + endl
      + "vo_PartFast: " + this.vo_PartAOM_to_AOM_Fast + endl
      + "vo_CNSlow: " + this.vo_CN_Ratio_AOM_Slow + endl
      + "vo_CNFast: " + this.vo_CN_Ratio_AOM_Fast + endl
      + "vo_SMBSlow: " + this.vo_PartAOM_Slow_to_SMB_Slow + endl
      + "vo_SMBFast: " + this.vo_PartAOM_Slow_to_SMB_Fast + endl;
    return s;
  };

};

/**
 * Class that holds information of crop defined by user.
 * @author Xenia Specka
 */
var UserCropParameters = function () {

  this.pc_ReferenceMaxAssimilationRate;
  this.pc_ReferenceLeafAreaIndex;
  this.pc_MaintenanceRespirationParameter1;
  this.pc_MaintenanceRespirationParameter2;
  this.pc_MinimumNConcentrationRoot;
  this.pc_MinimumAvailableN;
  this.pc_ReferenceAlbedo;
  this.pc_StomataConductanceAlpha;
  this.pc_SaturationBeta;
  this.pc_GrowthRespirationRedux;
  this.pc_MaxCropNDemand;
  this.pc_GrowthRespirationParameter1;
  this.pc_GrowthRespirationParameter2;
  this.pc_Tortuosity;

};


/**
 * Class that holds information about user defined environment parameters.
 * @author Xenia Specka
 */
var UserEnvironmentParameters = function () {
  this.p_UseNMinMineralFertilisingMethod;
  this.p_UseSecondaryYields;

  this.p_LayerThickness;
  this.p_Albedo;
  this.p_AthmosphericCO2;
  this.p_WindSpeedHeight;
  this.p_LeachingDepth;
  this.p_timeStep;
  this.p_MaxGroundwaterDepth = 20;
  this.p_MinGroundwaterDepth = 20;

  this.p_NumberOfLayers;
  this.p_StartPVIndex;
  this.p_JulianDayAutomaticFertilising;
  this.p_MinGroundwaterDepthMonth;
};

var UserInitialValues = function () {

  this.p_initPercentageFC = 0.8;    // Initial soil moisture content in percent field capacity
  this.p_initSoilNitrate = 0.0001;     // Initial soil nitrate content [kg NO3-N m-3]
  this.p_initSoilAmmonium = 0.0001;    // Initial soil ammonium content [kg NH4-N m-3]

};


/**
 * Class that holds information about user defined soil moisture parameters.
 * @author Xenia Specka
 */
var UserSoilMoistureParameters = function () {

  this.pm_CriticalMoistureDepth;
  this.pm_SaturatedHydraulicConductivity;
  this.pm_SurfaceRoughness;
  this.pm_GroundwaterDischarge;
  this.pm_HydraulicConductivityRedux;
  this.pm_SnowAccumulationTresholdTemperature;
  this.pm_KcFactor;
  this.pm_TemperatureLimitForLiquidWater;
  this.pm_CorrectionSnow;
  this.pm_CorrectionRain;
  this.pm_SnowMaxAdditionalDensity;
  this.pm_NewSnowDensityMin;
  this.pm_SnowRetentionCapacityMin;
  this.pm_RefreezeParameter1;
  this.pm_RefreezeParameter2;
  this.pm_RefreezeTemperature;
  this.pm_SnowMeltTemperature;
  this.pm_SnowPacking;
  this.pm_SnowRetentionCapacityMax;
  this.pm_EvaporationZeta;
  this.pm_XSACriticalSoilMoisture;
  this.pm_MaximumEvaporationImpactDepth;
  this.pm_MaxPercolationRate;
  this.pm_MoistureInitValue;

};


/**
 * Class that holds information about user defined soil temperature parameters.
 * @author Xenia Specka
 */
var UserSoilTemperatureParameters = function () {

  this.pt_NTau;
  this.pt_InitialSurfaceTemperature;
  this.pt_BaseTemperature;
  this.pt_QuartzRawDensity;
  this.pt_DensityAir;
  this.pt_DensityWater;
  this.pt_DensityHumus;
  this.pt_SpecificHeatCapacityAir;
  this.pt_SpecificHeatCapacityQuartz;
  this.pt_SpecificHeatCapacityWater;
  this.pt_SpecificHeatCapacityHumus;
  this.pt_SoilAlbedo;
  // according to sensitivity tests, soil moisture has minor
  // influence to the temperature and thus can be set as constant
  // by xenia
  this.pt_SoilMoisture = 0.25;

};


/**
 * Class that holds information about user defined soil transport parameters.
 * @author Xenia Specka
 */
var UserSoilTransportParameters = function () {

  this.pq_AD;
  this.pq_DiffusionCoefficientStandard;
  this.pq_NDeposition;

};


/**
 * Class that holds information about user-defined soil organic parameters.
 * @author Claas Nendel
 */
var UserSoilOrganicParameters = function () {

  this.po_SOM_FastDecCoeffStandard; //1.40e-4 [d-1], from DAISY manual 1.4e-4
  this.po_SMB_SlowMaintRateStandard; //1.00e-3 [d-1], from DAISY manual original 1.8e-3
  this.po_SMB_FastMaintRateStandard; //1.00e-2 [d-1], from DAISY manual
  this.po_SMB_SlowDeathRateStandard; //1.00e-3 [d-1], from DAISY manual
  this.po_SMB_FastDeathRateStandard; //1.00e-2 [d-1], from DAISY manual
  this.po_SMB_UtilizationEfficiency; //0.60 [], from DAISY manual 0.6
  this.po_SOM_SlowUtilizationEfficiency; //0.40 [], from DAISY manual 0.4
  this.po_SOM_FastUtilizationEfficiency; //0.50 [], from DAISY manual 0.5
  this.po_AOM_SlowUtilizationEfficiency; //0.40 [], from DAISY manual original 0.13
  this.po_AOM_FastUtilizationEfficiency; //0.10 [], from DAISY manual original 0.69
  this.po_AOM_FastMaxC_to_N; // 1000.0
  this.po_PartSOM_Fast_to_SOM_Slow; //0.30) [], Bruun et al. 2003
  this.po_PartSMB_Slow_to_SOM_Fast; //0.60) [], from DAISY manual
  this.po_PartSMB_Fast_to_SOM_Fast; //0.60 [], from DAISY manual
  this.po_PartSOM_to_SMB_Slow; //0.0150 [], optimised
  this.po_PartSOM_to_SMB_Fast; //0.0002 [], optimised
  this.po_CN_Ratio_SMB; //6.70 [], from DAISY manual
  this.po_LimitClayEffect; //0.25 [kg kg-1], from DAISY manual
  this.po_AmmoniaOxidationRateCoeffStandard; //1.0e-1[d-1], from DAISY manual
  this.po_NitriteOxidationRateCoeffStandard; //9.0e-1[d-1], fudged by Florian Stange
  this.po_TransportRateCoeff; //0.1 [d-1], from DAISY manual
  this.po_SpecAnaerobDenitrification; //0.1 //[g gas-N g CO2-C-1]
  this.po_ImmobilisationRateCoeffNO3; //0.5 //[d-1]
  this.po_ImmobilisationRateCoeffNH4; //0.5 //[d-1]
  this.po_Denit1; //0.2 Denitrification parameter
  this.po_Denit2; //0.8 Denitrification parameter
  this.po_Denit3; //0.9 Denitrification parameter
  this.po_HydrolysisKM; //0.00334 from Tabatabai 1973
  this.po_ActivationEnergy; //41000.0 from Gould et al. 1973
  this.po_HydrolysisP1; //4.259e-12 from Sadeghi et al. 1988
  this.po_HydrolysisP2; //1.408e-12 from Sadeghi et al. 1988
  this.po_AtmosphericResistance; //0.0025 [s m-1], from Sadeghi et al. 1988
  this.po_N2OProductionRate; //0.5 [d-1]
  this.po_Inhibitor_NH3; //1.0 [kg N m-3] NH3-induced inhibitor for nitrite oxidation

};


/**
   * Data structure that holds information about capillary rise rates.
 */
var CapillaryRiseRates = function () {

  //std::map<std::string, std::map<int, double> > 
  this.cap_rates_map = {};

  /**
     * Adds a capillary rise rate to data structure.
     */
  this.addRate = function (bodart, distance, value) {
    //        std::cout << "Add cap rate: " << bodart << "\tdist: " << distance << "\tvalue: " << value << std::endl;
    //cap_rates_map.insert(std::pair<std::string,std::map<int,double> >(bodart,std::pair<int,double>(distance,value)));
    if (this.cap_rates_map[bodart] === undefined)
      this.cap_rates_map[bodart] = {};
    this.cap_rates_map[bodart][distance] = value;
  };

  /**
     * Returns capillary rise rate for given soil type and distance to ground water.
     */
  this.getRate = function (bodart, distance) {

    var map = getMap(bodart);
    var size = 0;

    for (var prop in map) {
      if (map.hasOwnProperty(prop))
        size++;
    }    

    if (size <= 0 )
      console.log("Error. No capillary rise rates in data structure available.");

    return (this.cap_rates_map[bodart][distance] === undefined) ? 0.0 : this.cap_rates_map[bodart][distance];

  };


  this.getMap = function (bodart) {
    return this.cap_rates_map[bodart];
  };

  /**
     * Returns number of elements of internal map data structure.
     */
  this.size = function () { 
    var size = 0;

    for (var prop in this.cap_rates_map) {
      if (this.cap_rates_map.hasOwnProperty(prop))
        size++;
    } 

    return size;
  };

};

var RPSCDRes = function (initialized) {

  this.sat = 0;
  this.fc = 0;
  this.pwp = 0;
  this.initialized = (initialized === undefined) ? false : initialized;

};

var CentralParameterProvider = function () {

  this.userCropParameters = new UserCropParameters();
  this.userEnvironmentParameters = new UserEnvironmentParameters();
  this.userSoilMoistureParameters = new UserSoilMoistureParameters();
  this.userSoilTemperatureParameters = new UserSoilTemperatureParameters();
  this.userSoilTransportParameters = new UserSoilTransportParameters();
  this.userSoilOrganicParameters = new UserSoilOrganicParameters();
  // this.sensitivityAnalysisParameters = new SensitivityAnalysisParameters();
  this.capillaryRiseRates = null;
  this.userInitValues = new UserInitialValues();
  
};


/*
  Changes
    - Cutting.apply() 
      prim. yield auskommentiert, p.yield immer 0.00, da organId 0 ????
      store results
    - var Cutting = function ()
      + cropResult
*/

var WorkStep = function (date) {

  this._date = date;

  this.date = function () { 
    return this._date; 
  };

  this.setDate = function (date) {
    this._date = date; 
  };

  //! do whatever the workstep has to do
  this.apply = function (model) {};

  this.clone = function () {};

  this.toString = function () {
    return "date: " + this.date().toString();
  };

};


var Seed = function (date, crop) {

  this._date = date;
  this._crop = crop;

  this.setDate = function (date) {
    this._date = date;
    this._crop.setSeedAndHarvestDate(this.date(), this._crop.harvestDate());
  };

  this.apply = function (model) {
    console.log("seeding crop: " + this._crop.name() + " at: " + this.date().toString());
    model.seedCrop(this._crop);
  };

  this.clone = function () {
    return JSON.parse(JSON.stringify(this)); 
  };

  this.toString = function () {
    return "seeding at: " + this.date().toString() + " crop: " + this._crop.toString();
  };

};

Seed.prototype = new WorkStep();


var Harvest = function (at, crop, cropResult) {

  this._date = at;
  this._crop = crop;
  this._cropResult = cropResult;

  this.setDate = function (date) {
    this._date = date;
    this._crop.setSeedAndHarvestDate(this._crop.seedDate(), this.date());
  };

  this.apply = function (model) {
  
    if (model.cropGrowth()) {

      console.log("harvesting crop: " + this._crop.name() + " at: " + this.date().toString());

      if (model.currentCrop() == this._crop) {

        if (model.cropGrowth()) {
          this._crop.setHarvestYields(
            model.cropGrowth().get_FreshPrimaryCropYield() /
            100.0, model.cropGrowth().get_FreshSecondaryCropYield() / 100.0
          );
          this._crop.setHarvestYieldsTM(
            model.cropGrowth().get_PrimaryCropYield() / 100.0,
            model.cropGrowth().get_SecondaryCropYield() / 100.0
          );
          this._crop.setYieldNContent(
            model.cropGrowth().get_PrimaryYieldNContent(),
            model.cropGrowth().get_SecondaryYieldNContent()
          );
          this._crop.setSumTotalNUptake(model.cropGrowth().get_SumTotalNUptake());
          this._crop.setCropHeight(model.cropGrowth().get_CropHeight());
          this._crop.setAccumulatedETa(model.cropGrowth().get_AccumulatedETa());
        }

        //store results for this crop
        this._cropResult['id'] = this._crop.id();
        this._cropResult['name'] = this._crop.name();
        this._cropResult['primaryYield'] = roundN(2, this._crop.primaryYield());
        this._cropResult['secondaryYield'] = roundN(2, this._crop.secondaryYield());
        this._cropResult['primaryYieldTM'] = roundN(2, this._crop.primaryYieldTM());
        this._cropResult['secondaryYieldTM'] = roundN(2, this._crop.secondaryYieldTM());
        this._cropResult['sumIrrigation'] = roundN(2, this._crop.appliedIrrigationWater());
        this._cropResult['biomassNContent'] = roundN(2, this._crop.primaryYieldN());
        this._cropResult['aboveBiomassNContent'] = roundN(2, this._crop.aboveGroundBiomasseN());
        this._cropResult['daysWithCrop'] = roundN(2, model.daysWithCrop());
        this._cropResult['sumTotalNUptake'] = roundN(2, this._crop.sumTotalNUptake());
        this._cropResult['cropHeight'] = roundN(2, this._crop.cropHeight());
        this._cropResult['sumETaPerCrop'] = roundN(2, this._crop.get_AccumulatedETa());
        this._cropResult['NStress'] = roundN(2, model.getAccumulatedNStress());
        this._cropResult['WaterStress'] = roundN(2, model.getAccumulatedWaterStress());
        this._cropResult['HeatStress'] = roundN(2, model.getAccumulatedHeatStress());
        this._cropResult['OxygenStress'] = roundN(2, model.getAccumulatedOxygenStress());
        this._cropResult['sumFertiliser'] = roundN(2, model.sumFertiliser());

        model.harvestCurrentCrop();

      } else {
          console.log("Crop: " + model.currentCrop().toString()
            + " to be harvested isn't actual crop of this Harvesting action: "
            + this._crop.toString());
      }
    }
  
  };

  this.clone = function () {
    return JSON.parse(JSON.stringify(this)); 
  };

  this.toString = function () {
    return "harvesting at: " + this.date().toString() + " crop: " + this._crop.toString();
  };

};

Harvest.prototype = new WorkStep();


var Cutting = function (at, crop, cropResult) {
  
  this._date = at;
  this._crop = crop;
  this._cropResult = cropResult;

  this.apply = function (model) {
  
    console.log("Cutting crop: " + this._crop.name() + " at: " + this.date().toString());
    if (model.currentCrop() == this._crop) {
      // if (model.cropGrowth()) {
        // this._crop.setHarvestYields(
        //   model.cropGrowth().get_FreshPrimaryCropYield() /
        //   100.0, model.cropGrowth().get_FreshSecondaryCropYield() / 100.0
        // );
        // this._crop.setHarvestYieldsTM(
        //   model.cropGrowth().get_PrimaryCropYield() / 100.0,
        //   model.cropGrowth().get_SecondaryCropYield() / 100.0
        // );
        // this._crop.addCuttingYieldDM(model.cropGrowth().get_PrimaryCropYield() / 100.0);
      // }
      // this._crop.setYieldNContent(
      //   model.cropGrowth().get_PrimaryYieldNContent(),
      //   model.cropGrowth().get_SecondaryYieldNContent()
      // );
      // this._crop.setSumTotalNUptake(model.cropGrowth().get_SumTotalNUptake());
      // this._crop.setCropHeight(model.cropGrowth().get_CropHeight());

      var cut = {
          id: this._crop.id()
        , name: this._crop.name()
        , date: this._date
        , primaryYieldTM: model.cropGrowth().get_PrimaryCropYield() / 100.0
      };

      if (fs) {
        var str = '';
        str += this._date.getFullYear() + ';' + round(cut.primaryYieldTM) + '\n';
        fs.appendFileSync('./out/cutting_yields.csv', str, { encoding: 'utf8' });

      }
      //store results for this crop
      if (!this._cropResult.cuts)
        this._cropResult.cuts = [];
      this._cropResult.cuts.push(cut);

      if (model.cropGrowth())
          model.cropGrowth().applyCutting();
    }
  
  };

  this.clone = function () {
    return JSON.parse(JSON.stringify(this)); 
  };

  this.toString = function () {
    return "Cutting at: " + this.date().toString() + " crop: " + this._crop.toString();
  };
};

Cutting.prototype = new WorkStep();


var MineralFertiliserApplication = function (at, partition, amount) {

  this._date = at;
  this._partition = partition;
  this._amount = amount;

  this.apply = function (model) {
    model.applyMineralFertiliser(this._partition, this._amount);
  };

  this.partition = function () {
    return this._partition;
  };

  this.amount = function () { 
    return this._amount; 
  };

  this.toString = function () {
    return "applying mineral fertiliser at: " + this._date.toString() + " amount: " + this._amount + " partition: "
        + this.partition().toString();
  };

  this.clone = function () {
    return JSON.parse(JSON.stringify(this)); 
  };

};

MineralFertiliserApplication.prototype = new WorkStep();


var OrganicFertiliserApplication = function (at, parameters, amount, incorp) {

  this._date = at;
  this._parameters = parameters;
  this._amount = amount;
  this._incrop = (incorp === undefined) ? true : incorp;

  this.apply = function (model) {
    model.applyOrganicFertiliser(this._parameters, this._amount, this._incrop);
  };

  this.parameters = function () {
    return this._parameters;
  };

  this.amount = function () { 
    return this._amount; 
  };

  this.incorporation = function () { 
    return this._incorporation; 
  };

  this.toString = function () {
    return (
      "applying organic fertiliser at: " + this.date().toString() + " amount: " + 
      this.amount() + "\tN percentage: " + this._parameters().vo_NConcentration + "\tN amount: " + 
      this.amount() * this._parameters().vo_NConcentration
    );
  };

  this.clone = function () {
    return JSON.parse(JSON.stringify(this)); 
  };

};

OrganicFertiliserApplication.prototype = new WorkStep();


var TillageApplication = function (at, depth) {

  this._date = at;
  this._depth = depth;

  this.apply = function (model) {
    model.applyTillage(this._depth);
  };

  this.toString = function () {
    return "applying tillage at: " + this.date().toString() + " depth: " + this.depth();
  };

  this.clone = function () {
    return JSON.parse(JSON.stringify(this)); 
  };

};

TillageApplication.prototype = new WorkStep();


var IrrigationApplication = function (at, amount, parameters) {

  this._date = at;
  this._amount = amount;
  this._parameters = parameters;

  this.apply = function (model) {
    model.applyIrrigation(this.amount(), this.nitrateConcentration());
  };

  this.amount = function () { 
    return this._amount; 
  };

  this.nitrateConcentration = function () { 
    return this._parameters.nitrateConcentration; 
  };

  this.sulfateConcentration = function () { 
    return this._parameters.sulfateConcentration; 
  };

  this.toString = function () {
    return "applying irrigation at: " + this.date().toString() + " amount: " + this.amount() + " nitrateConcentration: "
      + this.nitrateConcentration() + " sulfateConcentration: " + this.sulfateConcentration();
  };

  this.clone = function () {
    return JSON.parse(JSON.stringify(this)); 
  };

};

IrrigationApplication.prototype = new WorkStep();

/*

  Changes:
    - var getWorkstep = function (date)

*/

var ProductionProcess = function (name, crop) {

var that = this
  , _name = name
  , _crop = crop
  , _worksteps = []
  , _cropResult = []
  ;
  
  _worksteps.equal_range = function (date) {
  var ws = [];
  this.forEach(function (w, i) {
    if (w.date().setHours(0,0,0,0) === date.setHours(0,0,0,0)) 
      ws.push(w)
  });
  return ws;
};

_worksteps.upper_bound = function (date) {
  for (var i = 0, is = this.length; i < is; i++) {
    if (this[i].date().setHours(0,0,0,0) > date.setHours(0,0,0,0))
      return this[i];
  }
  return null;
};

debug("ProductionProcess: " + name);
//_cropResult.id = _crop.id();

var addApplication = function (app) {

  _worksteps.push(app);
  _worksteps.sort(function (a_, b_) {
    var a = a_.date()
      , b = b_.date()
      ;
    return (a < b) ? -1 : ((a > b) ? 1 : 0);
  });

};

if ((crop.seedDate().setHours(0,0,0,0) != new Date(1951, 0, 1).setHours(0,0,0,0)) && (crop.seedDate().setHours(0,0,0,0) != new Date(0,0,0).setHours(0,0,0,0)))
  addApplication(new Seed(crop.seedDate(), crop));
if ((crop.harvestDate().setHours(0,0,0,0) != new Date(1951, 0, 1).setHours(0,0,0,0)) && (crop.harvestDate().setHours(0,0,0,0) != new Date(0,0,0).setHours(0,0,0,0)))
{
  addApplication(new Harvest(crop.harvestDate(), crop , _cropResult));
}


var cuttingDates = crop.getCuttingDates();
var size = cuttingDates.length;

for (var i=0; i<size; i++) {
  debug("Add cutting date: " + Date(cuttingDates[i].toString()));
  //    if (i<size-1) {
  addApplication(new Cutting(Date(cuttingDates.at(i)), crop));
  //    } else {
  //      addApplication(Harvest(crop.harvestDate(), crop, _cropResult));
  //    }
}

/**
 * @brief Copy constructor
 * @param new_pp
 */
/*
ProductionProcess::ProductionProcess(const ProductionProcess& other)
{
  _name = other._name;
  _crop = CropPtr(new Crop(*(other._crop.get())));
  _cropResult = PVResultPtr(new PVResult(*(other._cropResult.get())));

  _worksteps = other._worksteps;
}
*/

var deepCloneAndClearWorksteps = function () {
  // TODO:
  // ProductionProcess clone(name(), CropPtr(new Crop(*(crop().get()))));
  // clone._cropResult = PVResultPtr(new PVResult(*(_cropResult.get())));
  // return clone;
};

var apply = function (date, model) {
  var p = _worksteps.equal_range(date);
  p.forEach(function (ws) {
    ws.apply(model);
  });
};

var nextDate = function (date) {
  var p = _worksteps.upper_bound(date);
  return !p ? new Date(Infinity) : p.date();
};

var getWorkstep = function (date) {
  var ws_ = null;
  _worksteps.forEach(function (ws) {
    if (ws.date().setHours(0, 0, 0, 0) === date.setHours(0, 0, 0, 0))
      ws_ = ws;
  });
  return ws_;
};

var start = function () {
  if (_worksteps.length === 0)
    return new Date(Infinity);
  return _worksteps[0].date();
};

var end = function () {
  if (_worksteps.length === 0)
    return new Date(Infinity);
  return _worksteps[_worksteps.length - 1];
};

var toString = function () {
  var s = "";
  s += "name: " + _name + " start: " + start().toString()
      + " end: " + end().toString() + "\n";
  s += "worksteps:" + "\n";
  var p = _worksteps.equal_range(date);
  p.forEach(function (ws) {
    s += "at: " + ws.date().toString()
        + " what: " + ws.toString() + "\n";
  });
  return s;
};


return {
  getWorkstep: getWorkstep,
  deepCloneAndClearWorksteps: deepCloneAndClearWorksteps,
  addApplication: addApplication,
  apply: apply,
  nextDate: nextDate,
  name: function () { 
    return _name; 
  },
  crop: function () { 
    return _crop; 
  },
  isFallow: function () { 
    return !_crop.isValid();  
  },
  //! when does the PV start
  start: start,
  //! when does the whole PV end
  end: end,
  getWorksteps:function () { 
    return _worksteps; 
  },
  clearWorksteps: function () { 
    _worksteps = []; 
  },
  toString: toString,
  // cropResult() const { return *(_cropResult.get()); }
  // cropResultPtr() const { return _cropResult; }
  //the custom id is used to keep a potentially usage defined
  //mapping to entity from another domain,
  //e.g. the an Carbiocial CropActivity which is ProductionProcess was based on
  setCustomId: function (cid) { 
    _customId = cid; 
  },
  // customId: function () { 
  //   return _customId; 
  // }
  cropResult: function () { 
    return _cropResult; 
  }
};

};



var DataAccessor = function (startDate, endDate) {

  this._startDate = startDate;
  this._endDate = endDate;
  this._data = [];
  this._fromStep = 0;
  this._numberOfSteps;

  //! offsets to actual available climate data enum numbers
  this._acd2dataIndex = [];

  this.isValid = function () { 
    return this.noOfStepsPossible() > 0; 
  };

  this.dataForTimestep = function (acd, stepNo) {
    var cacheIndex = this._acd2dataIndex[acd];
    return (cacheIndex < 0 || cacheIndex === undefined) ? 0.0 : this._data[cacheIndex][this._fromStep + stepNo];
  };

  this.dataAsVector = function (acd) {
    var cacheIndex = this._acd2dataIndex[acd];
    return (cacheIndex < 0 || cacheIndex === undefined) ? [] : this._data[cacheIndex].slice(this._fromStep, this._fromStep + this.noOfStepsPossible()); 
  };

  this.cloneForRange = function (fromStep, numberOfSteps) {};

  this.noOfStepsPossible = function () { 
    return this._numberOfSteps; 
  };

  this.startDate = function () { 
    return this._startDate; 
  };

  this.endDate = function () { 
    return this._endDate; 
  };

  this.julianDayForStep = function (stepNo) {
    var newDate = new Date(this._startDate.getFullYear(), this._startDate.getMonth(), this._startDate.getDate() + stepNo);
    return ceil((newDate - new Date(newDate.getFullYear(), 0, 1)) / 86400000) + 1;
  };

  this.addClimateData = function (acd, data) {
    if(!this._data.length > 0 && this._numberOfSteps === data.length)
      console.log("Error: this._numberOfSteps === data.length");

    this._data.push(data);
    this._acd2dataIndex[acd] = this._data.length - 1;
    this._numberOfSteps = (this._data.length === 0) ? 0 : data.length;
  };

  this.addOrReplaceClimateData = function (acd, data) {};

  this.hasAvailableClimateData = function (acd) {
    return this._acd2dataIndex[acd] >= 0;
  };

};

/*
  Changes
    - add cuttingYields()
*/

var Crop = function (id, name) {

  var crop = (arguments[0] instanceof Crop) ?  arguments[0] : null
    , _accumulatedETa = 0.0
    , _appliedAmountIrrigation = crop ? crop._appliedAmountIrrigation : 0
    , _cropHeight = crop ? crop._cropHeight : 0.0
    , _cropParams = crop ? crop._cropParams : null
    , _crossCropAdaptionFactor = crop ? crop._crossCropAdaptionFactor : 1 
    , _cuttingDates = []
    , _harvestDate = crop ? crop._harvestDate : new Date(Infinity)
    , _id = crop ? crop._id : id
    , _name  = crop ? crop._name : name
    , _primaryYield = crop ? crop._primaryYield : 0
    , _primaryYieldN = crop ? crop._primaryYieldN : 0
    , _primaryYieldTM = crop ? crop._primaryYieldTM : 0
    , _residueParams = crop ? crop._residueParams : null
    , _secondaryYield = crop ? crop._secondaryYield : 0
    , _secondaryYieldN = crop ? crop._secondaryYieldN : 0
    , _secondaryYieldTM = crop ? crop._secondaryYieldTM : 0
    , _seedDate = crop ? crop._seedDate : new Date(Infinity)
    , _sumTotalNUptake = crop ? crop._sumTotalNUptake : 0
    , _cuttingYieldsDM = []
    ;

  // eva2_typeUsage = new_crop.eva2_typeUsage;

  return {

    id: function () { 
      return _id; 
    },
    name: function () { 
      return _name; 
    },
    isValid: function () { 
      return _id > -1; 
    },
    cropParameters: function () { 
      return _cropParams; 
    },
    setCropParameters: function (cps) { 
      _cropParams = cps; 
    },
    residueParameters: function () {
      return _residueParams;
    },
    setResidueParameters: function (rps) {
      _residueParams = rps;
    },
    seedDate: function () { 
      return _seedDate; 
    },
    harvestDate: function () { 
      return _harvestDate; 
    },
    getCuttingDates: function () { 
      return _cuttingDates; 
    },
    setSeedAndHarvestDate: function (sd, hd) {
      _seedDate = sd;
      _harvestDate = hd;
    },
    addCuttingDate: function (cd) { 
      _cuttingDates.push(cd); 
    },
    toString: toString,
    setHarvestYields: function (primaryYield, secondaryYield) {
      _primaryYield += primaryYield;
      _secondaryYield += secondaryYield;
    },
    setHarvestYieldsTM: function (primaryYieldTM, secondaryYieldTM) {
      _primaryYieldTM += primaryYieldTM;
      _secondaryYieldTM += secondaryYieldTM;
    },
    addCuttingYieldDM: function (yield) {
      _cuttingYieldsDM.push(yield);
    },
    getCuttingYieldsDM: function () {
      return _cuttingYieldsDM;
    },
    setYieldNContent: function (primaryYieldN, secondaryYieldN) {
      _primaryYieldN += primaryYieldN;
      _secondaryYieldN += secondaryYieldN;
    },
    addAppliedIrrigationWater: function (amount) { 
     _appliedAmountIrrigation += amount; 
    },
    setSumTotalNUptake: function (sum) { 
     _sumTotalNUptake = sum; 
    },
    setCropHeight: function (height) { 
      _cropHeight = height; 
    },
    setAccumulatedETa: function (eta) { 
     _accumulatedETa = eta; 
    },
    appliedIrrigationWater: function () { 
      return _appliedAmountIrrigation; 
    },
    sumTotalNUptake: function () { 
      return _sumTotalNUptake; 
    },
    primaryYield: function () { 
      return _primaryYield * _crossCropAdaptionFactor; 
    },
    secondaryYield: function () { 
      return _secondaryYield * _crossCropAdaptionFactor; 
    },
    primaryYieldTM: function () { 
      return _primaryYieldTM * _crossCropAdaptionFactor; 
    },
    secondaryYieldTM: function () { 
      return _secondaryYieldTM * _crossCropAdaptionFactor; 
    },
    primaryYieldN: function () { 
      return _primaryYieldN; 
    },
    aboveGroundBiomasseN: function () { 
      return _primaryYieldN + _secondaryYieldN; 
    },
    secondaryYieldN: function () { 
      return _secondaryYieldN; 
    },
    cropHeight: function () { 
      return _cropHeight; 
    },
    reset: function () {
      _primaryYield = _secondaryYield = _appliedAmountIrrigation = 0;
      _primaryYieldN = _secondaryYieldN = _accumulatedETa = 0.0;
      _primaryYieldTM = _secondaryYield = 0.0;
    },
    get_AccumulatedETa: function ()  {
      return _accumulatedETa;
    },
    writeCropParameters: function (outPath) {
      if (outPath != null && !!fs)
        fs.writeFileSync(outPath + '/crop_parameters_' + _name + '.txt', _cropParams.toString(), { encoding: 'utf8' });
    }
  };

};


/*
  JS Changes:
    - applyCutting(): reset LAI
    - get_PrimaryCropYield(): bestimme yield auch nach cutting
    - get_FreshPrimaryCropYield(): bestimme yield auch nach cutting
*/

var CropGrowth = function (sc, gps, cps, stps, cpp) {

  if (DEBUG) debug(arguments); // JS!

  var soilColumn = sc
    , generalParams = gps
    , cropParams = cps
    , centralParameterProvider = cpp
    , vs_NumberOfLayers  = sc.vs_NumberOfLayers() 
    , vs_Latitude  = stps.vs_Latitude
    ;

  var vc_AbovegroundBiomass = 0.0 
    , vc_AbovegroundBiomassOld = 0.0 
    , pc_AbovegroundOrgan = cropParams.pc_AbovegroundOrgan 
    , vc_ActualTranspiration = 0.0 
    , pc_AssimilatePartitioningCoeff = cropParams.pc_AssimilatePartitioningCoeff
    , vc_Assimilates = 0.0 
    , vc_AssimilationRate = 0.0 
    , vc_AstronomicDayLenght = 0.0
    , pc_BaseDaylength = cropParams.pc_BaseDaylength
    , pc_BaseTemperature = cropParams.pc_BaseTemperature
    , pc_BeginSensitivePhaseHeatStress = cropParams.pc_BeginSensitivePhaseHeatStress
    , vc_BelowgroundBiomass = 0.0 
    , vc_BelowgroundBiomassOld = 0.0 
    , pc_CO2Method = 3 
    , pc_CarboxylationPathway = cropParams.pc_CarboxylationPathway 
    , vc_ClearDayRadiation = 0.0 
    , vc_CriticalNConcentration = 0.0 
    , pc_CriticalOxygenContent = cropParams.pc_CriticalOxygenContent 
    , pc_CriticalTemperatureHeatStress = cropParams.pc_CriticalTemperatureHeatStress 
    , vc_CropDiameter = 0.0 
    , vc_CropHeatRedux = 1.0 
    , vc_CropHeight = 0.0 
    , pc_CropHeightP1 = cropParams.pc_CropHeightP1 
    , pc_CropHeightP2 = cropParams.pc_CropHeightP2 
    , vc_CropNDemand = 0.0 
    , vc_CropNRedux = 1.0 
    , pc_CropName = cropParams.pc_CropName 
    , pc_CropSpecificMaxRootingDepth = cropParams.pc_CropSpecificMaxRootingDepth 
    , vc_CurrentTemperatureSum = new Float64Array(cropParams.pc_NumberOfDevelopmentalStages) 
    , vc_CurrentTotalTemperatureSum = 0.0 
    , vc_CurrentTotalTemperatureSumRoot = 0.0 
    , vc_DaylengthFactor = 0.0 
    , pc_DaylengthRequirement = cropParams.pc_DaylengthRequirement 
    , vc_DaysAfterBeginFlowering = 0 
    , vc_Declination = 0.0
    , pc_DefaultRadiationUseEfficiency = cropParams.pc_DefaultRadiationUseEfficiency
    , vm_DepthGroundwaterTable = 0
    , pc_DevelopmentAccelerationByNitrogenStress = cropParams.pc_DevelopmentAccelerationByNitrogenStress
    , vc_DevelopmentalStage = 0
    , vc_DroughtImpactOnFertility = 1.0
    , pc_DroughtImpactOnFertilityFactor = cropParams.pc_DroughtImpactOnFertilityFactor
    , pc_DroughtStressThreshold = cropParams.pc_DroughtStressThreshold
    , vc_EffectiveDayLength = 0.0
    , pc_EmergenceFloodingControlOn = generalParams.pc_EmergenceFloodingControlOn
    , pc_EmergenceMoistureControlOn = generalParams.pc_EmergenceMoistureControlOn
    , pc_EndSensitivePhaseHeatStress = cropParams.pc_EndSensitivePhaseHeatStress
    , vc_ErrorStatus = false
    , vc_EvaporatedFromIntercept = 0.0
    , vc_ExtraterrestrialRadiation = 0.0
    , vc_FinalDevelopmentalStage = 0
    , vc_FixedN = 0
    , pc_FixingN = cropParams.pc_FixingN
    , vo_FreshSoilOrganicMatter = new Float64Array(vs_NumberOfLayers)
    , vc_GlobalRadiation = 0.0
    , vc_GreenAreaIndex = 0.0
    , vc_GrossAssimilates = 0.0
    , vc_GrossPhotosynthesis = 0.0
    , vc_GrossPhotosynthesisReference_mol = 0.0
    , vc_GrossPhotosynthesis_mol = 0.0
    , vc_GrossPrimaryProduction = 0.0
    , vc_GrowthRespirationAS = 0.0
    , vs_HeightNN = stps.vs_HeightNN
    , pc_InitialKcFactor = cropParams.pc_InitialKcFactor
    , pc_InitialOrganBiomass = cropParams.pc_InitialOrganBiomass
    , pc_InitialRootingDepth = cropParams.pc_InitialRootingDepth
    , vc_InterceptionStorage = 0.0
    , vc_KcFactor = 0.6
    , vc_LeafAreaIndex = 0.0
    , pc_LimitingTemperatureHeatStress = cropParams.pc_LimitingTemperatureHeatStress
    , pc_LuxuryNCoeff = cropParams.pc_LuxuryNCoeff
    , vc_MaintenanceRespirationAS = 0.0
    , pc_MaxAssimilationRate = cropParams.pc_MaxAssimilationRate
    , pc_MaxCropDiameter = cropParams.pc_MaxCropDiameter
    , pc_MaxCropHeight = cropParams.pc_MaxCropHeight
    , vs_MaxEffectiveRootingDepth = stps.vs_MaxEffectiveRootingDepth
    , vc_MaxNUptake = 0.0
    , pc_MaxNUptakeParam = cropParams.pc_MaxNUptakeParam
    , vc_MaxRootingDepth = 0.0
    , pc_MinimumNConcentration = cropParams.pc_MinimumNConcentration
    , pc_MinimumTemperatureForAssimilation = cropParams.pc_MinimumTemperatureForAssimilation
    , pc_MinimumTemperatureRootGrowth = cropParams.pc_MinimumTemperatureRootGrowth
    , pc_NConcentrationAbovegroundBiomass = cropParams.pc_NConcentrationAbovegroundBiomass
    , vc_NConcentrationAbovegroundBiomass = 0.0
    , vc_NConcentrationAbovegroundBiomassOld = 0.0
    , pc_NConcentrationB0 = cropParams.pc_NConcentrationB0
    , pc_NConcentrationPN = cropParams.pc_NConcentrationPN
    , pc_NConcentrationRoot = cropParams.pc_NConcentrationRoot
    , vc_NConcentrationRoot = 0.0
    , vc_NConcentrationRootOld = 0.0
    , vc_NContentDeficit = 0.0
    , vc_NUptakeFromLayer = new Float64Array(vs_NumberOfLayers)
    , vc_NetMaintenanceRespiration = 0.0
    , vc_NetPhotosynthesis = 0.0
    , vc_NetPrecipitation = 0.0
    , vc_NetPrimaryProduction = 0.0
    , pc_NitrogenResponseOn = generalParams.pc_NitrogenResponseOn
    , pc_NumberOfDevelopmentalStages = cropParams.pc_NumberOfDevelopmentalStages
    , pc_NumberOfOrgans = cropParams.pc_NumberOfOrgans
    , pc_OptimumTemperature = cropParams.pc_OptimumTemperature
    , vc_OrganBiomass = new Float64Array(cropParams.pc_NumberOfOrgans)
    , vc_OrganDeadBiomass = new Float64Array(cropParams.pc_NumberOfOrgans)
    , vc_OrganGreenBiomass = new Float64Array(cropParams.pc_NumberOfOrgans)
    , vc_OrganGrowthIncrement = new Float64Array(cropParams.pc_NumberOfOrgans)
    , pc_OrganGrowthRespiration = cropParams.pc_OrganGrowthRespiration
    , pc_OrganMaintenanceRespiration = cropParams.pc_OrganMaintenanceRespiration
    , vc_OrganSenescenceIncrement = new Float64Array(cropParams.pc_NumberOfOrgans)
    , pc_OrganSenescenceRate = cropParams.pc_OrganSenescenceRate
    , vc_OvercastDayRadiation = 0.0
    , vc_OxygenDeficit = 0.0
    , vc_PhotActRadiationMean = 0.0
    , vc_PhotoperiodicDaylength = 0.0
    , pc_PlantDensity = cropParams.pc_PlantDensity
    , vc_PotentialTranspiration = 0.0
    , vc_ReferenceEvapotranspiration = 0.0
    , vc_RelativeTotalDevelopment = 0.0
    , vc_RemainingEvapotranspiration = 0.0
    , vc_ReserveAssimilatePool = 0.0
    , pc_ResidueNRatio = cropParams.pc_ResidueNRatio
    , vc_Respiration = 0.0
    , vc_RootBiomass = 0.0
    , vc_RootBiomassOld = 0.0
    , vc_RootDensity = new Float64Array(vs_NumberOfLayers)
    , vc_RootDiameter = new Float64Array(vs_NumberOfLayers)
    , pc_RootDistributionParam = cropParams.pc_RootDistributionParam
    , vc_RootEffectivity = new Float64Array(vs_NumberOfLayers)
    , pc_RootFormFactor = cropParams.pc_RootFormFactor
    , pc_RootGrowthLag = cropParams.pc_RootGrowthLag
    , pc_RootPenetrationRate = cropParams.pc_RootPenetrationRate
    , vc_RootingDepth = 0
    , vc_RootingDepth_m = 0.0
    , vc_RootingZone = 0
    , vm_SaturationDeficit = 0.0
    , vc_SoilCoverage = 0.0
    , vs_SoilMineralNContent = new Float64Array(vs_NumberOfLayers)
    , vc_SoilSpecificMaxRootingDepth = 0.0
    , vs_SoilSpecificMaxRootingDepth = 0.0
    , pc_SpecificLeafArea = cropParams.pc_SpecificLeafArea
    , pc_SpecificRootLength = cropParams.pc_SpecificRootLength
    , pc_StageAtMaxDiameter = cropParams.pc_StageAtMaxDiameter
    , pc_StageAtMaxHeight = cropParams.pc_StageAtMaxHeight
    , pc_StageKcFactor = cropParams.pc_StageKcFactor
    , pc_StageMaxRootNConcentration = cropParams.pc_StageMaxRootNConcentration
    , pc_StageTemperatureSum = cropParams.pc_StageTemperatureSum
    , vc_StomataResistance = 0.0
    , pc_StorageOrgan = cropParams.pc_StorageOrgan
    , vc_StorageOrgan = 4
    , vc_SumTotalNUptake = 0.0
    , vc_TargetNConcentration = 0.0
    , vc_TimeStep = 1.0
    , vc_TimeUnderAnoxia = 0
    , vs_Tortuosity = 0.0
    , vc_TotalBiomass = 0.0
    , vc_TotalBiomassNContent = 0.0
    , vc_TotalCropHeatImpact = 0.0
    , vc_TotalNUptake = 0.0
    , vc_TotalRespired = 0.0
    , vc_TotalRootLength = 0.0
    , vc_TotalTemperatureSum = 0.0
    , vc_Transpiration = new Float64Array(vs_NumberOfLayers)
    , vc_TranspirationDeficit = 1.0
    , vc_TranspirationRedux = new Float64Array(vs_NumberOfLayers)
    , vc_VernalisationDays = 0.0
    , vc_VernalisationFactor = 0.0
    , pc_VernalisationRequirement = cropParams.pc_VernalisationRequirement
    , pc_WaterDeficitResponseOn = generalParams.pc_WaterDeficitResponseOn
    , vc_accumulatedETa = 0.0
    , cutting_delay_days = 0
    , dyingOut = false
    ;

    // , vc_CropWaterUptake = new Array() // JS! unused

  // for (var i = 0; i < cropParams.pc_NumberOfDevelopmentalStages; i++) 
  //   vc_CurrentTemperatureSum[i] = 0.0;

  for (var i = 0; i < vs_NumberOfLayers; i++) {
    // vc_NUptakeFromLayer[i] = 0.0;
    // vc_RootDensity[i] = 0.0;
    // vc_RootDiameter[i] = 0.0;
    // vc_RootEffectivity[i] = 0.0;
    // vs_SoilMineralNContent[i] = 0.0
    // vc_Transpiration[i] = 0.0;
    vc_TranspirationRedux[i] = 1.0;
  }

  // for (var i = 0; i < pc_NumberOfOrgans; i++) {
  //   vc_OrganBiomass[i] = 0.0;
  //   vc_OrganDeadBiomass[i] = 0.0;
  //   vc_OrganGreenBiomass[i] = 0.0;
  //   vc_OrganGrowthIncrement[i] = 0.0;
  //   vc_OrganSenescenceIncrement[i] = 0.0;
  // }

  // Initialising the crop
  vs_Tortuosity = centralParameterProvider.userCropParameters.pc_Tortuosity;

  // Determining the total temperature sum of all developmental stages after
  // emergence (that's why i_Stage starts with 1) until before senescence
  for (var i_Stage = 1; i_Stage < pc_NumberOfDevelopmentalStages - 1; i_Stage++)
     vc_TotalTemperatureSum += pc_StageTemperatureSum[i_Stage];

  vc_FinalDevelopmentalStage = pc_NumberOfDevelopmentalStages - 1;

  // Determining the initial crop organ's biomass
  for (var i_Organ = 0; i_Organ < pc_NumberOfOrgans; i_Organ++) {

    vc_OrganBiomass[i_Organ] = pc_InitialOrganBiomass[i_Organ]; // [kg ha-1]

    if (pc_AbovegroundOrgan[i_Organ] == 1)
      vc_AbovegroundBiomass += pc_InitialOrganBiomass[i_Organ]; // [kg ha-1]

    vc_TotalBiomass += pc_InitialOrganBiomass[i_Organ]; // [kg ha-1]

    // Define storage organ
    if (pc_StorageOrgan[i_Organ] == 1)
      vc_StorageOrgan = i_Organ;

    // Define storage organ
    if (pc_StorageOrgan[i_Organ] == 1)
        vc_StorageOrgan = i_Organ;

  } // for

  vc_RootBiomass = pc_InitialOrganBiomass[0]; // [kg ha-1]

  // Initialisisng the leaf area index
  vc_LeafAreaIndex = vc_OrganBiomass[1] * pc_SpecificLeafArea[vc_DevelopmentalStage]; // [ha ha-1]

  if (vc_LeafAreaIndex <= 0.0)
    vc_LeafAreaIndex = 0.001;

  // Initialising the root
  vc_RootBiomass = vc_OrganBiomass[0];

  /** @todo Christian: Umrechnung korrekt wenn Biomasse in [kg m-2]? */
  vc_TotalRootLength = (vc_RootBiomass * 100000.0 * 100.0 / 7.0) / (0.015 * 0.015 * PI);

  vc_TotalBiomassNContent = (vc_AbovegroundBiomass * pc_NConcentrationAbovegroundBiomass)
      + (vc_RootBiomass * pc_NConcentrationRoot);
  vc_NConcentrationAbovegroundBiomass = pc_NConcentrationAbovegroundBiomass;
  vc_NConcentrationRoot = pc_NConcentrationRoot;

  // Initialising the initial maximum rooting depth
  var vc_SandContent = soilColumn[0].vs_SoilSandContent; // [kg kg-1]
  var vc_BulkDensity = soilColumn[0].vs_SoilBulkDensity(); // [kg m-3]
  if (vc_SandContent < 0.55) vc_SandContent = 0.55;
  if (vs_SoilSpecificMaxRootingDepth > 0.0) {
    vc_SoilSpecificMaxRootingDepth  = vs_SoilSpecificMaxRootingDepth;
  } else {
    vc_SoilSpecificMaxRootingDepth = vc_SandContent * ((1.1 - vc_SandContent)
             / 0.275) * (1.4 / (vc_BulkDensity / 1000.0)
             + (vc_BulkDensity * vc_BulkDensity / 40000000.0)); // [m]
  }

  vc_MaxRootingDepth = (vc_SoilSpecificMaxRootingDepth + (pc_CropSpecificMaxRootingDepth * 2.0)) / 3.0; //[m]
  debug('vc_SoilSpecificMaxRootingDepth', vc_SoilSpecificMaxRootingDepth);
  debug('pc_CropSpecificMaxRootingDepth', pc_CropSpecificMaxRootingDepth);

  // change organs for yield components in case of eva2 simulation
  // if type of usage is defined
  //   debug() << "EVA2 Nutzungsart " << eva2_usage << "\t" << pc_CropName.c_str() << endl;
  //   if (eva2_usage == NUTZUNG_GANZPFLANZE) {
  //       debug() << "Ganzpflanze" << endl;
  //       std::vector<YieldComponent> prim = cropParams.organIdsForPrimaryYield;
  //       std::vector<YieldComponent> sec = cropParams.organIdsForSecondaryYield;

  //       BOOST_FOREACH(YieldComponent yc, prim){
  //         eva2_primaryYieldComponents.push_back(yc);
  //       }
  // //      vector<YieldComponent>::iterator it = prim.begin();
  // //      for (it; it!=prim.end(); it++) {
  // //          YieldComponent y = *it;
  // //          eva2_primaryYieldComponents.push_back(y);
  // //      }

  //       BOOST_FOREACH(YieldComponent yc, sec){
  //          eva2_primaryYieldComponents.push_back(yc);
  //       }
  // //      it = sec.begin();
  // //      for (it; it!=sec.end(); it++) {
  // //          YieldComponent y = *it;
  // //          eva2_primaryYieldComponents.push_back(y);
  // //      }
  //       eva2_secondaryYieldComponents.clear();
  //   }

  //   if (eva2_usage == NUTZUNG_GRUENDUENGUNG) {
  //       // if gruenduengung, put all organs that are in primary yield components
  //       // into secondary yield component, because the secondary yield stays on
  //       // the farm
  //       debug() << "Gründüngung" << endl;
  //       std::vector<YieldComponent> prim = cropParams.organIdsForPrimaryYield;

  //       for (vector<YieldComponent>::iterator it = prim.begin(); it!=prim.end(); it++) {
  //           YieldComponent y = *it;
  //           eva2_secondaryYieldComponents.push_back(y);
  //       }
  //   }


  var calculateCropGrowthStep = function (
    vw_MeanAirTemperature, 
    vw_MaxAirTemperature,
    vw_MinAirTemperature,
    vw_GlobalRadiation,
    vw_SunshineHours,
    vs_JulianDay,
    vw_RelativeHumidity,
    vw_WindSpeed,
    vw_WindSpeedHeight,
    vw_AtmosphericCO2Concentration,
    vw_GrossPrecipitation
  ) {

    debug("vw_AtmosphericCO2Concentration", vw_AtmosphericCO2Concentration);

    if (DEBUG) debug(arguments);

    if (cutting_delay_days>0) {
        cutting_delay_days--;
    }

    fc_Radiation(vs_JulianDay, vs_Latitude, vw_GlobalRadiation, vw_SunshineHours);

    vc_OxygenDeficit = fc_OxygenDeficiency(pc_CriticalOxygenContent[vc_DevelopmentalStage]);

    fc_CropDevelopmentalStage(
      vw_MeanAirTemperature,
      pc_BaseTemperature,
      pc_OptimumTemperature,
      pc_StageTemperatureSum,
      vc_TimeStep,
      soilColumn[0].get_Vs_SoilMoisture_m3(),
      soilColumn[0].get_FieldCapacity(),
      soilColumn[0].get_PermanentWiltingPoint(),
      pc_NumberOfDevelopmentalStages,
      vc_VernalisationFactor,
      vc_DaylengthFactor,
      vc_CropNRedux
    );  

    vc_DaylengthFactor =
      fc_DaylengthFactor(
      pc_DaylengthRequirement[vc_DevelopmentalStage],
      vc_EffectiveDayLength,
      vc_PhotoperiodicDaylength,
      pc_BaseDaylength[vc_DevelopmentalStage]
    );

    // C++: returns pair<double, double> 
    var fc_VernalisationResult =
      fc_VernalisationFactor(
      vw_MeanAirTemperature,
      vc_TimeStep,
      pc_VernalisationRequirement[vc_DevelopmentalStage],
      vc_VernalisationDays
    );    

    vc_VernalisationFactor = fc_VernalisationResult[0];
    vc_VernalisationDays = fc_VernalisationResult[1];

    vc_RelativeTotalDevelopment = vc_CurrentTotalTemperatureSum / vc_TotalTemperatureSum;

    if (vc_DevelopmentalStage == 0) {
      vc_KcFactor = 0.4; /** @todo Claas: muss hier etwas Genaueres hin, siehe FAO? */
    } else {
      vc_KcFactor = 
        fc_KcFactor(
          vc_DevelopmentalStage,
          pc_StageTemperatureSum[vc_DevelopmentalStage],
          vc_CurrentTemperatureSum[vc_DevelopmentalStage],
          pc_InitialKcFactor,
          pc_StageKcFactor[vc_DevelopmentalStage],
          pc_StageKcFactor[vc_DevelopmentalStage - 1]
        );
    }

    if (vc_DevelopmentalStage > 0) {

      fc_CropSize(pc_MaxCropHeight,
        pc_MaxCropDiameter,
        pc_StageAtMaxHeight,
        pc_StageAtMaxDiameter,
        pc_StageTemperatureSum,
        vc_CurrentTotalTemperatureSum,
        pc_CropHeightP1,
        pc_CropHeightP2
      );

      fc_CropGreenArea(
        vc_OrganGrowthIncrement[1],
        vc_OrganSenescenceIncrement[1],
        vc_CropHeight,
        vc_CropDiameter,
        pc_SpecificLeafArea[vc_DevelopmentalStage - 1],
        pc_SpecificLeafArea[vc_DevelopmentalStage],
        pc_SpecificLeafArea[1],
        pc_StageTemperatureSum[vc_DevelopmentalStage],
        vc_CurrentTemperatureSum[vc_DevelopmentalStage],
        pc_PlantDensity,
        vc_TimeStep
      );

      vc_SoilCoverage = fc_SoilCoverage(vc_LeafAreaIndex);

      fc_CropPhotosynthesis(
        vw_MeanAirTemperature,
        vw_MaxAirTemperature,
        vw_MinAirTemperature,
        vc_GlobalRadiation,
        vw_AtmosphericCO2Concentration,
        vs_Latitude,
        vc_LeafAreaIndex,
        pc_DefaultRadiationUseEfficiency,
        pc_MaxAssimilationRate,
        pc_MinimumTemperatureForAssimilation,
        vc_AstronomicDayLenght,
        vc_Declination,
        vc_ClearDayRadiation,
        vc_EffectiveDayLength,
        vc_OvercastDayRadiation
      );

      fc_HeatStressImpact(
        vw_MaxAirTemperature,
        vw_MinAirTemperature,
        vc_CurrentTotalTemperatureSum
      );

      fc_DroughtImpactOnFertility(vc_TranspirationDeficit);

      fc_CropNitrogen();

      fc_CropDryMatter(
        vs_NumberOfLayers,
        soilColumn.vs_LayerThickness(),
        vc_DevelopmentalStage,
        vc_Assimilates,
      /*vc_NetMaintenanceRespiration,*/   // hermes o. agrosim
      /*pc_CropSpecificMaxRootingDepth,*/ // JS! unused
      /*vs_SoilSpecificMaxRootingDepth,*/ // JS! unused
        vw_MeanAirTemperature
      );

      vc_ReferenceEvapotranspiration = 
        fc_ReferenceEvapotranspiration(
          vs_HeightNN,
          vw_MaxAirTemperature,
          vw_MinAirTemperature,
          vw_RelativeHumidity,
          vw_MeanAirTemperature,
          vw_WindSpeed,
          vw_WindSpeedHeight,
          vc_GlobalRadiation,
          vw_AtmosphericCO2Concentration,
          vc_GrossPhotosynthesisReference_mol
        );

      fc_CropWaterUptake(
        vs_NumberOfLayers,
        soilColumn.vs_LayerThickness(),
        vc_SoilCoverage,
        vc_RootingZone, // JS! int TODO crop.h vc_RootingDepth?
        soilColumn.vm_GroundwaterTable, // JS! int
        vc_ReferenceEvapotranspiration,
        vw_GrossPrecipitation,
        vc_CurrentTotalTemperatureSum,
        vc_TotalTemperatureSum
      );

      fc_CropNUptake(
        vs_NumberOfLayers,
        soilColumn.vs_LayerThickness(),
        vc_RootingZone, // JS! int TODO crop.h vc_RootingDepth?
        soilColumn.vm_GroundwaterTable, // JS! int
        vc_CurrentTotalTemperatureSum,
        vc_TotalTemperatureSum
      );

      vc_GrossPrimaryProduction = fc_GrossPrimaryProduction(vc_GrossAssimilates);

      vc_NetPrimaryProduction = fc_NetPrimaryProduction(vc_GrossPrimaryProduction, vc_TotalRespired);
    }

  };

  var fc_Radiation = function (
    vs_JulianDay,
    vs_Latitude,
    vw_GlobalRadiation,
    vw_SunshineHours
  ) {


    var vc_DeclinationSinus = 0.0; // old SINLD
    var vc_DeclinationCosinus = 0.0; // old COSLD

    // Calculation of declination - old DEC
    vc_Declination = -23.4 * cos(2.0 * PI * ((vs_JulianDay + 10.0) / 365.0));

    vc_DeclinationSinus = sin(vc_Declination * PI / 180.0) * sin(vs_Latitude * PI / 180.0);
    vc_DeclinationCosinus = cos(vc_Declination * PI / 180.0) * cos(vs_Latitude * PI / 180.0);

    // Calculation of the atmospheric day lenght - old DL
    vc_AstronomicDayLenght = 12.0 * (PI + 2.0 * asin(vc_DeclinationSinus / vc_DeclinationCosinus)) / PI;


    // Calculation of the effective day length - old DLE

    var EDLHelper = (-sin(8.0 * PI / 180.0) + vc_DeclinationSinus) / vc_DeclinationCosinus;

    if ((EDLHelper < -1.0) || (EDLHelper > 1.0))
    {
        vc_EffectiveDayLength = 0.01;
    } else {
        vc_EffectiveDayLength = 12.0 * (PI + 2.0 * asin(EDLHelper)) / PI;
    }

    // old DLP
    vc_PhotoperiodicDaylength = 12.0 * (PI + 2.0 * asin((-sin(-6.0 * PI / 180.0) + vc_DeclinationSinus)
        / vc_DeclinationCosinus)) / PI;

    // Calculation of the mean photosynthetically active radiation [J m-2] - old RDN
    vc_PhotActRadiationMean = 3600.0 * (vc_DeclinationSinus * vc_AstronomicDayLenght + 24.0 / PI * vc_DeclinationCosinus
        * sqrt(1.0 - ((vc_DeclinationSinus / vc_DeclinationCosinus) * (vc_DeclinationSinus / vc_DeclinationCosinus))));

    // Calculation of radiation on a clear day [J m-2] - old DRC
    vc_ClearDayRadiation = 0.5 * 1300.0 * vc_PhotActRadiationMean * exp(-0.14 / (vc_PhotActRadiationMean
        / (vc_AstronomicDayLenght * 3600.0)));

    // Calculation of radiation on an overcast day [J m-2] - old DRO
    vc_OvercastDayRadiation = 0.2 * vc_ClearDayRadiation;

    // Calculation of extraterrestrial radiation - old EXT
    var pc_SolarConstant = 0.082; //[MJ m-2 d-1] Note: Here is the difference to HERMES, which calculates in [J cm-2 d-1]!
    var SC = 24.0 * 60.0 / PI * pc_SolarConstant *(1.0 + 0.033 * cos(2.0 * PI * vs_JulianDay / 365.0));
    var vc_SunsetSolarAngle = acos(-tan(vs_Latitude * PI / 180.0) * tan(vc_Declination * PI / 180.0));
    vc_ExtraterrestrialRadiation = SC * (vc_SunsetSolarAngle * vc_DeclinationSinus + vc_DeclinationCosinus * sin(vc_SunsetSolarAngle)); // [MJ m-2]

    if (vw_GlobalRadiation > 0.0)
      vc_GlobalRadiation = vw_GlobalRadiation;
    else
      vc_GlobalRadiation = vc_ExtraterrestrialRadiation * (0.19 + 0.55 * vw_SunshineHours / vc_AstronomicDayLenght);
  };
      
  var fc_DaylengthFactor = function (
  d_DaylengthRequirement,
  _vc_EffectiveDayLength, /* JS! overwrites public var */ 
  _vc_PhotoperiodicDaylength, /* JS! overwrites public var */ 
  d_BaseDaylength
  ) {

    if (DEBUG) debug(arguments);

    if (d_DaylengthRequirement > 0.0) {

      // ************ Long-day plants **************
      // * Development acceleration by day length. *
      // *  (Day lenght requirement is positive.)  *
      // *******************************************

      vc_DaylengthFactor = (vc_PhotoperiodicDaylength - d_BaseDaylength) /
        (d_DaylengthRequirement - d_BaseDaylength);

    } else if (d_DaylengthRequirement < 0.0) {

      // ************* Short-day plants **************
      // * Development acceleration by night lenght. *
      // *  (Day lenght requirement is negative and  *
      // *      represents critical day length.)     *
      // *********************************************

      var vc_CriticalDayLenght = -d_DaylengthRequirement;
      var vc_MaximumDayLength = -d_BaseDaylength;
      
      if (vc_EffectiveDayLength <= vc_CriticalDayLenght)
        vc_DaylengthFactor = 1.0;
      else
        vc_DaylengthFactor = (vc_EffectiveDayLength - vc_MaximumDayLength) / (vc_CriticalDayLenght - vc_MaximumDayLength);

    } else vc_DaylengthFactor = 1.0;

    if (vc_DaylengthFactor > 1.0) vc_DaylengthFactor = 1.0;

    if (vc_DaylengthFactor < 0.0) vc_DaylengthFactor = 0.0;

    return vc_DaylengthFactor;
  };

  /*std::pair<double, double>*/    
  var fc_VernalisationFactor = function (
    vw_MeanAirTemperature, 
    vc_TimeStep,
    d_VernalisationRequirement,
    d_VernalisationDays
  ) {

    if (DEBUG) debug(arguments);

    var vc_EffectiveVernalisation;

    if (d_VernalisationRequirement == 0.0) {
      vc_VernalisationFactor = 1.0;
    } else {
      if ((vw_MeanAirTemperature > -4.0) && (vw_MeanAirTemperature <= 0.0))
        vc_EffectiveVernalisation = (vw_MeanAirTemperature + 4.0) / 4.0;
      else if ((vw_MeanAirTemperature > 0.0) && (vw_MeanAirTemperature <= 3.0))
        vc_EffectiveVernalisation = 1.0;
      else if ((vw_MeanAirTemperature > 3.0) && (vw_MeanAirTemperature <= 7.0))
        vc_EffectiveVernalisation = 1.0 - (0.2 * (vw_MeanAirTemperature - 3.0) / 4.0);
      else if ((vw_MeanAirTemperature > 7.0) && (vw_MeanAirTemperature <= 9.0))
        vc_EffectiveVernalisation = 0.8 - (0.4 * (vw_MeanAirTemperature - 7.0) / 2.0);
      else if ((vw_MeanAirTemperature > 9.0) && (vw_MeanAirTemperature <= 18.0))
        vc_EffectiveVernalisation = 0.4 - (0.4 * (vw_MeanAirTemperature - 9.0) / 9.0);
      else if ((vw_MeanAirTemperature <= -4.0) || (vw_MeanAirTemperature > 18.0))
        vc_EffectiveVernalisation = 0.0;
      else
        vc_EffectiveVernalisation = 1.0;
      
      // old VERNTAGE
      d_VernalisationDays += vc_EffectiveVernalisation * vc_TimeStep;

      // old VERSCHWELL
      var vc_VernalisationThreshold = min(d_VernalisationRequirement, 9.0) - 1.0;

      if (vc_VernalisationThreshold >= 1) {
        vc_VernalisationFactor = (d_VernalisationDays - vc_VernalisationThreshold) / (d_VernalisationRequirement - vc_VernalisationThreshold);
        if (vc_VernalisationFactor < 0)
          vc_VernalisationFactor = 0.0;
      } else {
        vc_VernalisationFactor = 1.0;
      }
    }

    return [
      vc_VernalisationFactor, 
      d_VernalisationDays
    ];
  };

  var fc_OxygenDeficiency = function (
    d_CriticalOxygenContent, 
    vc_AirFilledPoreVolume, 
    vc_MaxOxygenDeficit
  ) {

    if (DEBUG) debug(arguments);

    var vc_AirFilledPoreVolume = vc_AirFilledPoreVolume || 0.0;
    var vc_MaxOxygenDeficit = vc_MaxOxygenDeficit || 0.0;

    // Reduktion bei Luftmangel Stauwasser berücksichtigen!!!!
    vc_AirFilledPoreVolume = ((soilColumn[0].get_Saturation() + soilColumn[1].get_Saturation()
        + soilColumn[2].get_Saturation()) - (soilColumn[0].get_Vs_SoilMoisture_m3() + soilColumn[1].get_Vs_SoilMoisture_m3()
        + soilColumn[2].get_Vs_SoilMoisture_m3())) / 3.0;
    if (vc_AirFilledPoreVolume < d_CriticalOxygenContent) {
      vc_TimeUnderAnoxia += int(vc_TimeStep);
      if (vc_TimeUnderAnoxia > 4)
        vc_TimeUnderAnoxia = 4;
      if (vc_AirFilledPoreVolume < 0.0)
        vc_AirFilledPoreVolume = 0.0;
      vc_MaxOxygenDeficit = vc_AirFilledPoreVolume / d_CriticalOxygenContent;
      // JS! c++ : double (int / int) -> js int(double / double) !! took hours to debug!
      vc_OxygenDeficit = 1.0 - int(vc_TimeUnderAnoxia / 4) * (1.0 - vc_MaxOxygenDeficit);
    } else {
      vc_TimeUnderAnoxia = 0;
      vc_OxygenDeficit = 1.0;
    }
    if (vc_OxygenDeficit > 1.0)
      vc_OxygenDeficit = 1.0;

    return vc_OxygenDeficit;
  };

  var fc_CropDevelopmentalStage = function (
    vw_MeanAirTemperature,
    pc_BaseTemperature,
    pc_OptimumTemperature,
    pc_StageTemperatureSum,
    vc_TimeStep,
    d_SoilMoisture_m3,
    d_FieldCapacity,
    d_PermanentWiltingPoint,
    pc_NumberOfDevelopmentalStages,
    vc_VernalisationFactor,
    vc_DaylengthFactor,
    vc_CropNRedux
  ) {

    if (DEBUG) debug(arguments);

    var vc_CapillaryWater;
    var vc_DevelopmentAccelerationByNitrogenStress = 0.0; // old NPROG
    var vc_DevelopmentAccelerationByWaterStress = 0.0; // old WPROG
    var vc_DevelopmentAccelerationByStress = 0.0; // old DEVPROG
    var vc_SoilTemperature = soilColumn[0].get_Vs_SoilTemperature();

    if (vc_DevelopmentalStage == 0) {

      if (vc_SoilTemperature > pc_BaseTemperature[vc_DevelopmentalStage]) {

        vc_CapillaryWater = d_FieldCapacity - d_PermanentWiltingPoint;

        /** @todo Claas: Schränkt trockener Boden das Aufsummieren der Wärmeeinheiten ein, oder
         sollte nicht eher nur der Wechsel in das Stadium 1 davon abhängen? --> Christian */

        if (pc_EmergenceMoistureControlOn == true && pc_EmergenceFloodingControlOn == true) {

          if (d_SoilMoisture_m3 > ((0.2 * vc_CapillaryWater) + d_PermanentWiltingPoint)
            && (soilColumn.vs_SurfaceWaterStorage < 0.001)) {
          // Germination only if soil water content in top layer exceeds
          // 20% of capillary water, but is not beyond field capacity and
          // if no water is stored on the soil surface.

            vc_CurrentTemperatureSum[vc_DevelopmentalStage] += (vc_SoilTemperature
              - pc_BaseTemperature[vc_DevelopmentalStage]) * vc_TimeStep;

            if (vc_CurrentTemperatureSum[vc_DevelopmentalStage] >= pc_StageTemperatureSum[vc_DevelopmentalStage]) {
              vc_DevelopmentalStage++;
            }
          }
        } else if (pc_EmergenceMoistureControlOn == true && pc_EmergenceFloodingControlOn == false) {

          if (d_SoilMoisture_m3 > ((0.2 * vc_CapillaryWater) + d_PermanentWiltingPoint)) {
          // Germination only if soil water content in top layer exceeds
          // 20% of capillary water, but is not beyond field capacity.

            vc_CurrentTemperatureSum[vc_DevelopmentalStage] += (vc_SoilTemperature
              - pc_BaseTemperature[vc_DevelopmentalStage]) * vc_TimeStep;

            if (vc_CurrentTemperatureSum[vc_DevelopmentalStage] >= pc_StageTemperatureSum[vc_DevelopmentalStage]) {
              vc_DevelopmentalStage++;

            }
          }
        } else if (pc_EmergenceMoistureControlOn == false && pc_EmergenceFloodingControlOn == true) {

          if (soilColumn.vs_SurfaceWaterStorage < 0.001) {
            // Germination only if no water is stored on the soil surface.

            vc_CurrentTemperatureSum[vc_DevelopmentalStage] += (vc_SoilTemperature
              - pc_BaseTemperature[vc_DevelopmentalStage]) * vc_TimeStep;

            if (vc_CurrentTemperatureSum[vc_DevelopmentalStage] >= pc_StageTemperatureSum[vc_DevelopmentalStage]) {
              vc_DevelopmentalStage++;
            }
          }

        } else {
          vc_CurrentTemperatureSum[vc_DevelopmentalStage] += (vc_SoilTemperature
                - pc_BaseTemperature[vc_DevelopmentalStage]) * vc_TimeStep;

          if (vc_CurrentTemperatureSum[vc_DevelopmentalStage] >= pc_StageTemperatureSum[vc_DevelopmentalStage]) {
            vc_DevelopmentalStage++;
          }
        }
      }
    } else if (vc_DevelopmentalStage > 0) {

      // Development acceleration by N deficit in crop tissue
      if ((pc_DevelopmentAccelerationByNitrogenStress == 1) &&
          (pc_AssimilatePartitioningCoeff[vc_DevelopmentalStage][vc_StorageOrgan] > 0.9)){

        vc_DevelopmentAccelerationByNitrogenStress = 1.0 + ((1.0 - vc_CropNRedux) * (1.0 - vc_CropNRedux));

      } else {

        vc_DevelopmentAccelerationByNitrogenStress = 1.0;
      }

      // Development acceleration by water deficit
      if ((vc_TranspirationDeficit < pc_DroughtStressThreshold[vc_DevelopmentalStage]) &&
          (pc_AssimilatePartitioningCoeff[vc_DevelopmentalStage][vc_StorageOrgan] > 0.9)){

        if (vc_OxygenDeficit < 1.0) {
          vc_DevelopmentAccelerationByWaterStress = 1.0;
        } else {
          vc_DevelopmentAccelerationByWaterStress = 1.0 + ((1.0 - vc_TranspirationDeficit)
          * (1.0 - vc_TranspirationDeficit));
        }

      } else {
        vc_DevelopmentAccelerationByWaterStress = 1.0;
      }

      vc_DevelopmentAccelerationByStress = max(vc_DevelopmentAccelerationByNitrogenStress,
          vc_DevelopmentAccelerationByWaterStress);

      if (vw_MeanAirTemperature > pc_BaseTemperature[vc_DevelopmentalStage]) {

        if (vw_MeanAirTemperature > pc_OptimumTemperature[vc_DevelopmentalStage]){
                  vw_MeanAirTemperature = pc_OptimumTemperature[vc_DevelopmentalStage];
        }

        vc_CurrentTemperatureSum[vc_DevelopmentalStage] += (vw_MeanAirTemperature
            - pc_BaseTemperature[vc_DevelopmentalStage]) * vc_VernalisationFactor * vc_DaylengthFactor
            * vc_DevelopmentAccelerationByStress * vc_TimeStep;

        vc_CurrentTotalTemperatureSum += (vw_MeanAirTemperature - pc_BaseTemperature[vc_DevelopmentalStage])
            * vc_VernalisationFactor * vc_DaylengthFactor * vc_DevelopmentAccelerationByStress * vc_TimeStep;

      }

      if (vc_CurrentTemperatureSum[vc_DevelopmentalStage] >= pc_StageTemperatureSum[vc_DevelopmentalStage]) {

        if (vc_DevelopmentalStage < (pc_NumberOfDevelopmentalStages - 1)) {

          vc_DevelopmentalStage++;
        }
      }

    } else {

      console.log("irregular developmental stage");
    }

  };

  // double 
  var fc_KcFactor = function (
  vc_DevelopmentalStage, 
  d_StageTemperatureSum,
  d_CurrentTemperatureSum,
  pc_InitialKcFactor,
  d_StageKcFactor,
  d_EarlierStageKcFactor
  ) {

    if (DEBUG) debug(arguments);

    var vc_KcFactor;

    var vc_RelativeDevelopment = d_CurrentTemperatureSum / d_StageTemperatureSum; // old relint

    if (vc_RelativeDevelopment > 1.0) vc_RelativeDevelopment = 1.0;

    if (vc_DevelopmentalStage == 0)
      vc_KcFactor = pc_InitialKcFactor + (d_StageKcFactor - pc_InitialKcFactor) * vc_RelativeDevelopment;
    else // Interpolating the Kc Factors
      vc_KcFactor = d_EarlierStageKcFactor + ((d_StageKcFactor - d_EarlierStageKcFactor) * vc_RelativeDevelopment);

    return vc_KcFactor;
  };

  var fc_CropSize = function (
    pc_MaxCropHeight,
    pc_MaxCropDiameter,
    pc_StageAtMaxHeight,
    pc_StageAtMaxDiameter,
    pc_StageTemperatureSum,
    vc_CurrentTotalTemperatureSum,
    pc_CropHeightP1,
    pc_CropHeightP2
  ) {

    if (DEBUG) debug(arguments);

    var vc_TotalTemperatureSumForHeight = 0.0;
    for (var i_Stage = 1; i_Stage < pc_StageAtMaxHeight + 1; i_Stage++)
      vc_TotalTemperatureSumForHeight += pc_StageTemperatureSum[i_Stage];

    var vc_TotalTemperatureSumForDiameter = 0.0;
    for (var i_Stage = 1; i_Stage < pc_StageAtMaxDiameter + 1; i_Stage++)
      vc_TotalTemperatureSumForDiameter += pc_StageTemperatureSum[i_Stage];

    var vc_RelativeTotalDevelopmentForHeight = vc_CurrentTotalTemperatureSum / vc_TotalTemperatureSumForHeight;
    if (vc_RelativeTotalDevelopmentForHeight > 1.0)
      vc_RelativeTotalDevelopmentForHeight = 1.0;

    var vc_RelativeTotalDevelopmentForDiameter = vc_CurrentTotalTemperatureSum / vc_TotalTemperatureSumForDiameter;
    if (vc_RelativeTotalDevelopmentForDiameter > 1.0)
      vc_RelativeTotalDevelopmentForDiameter = 1.0;

    if (vc_RelativeTotalDevelopmentForHeight > 0.0)
      vc_CropHeight = pc_MaxCropHeight / (1.0 + exp(-pc_CropHeightP1 * (vc_RelativeTotalDevelopmentForHeight- pc_CropHeightP2)));
    else 
      vc_CropHeight = 0.0;

    if (vc_RelativeTotalDevelopmentForDiameter > 0.0)
      vc_CropDiameter = pc_MaxCropDiameter * vc_RelativeTotalDevelopmentForDiameter;
    else
      vc_CropDiameter = 0.0;
  };

  var fc_CropGreenArea = function (
    d_LeafBiomassIncrement,
    d_LeafBiomassDecrement,
    vc_CropHeight,
    vc_CropDiameter,
    d_SpecificLeafAreaStart,
    d_SpecificLeafAreaEnd,
    d_SpecificLeafAreaEarly,
    d_StageTemperatureSum,
    d_CurrentTemperatureSum,
    pc_PlantDensity,
    vc_TimeStep
  ) {

    if (DEBUG) debug(arguments);

    vc_LeafAreaIndex += (
      (d_LeafBiomassIncrement * (d_SpecificLeafAreaStart + (d_CurrentTemperatureSum /
      d_StageTemperatureSum * (d_SpecificLeafAreaEnd - d_SpecificLeafAreaStart))) * vc_TimeStep) -
      (d_LeafBiomassDecrement * d_SpecificLeafAreaEarly * vc_TimeStep)
    ); // [ha ha-1]

    if (vc_LeafAreaIndex <= 0.0)
      vc_LeafAreaIndex = 0.001;

    vc_GreenAreaIndex = vc_LeafAreaIndex + (vc_CropHeight * PI * vc_CropDiameter * pc_PlantDensity); // [m2 m-2]
    };

    // double 
    var fc_SoilCoverage = function (vc_LeafAreaIndex) {

    vc_SoilCoverage = 1.0 - (exp(-0.5 * vc_LeafAreaIndex));

    return vc_SoilCoverage;

  };

  var fc_CropPhotosynthesis = function (
    vw_MeanAirTemperature,
    vw_MaxAirTemperature,
    vw_MinAirTemperature,
    vc_GlobalRadiation,
    vw_AtmosphericCO2Concentration,
    vs_Latitude,
    vc_LeafAreaIndex,
    pc_DefaultRadiationUseEfficiency,
    pc_MaxAssimilationRate,
    pc_MinimumTemperatureForAssimilation,
    vc_AstronomicDayLenght,
    vc_Declination,
    vc_ClearDayRadiation,
    vc_EffectiveDayLength,
    vc_OvercastDayRadiation
  ) {

    if (DEBUG) debug(arguments);

    var vc_CO2CompensationPoint = 0.0; // old COcomp
    var vc_CO2CompensationPointReference = 0.0;
    var vc_RadiationUseEfficiency = 0.0; // old EFF
    var vc_RadiationUseEfficiencyReference = 0.0;
    var KTvmax = 0.0; // old KTvmax
    var KTkc = 0.0; // old KTkc
    var KTko = 0.0; // old KTko
    var vc_AmaxFactor = 0.0; // old fakamax
    var vc_AmaxFactorReference = 0.0;
    var vc_Vcmax = 0.0; // old vcmax
    var vc_VcmaxReference = 0.0;
    var Mkc = 0.0; // old Mkc
    var Mko = 0.0; // old Mko
    var Oi = 0.0; // old Oi
    var Ci = 0.0; // old Ci
    var vc_AssimilationRateReference = 0.0;
    var vc_HoffmannK1 = 0.0; // old KCo1
    var vc_HoffmannC0 = 0.0; // old coco
    var vc_HoffmannKCO2 = 0.0; // old KCO2
    var vc_NetRadiationUseEfficiency = 0.0; // old EFFE;
    var vc_NetRadiationUseEfficiencyReference = 0.0;
    var SSLAE = 0.0; // old SSLAE;
    var X = 0.0; // old X;
    var XReference = 0.0;
    var PHCH1 = 0.0; // old PHCH1;
    var PHCH1Reference = 0.0;
    var Y = 0.0; // old Y;
    var YReference = 0.0;
    var PHCH2 = 0.0; // old PHCH2;
    var PHCH2Reference = 0.0;
    var PHCH = 0.0; // old PHCH;
    var PHCHReference = 0.0;
    var PHC3 = 0.0; // old PHC3;
    var PHC3Reference = 0.0;
    var PHC4 = 0.0; // old PHC4;
    var PHC4Reference = 0.0;
    var PHCL = 0.0; // old PHCL;
    var PHCLReference = 0.0;
    var Z = 0.0; // old Z;
    var PHOH1 = 0.0; // old PHOH1;
    var PHOH = 0.0; // old PHOH;
    var PHO3 = 0.0; // old PHO3;
    var PHO3Reference = 0.0;
    var PHOL = 0.0; // old PHOL;
    var PHOLReference = 0.0;
    var vc_ClearDayCO2AssimilationReference = 0.0;
    var vc_OvercastDayCO2AssimilationReference = 0.0;
    var vc_ClearDayCO2Assimilation = 0.0; // old DGAC;
    var vc_OvercastDayCO2Assimilation = 0.0; // old DGAO;
    //var vc_GrossAssimilates = 0.0;
    var vc_GrossCO2Assimilation = 0.0; // old DTGA;
    var vc_GrossCO2AssimilationReference = 0.0; // used for ET0 calculation
    var vc_OvercastSkyTimeFraction = 0.0; // old FOV;
    var vc_MaintenanceTemperatureDependency = 0.0; // old TEFF
    var vc_MaintenanceRespiration = 0.0; // old MAINTS
    var vc_DroughtStressThreshold = 0.0; // old VSWELL;
    var vc_PhotoTemperature = 0.0;
    var vc_NightTemperature = 0.0;
    var vc_PhotoMaintenanceRespiration = 0.0;
    var vc_DarkMaintenanceRespiration = 0.0;
    var vc_PhotoGrowthRespiration = 0.0;
    var vc_DarkGrowthRespiration = 0.0;

    var user_crops = centralParameterProvider.userCropParameters;
    var pc_ReferenceLeafAreaIndex = user_crops.pc_ReferenceLeafAreaIndex;
    var pc_ReferenceMaxAssimilationRate = user_crops.pc_ReferenceMaxAssimilationRate;
    var pc_MaintenanceRespirationParameter_1 = user_crops.pc_MaintenanceRespirationParameter1;
    var pc_MaintenanceRespirationParameter_2 = user_crops.pc_MaintenanceRespirationParameter2;

    var pc_GrowthRespirationParameter_1 = user_crops.pc_GrowthRespirationParameter1;
    var pc_GrowthRespirationParameter_2 = user_crops.pc_GrowthRespirationParameter2;
    var pc_CanopyReflectionCoeff = user_crops.pc_CanopyReflectionCoefficient; // old REFLC;

    // Calculation of CO2 impact on crop growth
    if (pc_CO2Method == 3) {

      //////////////////////////////////////////////////////////////////////////
      // Method 3:
      // Long, S.P. 1991. Modification of the response of photosynthetic
      // productivity to rising temperature by atmospheric CO2
      // concentrations - Has its importance been underestimated. Plant
      // Cell Environ. 14(8): 729-739.
      // and
      // Mitchell, R.A.C., D.W. Lawlor, V.J. Mitchell, C.L. Gibbard, E.M.
      // White, and J.R. Porter. 1995. Effects of elevated CO2
      // concentration and increased temperature on winter-wheat - Test
      // of ARCWHEAT1 simulation model. Plant Cell Environ. 18(7):736-748.
      //////////////////////////////////////////////////////////////////////////

      KTvmax = exp(68800.0 * ((vw_MeanAirTemperature + 273.0) - 298.0)
          / (298.0 * (vw_MeanAirTemperature + 273.0) * 8.314)) * pow(((vw_MeanAirTemperature + 273.0) / 298.0), 0.5);

      KTkc = exp(65800.0 * ((vw_MeanAirTemperature + 273.0) - 298.0) / (298.0 * (vw_MeanAirTemperature + 273.0) * 8.314))
          * pow(((vw_MeanAirTemperature + 273.0) / 298.0), 0.5);

      KTko = exp(1400.0 * ((vw_MeanAirTemperature + 273.0) - 298.0) / (298.0 * (vw_MeanAirTemperature + 273.0) * 8.314))
          * pow(((vw_MeanAirTemperature + 273.0) / 298.0), 0.5);

      // Berechnung des Transformationsfaktors fr pflanzenspez. AMAX bei 25 grad
      vc_AmaxFactor = pc_MaxAssimilationRate / 34.668;
      vc_AmaxFactorReference = pc_ReferenceMaxAssimilationRate / 34.668;
      vc_Vcmax = 98.0 * vc_AmaxFactor * KTvmax;
      vc_VcmaxReference = 98.0 * vc_AmaxFactorReference * KTvmax;

      Mkc = 460.0 * KTkc; //[µmol mol-1]
      Mko = 330.0 * KTko; //[mmol mol-1]

      Oi = 210.0 + (0.047 - 0.0013087 * vw_MeanAirTemperature + 0.000025603 * (vw_MeanAirTemperature
          * vw_MeanAirTemperature) - 0.00000021441 * (vw_MeanAirTemperature * vw_MeanAirTemperature
          * vw_MeanAirTemperature)) / 0.026934;

      Ci = vw_AtmosphericCO2Concentration * 0.7 * (1.674 - 0.061294 * vw_MeanAirTemperature + 0.0011688
          * (vw_MeanAirTemperature * vw_MeanAirTemperature) - 0.0000088741 * (vw_MeanAirTemperature
          * vw_MeanAirTemperature * vw_MeanAirTemperature)) / 0.73547;

      vc_CO2CompensationPoint = 0.5 * 0.21 * vc_Vcmax * Oi / (vc_Vcmax * Mko);
      vc_CO2CompensationPointReference = 0.5 * 0.21 * vc_VcmaxReference * Oi / (vc_VcmaxReference * Mko);

      vc_RadiationUseEfficiency = min((0.77 / 2.1 * (Ci - vc_CO2CompensationPoint) / (4.5 * Ci + 10.5
          * vc_CO2CompensationPoint) * 8.3769), 0.5);
      vc_RadiationUseEfficiencyReference = min((0.77 / 2.1 * (Ci - vc_CO2CompensationPointReference) / (4.5 * Ci + 10.5
          * vc_CO2CompensationPointReference) * 8.3769), 0.5);

    } else {
      vc_RadiationUseEfficiency = pc_DefaultRadiationUseEfficiency;
      vc_RadiationUseEfficiencyReference = pc_DefaultRadiationUseEfficiency;
    }

    if (pc_CarboxylationPathway == 1) {

      if (pc_CO2Method == 2) {

        //////////////////////////////////////////////////////////////////////////
        // Method 2:
        // Hoffmann, F. 1995. Fagus, a model for growth and development of
        // beech. Ecol. Mod. 83 (3):327-348.
        //////////////////////////////////////////////////////////////////////////

        if (vw_MeanAirTemperature < pc_MinimumTemperatureForAssimilation) {
          vc_AssimilationRate = 0.0;
          vc_AssimilationRateReference = 0.0;
        } else if (vw_MeanAirTemperature < 10.0) {
          vc_AssimilationRate = pc_MaxAssimilationRate * vw_MeanAirTemperature / 10.0 * 0.4;
          vc_AssimilationRateReference = pc_ReferenceMaxAssimilationRate * vw_MeanAirTemperature / 10.0 * 0.4;
        } else if (vw_MeanAirTemperature < 15.0) {
          vc_AssimilationRate = pc_MaxAssimilationRate * (0.4 + (vw_MeanAirTemperature - 10.0) / 5.0 * 0.5);
          vc_AssimilationRateReference = pc_ReferenceMaxAssimilationRate * (0.4 + (vw_MeanAirTemperature - 10.0) / 5.0
              * 0.5);
        } else if (vw_MeanAirTemperature < 25.0) {
          vc_AssimilationRate = pc_MaxAssimilationRate * (0.9 + (vw_MeanAirTemperature - 15.0) / 10.0 * 0.1);
          vc_AssimilationRateReference = pc_ReferenceMaxAssimilationRate * (0.9 + (vw_MeanAirTemperature - 15.0) / 10.0
              * 0.1);
        } else if (vw_MeanAirTemperature < 35.0) {
          vc_AssimilationRate = pc_MaxAssimilationRate * (1.0 - (vw_MeanAirTemperature - 25.0) / 10.0);
          vc_AssimilationRateReference = pc_ReferenceMaxAssimilationRate * (1.0 - (vw_MeanAirTemperature - 25.0) / 10.0);
        } else {
          vc_AssimilationRate = 0.0;
          vc_AssimilationRateReference = 0.0;
        }


        /** @FOR_PARAM */
        vc_HoffmannK1 = 220.0 + 0.158 * (vc_GlobalRadiation * 86400.0 / 1000000.0);

        // PAR [MJ m-2], Hoffmann's model requires [W m-2] ->
        // conversion of [MJ m-2] to [W m-2]

        vc_HoffmannC0 = 80.0 - 0.036 * (vc_GlobalRadiation * 86400.0 / 1000000.0);


        vc_HoffmannKCO2 = ((vw_AtmosphericCO2Concentration - vc_HoffmannC0) / (vc_HoffmannK1
            + vw_AtmosphericCO2Concentration - vc_HoffmannC0)) / ((350.0 - vc_HoffmannC0) / (vc_HoffmannK1 + 350.0
            - vc_HoffmannC0));

        vc_AssimilationRate = vc_AssimilationRate * vc_HoffmannKCO2;
        vc_AssimilationRateReference = vc_AssimilationRateReference * vc_HoffmannKCO2;

      } else if (pc_CO2Method == 3) {

        vc_AssimilationRate = (Ci - vc_CO2CompensationPoint) * vc_Vcmax / (Ci + Mkc * (1.0 + Oi / Mko)) * 1.656;
        vc_AssimilationRateReference = (Ci - vc_CO2CompensationPointReference) * vc_VcmaxReference / (Ci + Mkc * (1.0
            + Oi / Mko)) * 1.656;

        if (vw_MeanAirTemperature < pc_MinimumTemperatureForAssimilation) {
          vc_AssimilationRate = 0.0;
          vc_AssimilationRateReference = 0.0;
        }
      }


    } else { //if pc_CarboxylationPathway = 2
      if (vw_MeanAirTemperature < pc_MinimumTemperatureForAssimilation) {
        vc_AssimilationRate = 0;
        vc_AssimilationRateReference = 0.0;

        // Sage & Kubien (2007): The temperature response of C3 and C4 phtotsynthesis.
        // Plant, Cell and Environment 30, 1086 - 1106.

      } else if (vw_MeanAirTemperature < 9.0) {
        vc_AssimilationRate = pc_MaxAssimilationRate * vw_MeanAirTemperature / 10.0 * 0.08;
        vc_AssimilationRateReference = pc_ReferenceMaxAssimilationRate * vw_MeanAirTemperature / 10.0 * 0.08;
      } else if (vw_MeanAirTemperature < 14.0) {
        vc_AssimilationRate = pc_MaxAssimilationRate * (0.071 + (vw_MeanAirTemperature - 9.0) * 0.03);
        vc_AssimilationRateReference = pc_ReferenceMaxAssimilationRate * (0.071 + (vw_MeanAirTemperature - 9.0) * 0.03);
      } else if (vw_MeanAirTemperature < 20.0) {
        vc_AssimilationRate = pc_MaxAssimilationRate * (0.221 + (vw_MeanAirTemperature - 14.0) * 0.09);
        vc_AssimilationRateReference = pc_ReferenceMaxAssimilationRate * (0.221 + (vw_MeanAirTemperature - 14.0) * 0.09);
      } else if (vw_MeanAirTemperature < 24.0) {
        vc_AssimilationRate = pc_MaxAssimilationRate * (0.761 + (vw_MeanAirTemperature - 20.0) * 0.04);
        vc_AssimilationRateReference = pc_ReferenceMaxAssimilationRate * (0.761 + (vw_MeanAirTemperature - 20.0) * 0.04);
      } else if (vw_MeanAirTemperature < 32.0) {
        vc_AssimilationRate = pc_MaxAssimilationRate * (0.921 + (vw_MeanAirTemperature - 24.0) * 0.01);
        vc_AssimilationRateReference = pc_ReferenceMaxAssimilationRate * (0.921 + (vw_MeanAirTemperature - 24.0) * 0.01);
      } else if (vw_MeanAirTemperature < 38.0) {
        vc_AssimilationRate = pc_MaxAssimilationRate;
        vc_AssimilationRateReference = pc_ReferenceMaxAssimilationRate;
      } else if (vw_MeanAirTemperature < 42.0) {
        vc_AssimilationRate = pc_MaxAssimilationRate * (1.0 - (vw_MeanAirTemperature - 38.0) * 0.01);
        vc_AssimilationRateReference = pc_ReferenceMaxAssimilationRate * (1.0 - (vw_MeanAirTemperature - 38.0) * 0.01);
      } else if (vw_MeanAirTemperature < 45.0) {
        vc_AssimilationRate = pc_MaxAssimilationRate * (0.96 - (vw_MeanAirTemperature - 42.0) * 0.04);
        vc_AssimilationRateReference = pc_ReferenceMaxAssimilationRate * (0.96 - (vw_MeanAirTemperature - 42.0) * 0.04);
      } else if (vw_MeanAirTemperature < 54.0) {
        vc_AssimilationRate = pc_MaxAssimilationRate * (0.84 - (vw_MeanAirTemperature - 45.0) * 0.09);
        vc_AssimilationRateReference = pc_ReferenceMaxAssimilationRate * (0.84 - (vw_MeanAirTemperature - 45.0) * 0.09);
      } else {
        vc_AssimilationRate = 0;
        vc_AssimilationRateReference = 0;
      }
    }

    if (cutting_delay_days>0) {
        vc_AssimilationRate = 0.0;
        vc_AssimilationRateReference = 0.0;
    }

    if (vc_AssimilationRate < 0.1) {
      vc_AssimilationRate = 0.1;
    }

    if (vc_AssimilationRateReference < 0.1) {
      vc_AssimilationRateReference = 0.1;
    }

    ///////////////////////////////////////////////////////////////////////////
    // Calculation of light interception in the crop
    //
    // Penning De Vries, F.W.T and H.H. van Laar (1982): Simulation of
    // plant growth and crop production. Pudoc, Wageningen, The
    // Netherlands, p. 87-97.
    ///////////////////////////////////////////////////////////////////////////

    vc_NetRadiationUseEfficiency = (1.0 - pc_CanopyReflectionCoeff) * vc_RadiationUseEfficiency;
    vc_NetRadiationUseEfficiencyReference = (1.0 - pc_CanopyReflectionCoeff) * vc_RadiationUseEfficiencyReference;

    SSLAE = sin((90.0 + vc_Declination - vs_Latitude) * PI / 180.0); // = HERMES

    X = log(1.0 + 0.45 * vc_ClearDayRadiation / (vc_EffectiveDayLength * 3600.0) * vc_NetRadiationUseEfficiency / (SSLAE
        * vc_AssimilationRate)); // = HERMES
    XReference = log(1.0 + 0.45 * vc_ClearDayRadiation / (vc_EffectiveDayLength * 3600.0)
        * vc_NetRadiationUseEfficiencyReference / (SSLAE * vc_AssimilationRateReference));

    PHCH1 = SSLAE * vc_AssimilationRate * vc_EffectiveDayLength * X / (1.0 + X); // = HERMES
    PHCH1Reference = SSLAE * vc_AssimilationRateReference * vc_EffectiveDayLength * XReference / (1.0 + XReference);

    Y = log(1.0 + 0.55 * vc_ClearDayRadiation / (vc_EffectiveDayLength * 3600.0) * vc_NetRadiationUseEfficiency / ((5.0
        - SSLAE) * vc_AssimilationRate)); // = HERMES
    YReference = log(1.0 + 0.55 * vc_ClearDayRadiation / (vc_EffectiveDayLength * 3600.0) * vc_NetRadiationUseEfficiency
        / ((5.0 - SSLAE) * vc_AssimilationRateReference));

    PHCH2 = (5.0 - SSLAE) * vc_AssimilationRate * vc_EffectiveDayLength * Y / (1.0 + Y); // = HERMES
    PHCH2Reference = (5.0 - SSLAE) * vc_AssimilationRateReference * vc_EffectiveDayLength * YReference / (1.0
        + YReference);

    PHCH = 0.95 * (PHCH1 + PHCH2) + 20.5; // = HERMES
    PHCHReference = 0.95 * (PHCH1Reference + PHCH2Reference) + 20.5;

    PHC3 = PHCH * (1.0 - exp(-0.8 * vc_LeafAreaIndex));
    PHC3Reference = PHCHReference * (1.0 - exp(-0.8 * pc_ReferenceLeafAreaIndex));

    PHC4 = vc_AstronomicDayLenght * vc_LeafAreaIndex * vc_AssimilationRate;
    PHC4Reference = vc_AstronomicDayLenght * pc_ReferenceLeafAreaIndex * vc_AssimilationRateReference;

    if (PHC3 < PHC4) {
      PHCL = PHC3 * (1.0 - exp(-PHC4 / PHC3));
    } else {
      PHCL = PHC4 * (1.0 - exp(-PHC3 / PHC4));
    }

    if (PHC3Reference < PHC4Reference) {
      PHCLReference = PHC3Reference * (1.0 - exp(-PHC4Reference / PHC3Reference));
    } else {
      PHCLReference = PHC4Reference * (1.0 - exp(-PHC3Reference / PHC4Reference));
    }

    Z = vc_OvercastDayRadiation / (vc_EffectiveDayLength * 3600.0) * vc_NetRadiationUseEfficiency / (5.0
        * vc_AssimilationRate);

    PHOH1 = 5.0 * vc_AssimilationRate * vc_EffectiveDayLength * Z / (1.0 + Z);
    PHOH = 0.9935 * PHOH1 + 1.1;
    PHO3 = PHOH * (1.0 - exp(-0.8 * vc_LeafAreaIndex));
    PHO3Reference = PHOH * (1.0 - exp(-0.8 * pc_ReferenceLeafAreaIndex));

    if (PHO3 < PHC4) {
      PHOL = PHO3 * (1.0 - exp(-PHC4 / PHO3));
    } else {
      PHOL = PHC4 * (1.0 - exp(-PHO3 / PHC4));
    }

    if (PHO3Reference < PHC4Reference) {
      PHOLReference = PHO3Reference * (1.0 - exp(-PHC4Reference / PHO3Reference));
    } else {
      PHOLReference = PHC4Reference * (1.0 - exp(-PHO3Reference / PHC4Reference));
    }

    if (vc_LeafAreaIndex < 5.0) {
      vc_ClearDayCO2Assimilation = PHCL; // [J m-2]
      vc_OvercastDayCO2Assimilation = PHOL; // [J m-2]
    } else {
      vc_ClearDayCO2Assimilation = PHCH; // [J m-2]
      vc_OvercastDayCO2Assimilation = PHOH; // [J m-2]
    }

    vc_ClearDayCO2AssimilationReference = PHCLReference;
    vc_OvercastDayCO2AssimilationReference = PHOLReference;

    // Calculation of time fraction for overcast sky situations by
    // comparing clear day radiation and measured PAR in [J m-2].
    // HERMES uses PAR as 50% of global radiation

    vc_OvercastSkyTimeFraction = (vc_ClearDayRadiation - (1000000.0 * vc_GlobalRadiation * 0.50)) / (0.8
        * vc_ClearDayRadiation); // [J m-2]

    if (vc_OvercastSkyTimeFraction > 1.0) {
      vc_OvercastSkyTimeFraction = 1.0;
    }

    if (vc_OvercastSkyTimeFraction < 0.0) {
      vc_OvercastSkyTimeFraction = 0.0;
    }

    // Calculation of gross CO2 assimilation in dependence of cloudiness
    vc_GrossCO2Assimilation = vc_OvercastSkyTimeFraction * vc_OvercastDayCO2Assimilation + (1.0
        - vc_OvercastSkyTimeFraction) * vc_ClearDayCO2Assimilation;

    vc_GrossCO2AssimilationReference = vc_OvercastSkyTimeFraction * vc_OvercastDayCO2AssimilationReference + (1.0
        - vc_OvercastSkyTimeFraction) * vc_ClearDayCO2AssimilationReference;

    if (vc_OxygenDeficit < 1.0) {

      // vc_OxygenDeficit separates drought stress (ETa/Etp) from saturation stress.
      vc_DroughtStressThreshold = 0.0;
    } else {
      vc_DroughtStressThreshold = pc_DroughtStressThreshold[vc_DevelopmentalStage];
    }

    // Gross CO2 assimilation is used for reference evapotranspiration calculation.
    // For this purpose it must not be affected by drought stress, as the grass
    // reference is defined as being always well supplied with water. Water stress
    // is acting at a later stage.

    if (vc_TranspirationDeficit < vc_DroughtStressThreshold) {
      vc_GrossCO2Assimilation = vc_GrossCO2Assimilation; // *  vc_TranspirationDeficit;
    }

    // Calculation of photosynthesis rate from [kg CO2 ha-1 d-1] to [kg CH2O ha-1 d-1]
    vc_GrossPhotosynthesis = vc_GrossCO2Assimilation * 30.0 / 44.0;

    // Calculation of photosynthesis rate from [kg CO2 ha-1 d-1]  to [mol m-2 s-1] or [cm3 cm-2 s-1]
    vc_GrossPhotosynthesis_mol = vc_GrossCO2Assimilation * 22414.0 / (10.0 * 3600.0 * 24.0 * 44.0);
    vc_GrossPhotosynthesisReference_mol = vc_GrossCO2AssimilationReference * 22414.0 / (10.0 * 3600.0 * 24.0 * 44.0);

    // Converting photosynthesis rate from [kg CO2 ha leaf-1 d-1] to [kg CH2O ha-1  d-1]
    vc_Assimilates = vc_GrossCO2Assimilation * 30.0 / 44.0;

    // reduction value for assimilate amount to simulate field conditions;
    vc_Assimilates *= cropParams.pc_FieldConditionModifier;

    if (vc_TranspirationDeficit < vc_DroughtStressThreshold) {
      vc_Assimilates = vc_Assimilates * vc_TranspirationDeficit;

    }

    vc_GrossAssimilates = vc_Assimilates;

    // ########################################################################
    // #                              AGROSIM                                 #
    // ########################################################################

    // AGROSIM night and day temperatures
    vc_PhotoTemperature = vw_MaxAirTemperature - ((vw_MaxAirTemperature - vw_MinAirTemperature) / 4.0);
    vc_NightTemperature = vw_MinAirTemperature + ((vw_MaxAirTemperature - vw_MinAirTemperature) / 4.0);

    var vc_MaintenanceRespirationSum = 0.0;
    // AGOSIM night and day maintenance and growth respiration
    for (var i_Organ = 0; i_Organ < pc_NumberOfOrgans; i_Organ++) {
      vc_MaintenanceRespirationSum += (vc_OrganBiomass[i_Organ] - vc_OrganDeadBiomass[i_Organ])
          * pc_OrganMaintenanceRespiration[i_Organ]; // [kg CH2O ha-1]
      // * vc_ActiveFraction[i_Organ]; wenn nicht schon durch acc dead matter abgedeckt
    }

    var vc_NormalisedDayLength = 2.0 - (vc_PhotoperiodicDaylength / 12.0);

    vc_PhotoMaintenanceRespiration = vc_MaintenanceRespirationSum * pow(2.0, (pc_MaintenanceRespirationParameter_1
                      * (vc_PhotoTemperature - pc_MaintenanceRespirationParameter_2))) * (2.0 - vc_NormalisedDayLength);// @todo: [g m-2] --> [kg ha-1]

    vc_DarkMaintenanceRespiration = vc_MaintenanceRespirationSum * pow(2.0, (pc_MaintenanceRespirationParameter_1
                     * (vc_NightTemperature - pc_MaintenanceRespirationParameter_2))) * vc_NormalisedDayLength; // @todo: [g m-2] --> [kg ha-1]

    vc_MaintenanceRespirationAS = vc_PhotoMaintenanceRespiration + vc_DarkMaintenanceRespiration; // [kg CH2O ha-1]


    vc_Assimilates -= vc_PhotoMaintenanceRespiration + vc_DarkMaintenanceRespiration; // [kg CH2O ha-1]
    var vc_GrowthRespirationSum = 0.0;

    for (var i_Organ = 0; i_Organ < pc_NumberOfOrgans; i_Organ++) {
      vc_GrowthRespirationSum += (vc_OrganBiomass[i_Organ] - vc_OrganDeadBiomass[i_Organ])
          * pc_OrganGrowthRespiration[i_Organ];
    }

    if (vc_Assimilates > 0.0) {
      vc_PhotoGrowthRespiration = vc_GrowthRespirationSum * pow(2.0, (pc_GrowthRespirationParameter_1
          * (vc_PhotoTemperature - pc_GrowthRespirationParameter_2))) * (2.0 - vc_NormalisedDayLength); // [kg CH2O ha-1]
      if (vc_Assimilates > vc_PhotoGrowthRespiration) {
        vc_Assimilates -= vc_PhotoGrowthRespiration;

      } else {
        vc_PhotoGrowthRespiration = vc_Assimilates; // in this case the plant will be restricted in growth!
        vc_Assimilates = 0.0;
      }
    }

    if (vc_Assimilates > 0.0) {
      vc_DarkGrowthRespiration = vc_GrowthRespirationSum * pow(2.0, (pc_GrowthRespirationParameter_1
          * (vc_PhotoTemperature - pc_GrowthRespirationParameter_2))) * vc_NormalisedDayLength; // [kg CH2O ha-1]
      if (vc_Assimilates > vc_DarkGrowthRespiration) {

        vc_Assimilates -= vc_DarkGrowthRespiration;
      } else {
        vc_DarkGrowthRespiration = vc_Assimilates; // in this case the plant will be restricted in growth!
        vc_Assimilates = 0.0;
      }

    }
    vc_GrowthRespirationAS = vc_PhotoGrowthRespiration + vc_DarkGrowthRespiration; // [kg CH2O ha-1]
    vc_TotalRespired = vc_GrossAssimilates - vc_Assimilates; // [kg CH2O ha-1]

    /** to reactivate HERMES algorithms, needs to be vc_NetPhotosynthesis
     * used instead of  vc_Assimilates in the subsequent methods */

    // #########################################################################
    // HERMES calculation of maintenance respiration in dependence of temperature

    vc_MaintenanceTemperatureDependency = pow(2.0, (0.1 * vw_MeanAirTemperature - 2.5));

    vc_MaintenanceRespiration = 0.0;

    for (var i_Organ = 0; i_Organ < pc_NumberOfOrgans; i_Organ++) {
      vc_MaintenanceRespiration += (vc_OrganBiomass[i_Organ] - vc_OrganDeadBiomass[i_Organ])
          * pc_OrganMaintenanceRespiration[i_Organ];
    }

    if (vc_GrossPhotosynthesis < (vc_MaintenanceRespiration * vc_MaintenanceTemperatureDependency)) {
      vc_NetMaintenanceRespiration = vc_GrossPhotosynthesis;
    } else {
      vc_NetMaintenanceRespiration = vc_MaintenanceRespiration * vc_MaintenanceTemperatureDependency;
    }

    if (vw_MeanAirTemperature < pc_MinimumTemperatureForAssimilation) {
      vc_GrossPhotosynthesis = vc_NetMaintenanceRespiration;
    }
    // This section is now inactive
    // #########################################################################

  };

  var fc_HeatStressImpact = function (
    vw_MaxAirTemperature,
    vw_MinAirTemperature,
    vc_CurrentTotalTemperatureSum
  ) {

    // AGROSIM night and day temperatures
    var vc_PhotoTemperature = vw_MaxAirTemperature - ((vw_MaxAirTemperature - vw_MinAirTemperature) / 4.0);
    var vc_FractionOpenFlowers = 0.0;
    var vc_YesterdaysFractionOpenFlowers = 0.0;

    if ((pc_BeginSensitivePhaseHeatStress == 0.0) && (pc_EndSensitivePhaseHeatStress == 0.0)){
      vc_TotalCropHeatImpact = 1.0;
    }

    if ((vc_CurrentTotalTemperatureSum >= pc_BeginSensitivePhaseHeatStress) &&
        vc_CurrentTotalTemperatureSum < pc_EndSensitivePhaseHeatStress){

      // Crop heat redux: Challinor et al. (2005): Simulation of the impact of high
      // temperature stress on annual crop yields. Agricultural and Forest
      // Meteorology 135, 180 - 189.

      var vc_CropHeatImpact = 1.0 - ((vc_PhotoTemperature - pc_CriticalTemperatureHeatStress)
               / (pc_LimitingTemperatureHeatStress - pc_CriticalTemperatureHeatStress));

      if (vc_CropHeatImpact > 1.0)
        vc_CropHeatImpact = 1.0;

      if (vc_CropHeatImpact < 0.0)
        vc_CropHeatImpact = 0.0;

      // Fraction open flowers from Moriondo et al. (2011): Climate change impact
      // assessment: the role of climate extremes in crop yield simulation. Climatic
      // Change 104 (3-4), 679-701.

      vc_FractionOpenFlowers = 1.0 / (1.0 + ((1.0 / 0.015) - 1.0) * exp(-1.4 * vc_DaysAfterBeginFlowering));
      if (vc_DaysAfterBeginFlowering > 0){
        vc_YesterdaysFractionOpenFlowers = 1.0 / (1.0 + ((1.0 / 0.015) - 1.0) * exp(-1.4 * (vc_DaysAfterBeginFlowering - 1)));
      } else {
        vc_YesterdaysFractionOpenFlowers = 0.0;
      }

      var vc_DailyFloweringRate = vc_FractionOpenFlowers - vc_YesterdaysFractionOpenFlowers;

      // Total effect: Challinor et al. (2005): Simulation of the impact of high
      // temperature stress on annual crop yields. Agricultural and Forest
      // Meteorology 135, 180 - 189.
      vc_TotalCropHeatImpact += vc_CropHeatImpact * vc_DailyFloweringRate;

      vc_DaysAfterBeginFlowering += 1;

    }

    if (vc_CurrentTotalTemperatureSum >= pc_EndSensitivePhaseHeatStress){
      if (vc_TotalCropHeatImpact < vc_CropHeatRedux){
        vc_CropHeatRedux = vc_TotalCropHeatImpact;
      }
    }


    };

    var fc_DroughtImpactOnFertility = function (vc_TranspirationDeficit) {

    if (DEBUG) debug(arguments);

    if (vc_TranspirationDeficit < 0.0) vc_TranspirationDeficit = 0.0;

    // Fertility of the crop is reduced in cases of severe drought during bloom
    if ((vc_TranspirationDeficit < (pc_DroughtImpactOnFertilityFactor *
         pc_DroughtStressThreshold[vc_DevelopmentalStage])) &&
         (pc_AssimilatePartitioningCoeff[vc_DevelopmentalStage][vc_StorageOrgan] > 0.0)){

      var vc_TranspirationDeficitHelper = vc_TranspirationDeficit /
          (pc_DroughtImpactOnFertilityFactor * pc_DroughtStressThreshold[vc_DevelopmentalStage]);

      if (vc_OxygenDeficit < 1.0) {
        vc_DroughtImpactOnFertility = 1.0;
      } else {
        vc_DroughtImpactOnFertility = 1.0 - ((1.0 - vc_TranspirationDeficitHelper) * (1.0 - vc_TranspirationDeficitHelper));
      }

    } else {
      vc_DroughtImpactOnFertility = 1.0;
    }

  }

  var fc_CropNitrogen = function () {

    var vc_RootNRedux        = 0.0; // old REDWU
    var vc_RootNReduxHelper  = 0.0; // old WUX
    //var vc_MinimumNConcentration   = 0.0; // old MININ
    var vc_CropNReduxHelper  = 0.0; // old AUX

    vc_CriticalNConcentration = pc_NConcentrationPN *
          (1.0 + (pc_NConcentrationB0 *
          exp(-0.26 * (vc_AbovegroundBiomass + vc_BelowgroundBiomass) / 1000.0))) / 100.0;
          // [kg ha-1 -> t ha-1]

    vc_TargetNConcentration = vc_CriticalNConcentration * pc_LuxuryNCoeff;

    vc_NConcentrationAbovegroundBiomassOld = vc_NConcentrationAbovegroundBiomass;
    vc_NConcentrationRootOld = vc_NConcentrationRoot;

    if (vc_NConcentrationRoot < 0.01) {

      if (vc_NConcentrationRoot <= 0.005) {
        vc_RootNRedux = 0.0;
      }
      else {

        vc_RootNReduxHelper = (vc_NConcentrationRoot - 0.005) / 0.005;
        vc_RootNRedux = 1.0 - sqrt(1.0 - vc_RootNReduxHelper * vc_RootNReduxHelper);
      }
    }
    else {
      vc_RootNRedux = 1.0;
    }

    if (pc_FixingN == 0){
      if (vc_NConcentrationAbovegroundBiomass < vc_CriticalNConcentration) {

        if (vc_NConcentrationAbovegroundBiomass <= pc_MinimumNConcentration) {
          vc_CropNRedux = 0.0;
        } else {

          vc_CropNReduxHelper = (vc_NConcentrationAbovegroundBiomass - pc_MinimumNConcentration)
        / (vc_CriticalNConcentration - pc_MinimumNConcentration);

    //       // New Monica appraoch
         vc_CropNRedux = 1.0 - exp(pc_MinimumNConcentration - (5.0 * vc_CropNReduxHelper));

    //        // Original HERMES approach
    //        vc_CropNRedux = (1.0 - exp(1.0 + 1.0 / (vc_CropNReduxHelper - 1.0))) *
    //                    (1.0 - exp(1.0 + 1.0 / (vc_CropNReduxHelper - 1.0)));
        }
      } else {
        vc_CropNRedux = 1.0;
      }
    } else if (pc_FixingN == 1){
      if (vc_NConcentrationAbovegroundBiomass < vc_CriticalNConcentration) {
        vc_FixedN = vc_CriticalNConcentration - vc_NConcentrationAbovegroundBiomass;
        vc_NConcentrationAbovegroundBiomass = vc_CriticalNConcentration;
        vc_CropNRedux = 1.0;
      }
    } else {
      vc_CropNRedux = 1.0;
    }

    if (pc_NitrogenResponseOn == false){
      vc_CropNRedux = 1.0;
    }

  };

  var fc_CropDryMatter = function (
    vs_NumberOfLayers,
    vs_LayerThickness,
    vc_DevelopmentalStage,
    vc_Assimilates,
    /*vc_NetMaintenanceRespiration,*/   // hermes o. agrosim
    /*pc_CropSpecificMaxRootingDepth,*/ // JS! unused
    /*vs_SoilSpecificMaxRootingDepth,*/ // JS! unused
    vw_MeanAirTemperature
  ) {

    if (DEBUG) debug(arguments);

    var vc_MaxRootNConcentration                         = 0.0; // old WGM
    var vc_NConcentrationOptimum                         = 0.0; // old DTOPTN
    var vc_RootNIncrement                                = 0.0; // old WUMM
    var vc_AssimilatePartitioningCoeffOld                = 0.0;
    var vc_AssimilatePartitioningCoeff                   = 0.0;

    var user_crops = centralParameterProvider.userCropParameters;
    var pc_MaxCropNDemand = user_crops.pc_MaxCropNDemand;

    // var pc_GrowthRespirationRedux = user_crops.pc_GrowthRespirationRedux;
    // throw pc_GrowthRespirationRedux;

    // Assuming that growth respiration takes 30% of total assimilation --> 0.7 [kg ha-1]
    // vc_NetPhotosynthesis = (vc_GrossPhotosynthesis - vc_NetMaintenanceRespiration + vc_ReserveAssimilatePool) * pc_GrowthRespirationRedux; // from HERMES algorithms

    vc_NetPhotosynthesis = vc_Assimilates; // from AGROSIM algorithms
    vc_ReserveAssimilatePool = 0.0;

    vc_AbovegroundBiomassOld = vc_AbovegroundBiomass;
    vc_AbovegroundBiomass = 0.0;
    vc_BelowgroundBiomassOld = vc_BelowgroundBiomass;
    vc_BelowgroundBiomass = 0.0;
    vc_TotalBiomass = 0.0;

    //old PESUM [kg m-2 --> kg ha-1]
    vc_TotalBiomassNContent += soilColumn.vq_CropNUptake * 10000.0;
    // debug('soilColumn.vq_CropNUptake', soilColumn.vq_CropNUptake);

    // Dry matter production
    // old NRKOM
    // double assimilate_partition_shoot = 0.7;
    var assimilate_partition_leaf = 0.3;

    for (var i_Organ = 0; i_Organ < pc_NumberOfOrgans; i_Organ++) {

        vc_AssimilatePartitioningCoeffOld = pc_AssimilatePartitioningCoeff[vc_DevelopmentalStage - 1][i_Organ];
        vc_AssimilatePartitioningCoeff = pc_AssimilatePartitioningCoeff[vc_DevelopmentalStage][i_Organ];

        //Identify storage organ and reduce assimilate flux in case of heat stress
        if (pc_StorageOrgan[i_Organ] == 1){
            vc_AssimilatePartitioningCoeffOld = vc_AssimilatePartitioningCoeffOld * vc_CropHeatRedux * vc_DroughtImpactOnFertility;
            vc_AssimilatePartitioningCoeff = vc_AssimilatePartitioningCoeff * vc_CropHeatRedux * vc_DroughtImpactOnFertility;
        }


        if ((vc_CurrentTemperatureSum[vc_DevelopmentalStage] / pc_StageTemperatureSum[vc_DevelopmentalStage]) > 1) {

            // Pflanze ist ausgewachsen
            vc_OrganGrowthIncrement[i_Organ] = 0.0;
            vc_OrganSenescenceIncrement[i_Organ] = 0.0;
        } else {

            // test if there is a positive bilance of produced assimilates
            // if vc_NetPhotosynthesis is negativ, the crop needs more for
            // maintenance than for building new biomass
            if (vc_NetPhotosynthesis < 0.0) {

                // reduce biomass from leaf and shoot because of negative assimilate
                //! TODO: hard coded organ ids; must be more generalized because in database organ_ids can be mixed
                vc_OrganBiomass[i_Organ];

                if (i_Organ == LEAF) { // leaf

                    var incr = assimilate_partition_leaf * vc_NetPhotosynthesis;
                    if (abs(incr) <= vc_OrganBiomass[i_Organ]){
                        console.log("LEAF - Reducing organ biomass - default case (" + (vc_OrganBiomass[i_Organ] + vc_OrganGrowthIncrement[i_Organ]) + ")");
                        vc_OrganGrowthIncrement[i_Organ] = incr;
                    } else {
                        // temporary hack because complex algorithm produces questionable results
                        console.log("LEAF - Not enough biomass for reduction - Reducing only what is available ");
                        vc_OrganGrowthIncrement[i_Organ] = (-1) * vc_OrganBiomass[i_Organ];


    //                      debug() << "LEAF - Not enough biomass for reduction; Need to calculate new partition coefficient" << endl;
    //                      // calculate new partition coefficient to detect, how much of organ biomass
    //                      // can be reduced
    //                      assimilate_partition_leaf = abs(vc_OrganBiomass[i_Organ] / vc_NetPhotosynthesis);
    //                      assimilate_partition_shoot = 1.0 - assimilate_partition_leaf;
    //                      debug() << "LEAF - New Partition: " << assimilate_partition_leaf << endl;
    //
    //                      // reduce biomass for leaf
    //                      incr = assimilate_partition_leaf * vc_NetPhotosynthesis; // should be negative, therefor the addition
    //                      vc_OrganGrowthIncrement[i_Organ] = incr;
    //                      debug() << "LEAF - Reducing organ by " << incr << " (" << vc_OrganBiomass[i_Organ] + vc_OrganGrowthIncrement[i_Organ] << ")"<< endl;
                    }

                } else if (i_Organ == SHOOT) { // shoot
                    // JV! Why not (1 - assimilate_partition_leaf)?
                    var incr = assimilate_partition_leaf * vc_NetPhotosynthesis; // should be negative

                    if (abs(incr) <= vc_OrganBiomass[i_Organ]){
                        vc_OrganGrowthIncrement[i_Organ] = incr;
                        console.log("SHOOT - Reducing organ biomass - default case (" + (vc_OrganBiomass[i_Organ] + vc_OrganGrowthIncrement[i_Organ]) + ")");
                    } else {
                        // temporary hack because complex algorithm produces questionable results
                        console.log("SHOOT - Not enough biomass for reduction - Reducing only what is available ");
                        vc_OrganGrowthIncrement[i_Organ] = (-1) * vc_OrganBiomass[i_Organ];


    //                      debug() << "SHOOT - Not enough biomass for reduction; Need to calculate new partition coefficient" << endl;
    //
    //                      assimilate_partition_shoot = abs(vc_OrganBiomass[i_Organ] / vc_NetPhotosynthesis);
    //                      assimilate_partition_leaf = 1.0 - assimilate_partition_shoot;
    //                      debug() << "SHOOT - New Partition: " << assimilate_partition_shoot << endl;
    //
    //                      incr = assimilate_partition_shoot * vc_NetPhotosynthesis;
    //                      vc_OrganGrowthIncrement[i_Organ] = incr;
    //                      debug() << "SHOOT - Reducing organ (" << vc_OrganBiomass[i_Organ] + vc_OrganGrowthIncrement[i_Organ] << ")"<< endl;
    //
    //                      // test if there is the possibility to reduce biomass of leaf
    //                      // for remaining assimilates
    //                      incr = assimilate_partition_leaf * vc_NetPhotosynthesis;
    //                      double available_leaf_biomass = vc_OrganBiomass[LEAF] + vc_OrganGrowthIncrement[LEAF];
    //                      if (incr<available_leaf_biomass) {
    //                          // leaf biomass is big enough, so reduce biomass furthermore
    //                          vc_OrganGrowthIncrement[LEAF] += incr; // should be negative, therefor the addition
    //                          debug() << "LEAF - Reducing leaf biomasse further (" << vc_OrganBiomass[LEAF] + vc_OrganGrowthIncrement[LEAF] << ")"<< endl;
    //                      } else {
    //                          // worst case - there is not enough biomass available to reduce
    //                          // maintenaince respiration requires more assimilates that can be
    //                          // provided by plant itselft
    //                          // now the plant is dying - sorry
    //                          dyingOut = true;
    //                          cout << "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! " << endl;
    //                          cout << "Oh noo - I am dying - There has not been enough biomass required by " <<
    //                              "maintenance respiration etc.\n Not long now and I am death ... " << endl;
    //                          cout << "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" << endl;
    //                      }

                    }

                } else {
                    // root or storage organ - do nothing in case of negative photosynthesis
                    vc_OrganGrowthIncrement[i_Organ] = 0.0;
                }

            } else { // if (vc_NetPhotosynthesis < 0.0) {

                vc_OrganGrowthIncrement[i_Organ] = vc_NetPhotosynthesis *
                     (vc_AssimilatePartitioningCoeffOld
                     + ((vc_AssimilatePartitioningCoeff - vc_AssimilatePartitioningCoeffOld)
                     * (vc_CurrentTemperatureSum[vc_DevelopmentalStage]
                     / pc_StageTemperatureSum[vc_DevelopmentalStage]))) * vc_CropNRedux; // [kg CH2O ha-1]
    
            }
            vc_OrganSenescenceIncrement[i_Organ] = (vc_OrganBiomass[i_Organ] - vc_OrganDeadBiomass[i_Organ]) *
                 (pc_OrganSenescenceRate[vc_DevelopmentalStage - 1][i_Organ]
                 + ((pc_OrganSenescenceRate[vc_DevelopmentalStage][i_Organ]
                 - pc_OrganSenescenceRate[vc_DevelopmentalStage - 1][i_Organ])
                 * (vc_CurrentTemperatureSum[vc_DevelopmentalStage] / pc_StageTemperatureSum[vc_DevelopmentalStage]))); // [kg CH2O ha-1]

        }

        if (i_Organ != vc_StorageOrgan) {
          // Wurzel, Sprossachse, Blatt
          vc_OrganBiomass[i_Organ] += (vc_OrganGrowthIncrement[i_Organ] * vc_TimeStep)
          - (vc_OrganSenescenceIncrement[i_Organ] * vc_TimeStep); // [kg CH2O ha-1]
          vc_OrganBiomass[vc_StorageOrgan] += 0.35 * vc_OrganSenescenceIncrement[i_Organ]; // [kg CH2O ha-1]
        } else {
            if (vc_DevelopmentalStage < pc_NumberOfDevelopmentalStages) {
                // Reallocation of asimilates to storage organ in final developmental stage

                vc_OrganBiomass[i_Organ] += (vc_OrganGrowthIncrement[i_Organ] * vc_TimeStep)
                        - (vc_OrganSenescenceIncrement[i_Organ] * vc_TimeStep)
                        + 0.3 * ((vc_OrganSenescenceIncrement[i_Organ - 1] * vc_TimeStep)
                            + (vc_OrganSenescenceIncrement[i_Organ - 2] * vc_TimeStep)
                            + vc_OrganSenescenceIncrement[i_Organ  - 3] * vc_TimeStep); // [kg CH2O ha-1]
            } else {
                vc_OrganBiomass[i_Organ] += (vc_OrganGrowthIncrement[i_Organ] * vc_TimeStep)
                        - (vc_OrganSenescenceIncrement[i_Organ] * vc_TimeStep); // [kg CH2O ha-1]
            }
        }

        vc_OrganDeadBiomass[i_Organ] += vc_OrganSenescenceIncrement[i_Organ] * vc_TimeStep; // [kg CH2O ha-1]
        vc_OrganGreenBiomass[i_Organ] = vc_OrganBiomass[i_Organ] - vc_OrganDeadBiomass[i_Organ]; // [kg CH2O ha-1]

        if ((vc_OrganGreenBiomass[i_Organ]) < 0.0) {

            vc_OrganDeadBiomass[i_Organ] = vc_OrganBiomass[i_Organ];
            vc_OrganGreenBiomass[i_Organ] = 0.0;
        }

        if (pc_AbovegroundOrgan[i_Organ] == 1) {

            vc_AbovegroundBiomass += vc_OrganBiomass[i_Organ]; // [kg CH2O ha-1]

        } else if ((pc_AbovegroundOrgan[i_Organ] == 0) && (i_Organ > 0)){

            vc_BelowgroundBiomass += vc_OrganBiomass[i_Organ]; // [kg CH2O ha-1]

        }

        vc_TotalBiomass += vc_OrganBiomass[i_Organ]; // [kg CH2O ha-1]

    }

    /** @todo N redux noch ausgeschaltet */
    vc_ReserveAssimilatePool = 0.0; //+= vc_NetPhotosynthesis * (1.0 - vc_CropNRedux);
    vc_RootBiomassOld = vc_RootBiomass;
    vc_RootBiomass = vc_OrganBiomass[0];

    if (vc_DevelopmentalStage > 0) {

      vc_MaxRootNConcentration = pc_StageMaxRootNConcentration[vc_DevelopmentalStage - 1]
         - (pc_StageMaxRootNConcentration[vc_DevelopmentalStage - 1] - pc_StageMaxRootNConcentration[vc_DevelopmentalStage])
         * vc_CurrentTemperatureSum[vc_DevelopmentalStage] / pc_StageTemperatureSum[vc_DevelopmentalStage]; //[kg kg-1]
    } else {
      vc_MaxRootNConcentration = pc_StageMaxRootNConcentration[vc_DevelopmentalStage];
    }

    vc_CropNDemand = ((vc_TargetNConcentration * vc_AbovegroundBiomass)
      + (vc_RootBiomass * vc_MaxRootNConcentration)
      + (vc_TargetNConcentration * vc_BelowgroundBiomass / pc_ResidueNRatio)
      - vc_TotalBiomassNContent) * vc_TimeStep; // [kg ha-1]

    vc_NConcentrationOptimum = ((vc_TargetNConcentration
         - (vc_TargetNConcentration - vc_CriticalNConcentration) * 0.15) * vc_AbovegroundBiomass
        + (vc_TargetNConcentration
           - (vc_TargetNConcentration - vc_CriticalNConcentration) * 0.15) * vc_BelowgroundBiomass / pc_ResidueNRatio
        + (vc_RootBiomass * vc_MaxRootNConcentration) - vc_TotalBiomassNContent) * vc_TimeStep; // [kg ha-1]


    if (vc_CropNDemand > (pc_MaxCropNDemand * vc_TimeStep)) {
      // Not more than 6kg N per day to be taken up.
      vc_CropNDemand = pc_MaxCropNDemand * vc_TimeStep;
    }

    if (vc_CropNDemand < 0) {
      vc_CropNDemand = 0.0;
    }

    if (vc_RootBiomass < vc_RootBiomassOld) {
      /** @todo: Claas: Macht die Bedingung hier Sinn? Hat sich die Wurzel wirklich zurückgebildet? */
      vc_RootNIncrement = (vc_RootBiomassOld - vc_RootBiomass) * vc_NConcentrationRoot;
    } else {
      vc_RootNIncrement = 0;
    }

    // In case of drought stress the root will grow deeper
    if ((vc_TranspirationDeficit < (0.95 * pc_DroughtStressThreshold[vc_DevelopmentalStage])) &&
        (vc_RootingDepth_m > 0.95 * vc_MaxRootingDepth) &&
        (vc_DevelopmentalStage < (pc_NumberOfDevelopmentalStages - 1))){
      vc_MaxRootingDepth += 0.005;
    }

    // in case of sensitivity analysis, this parameter would not be undefined
    // so overwrite with fix value
    // if (centralParameterProvider.sensitivityAnalysisParameters.vc_MaxRootingDepth != UNDEFINED) {
    //   vc_MaxRootingDepth = centralParameterProvider.sensitivityAnalysisParameters.vc_MaxRootingDepth;
    // }

    if (vc_MaxRootingDepth > (vs_NumberOfLayers * vs_LayerThickness)) {
      vc_MaxRootingDepth = vs_NumberOfLayers * vs_LayerThickness;
    }

    // ***************************************************************************
    // *** Taken from Pedersen et al. 2010: Modelling diverse root density     ***
    // *** dynamics and deep nitrogen uptake - a simple approach.              ***
    // *** Plant & Soil 326, 493 - 510                                         ***
    // ***************************************************************************

    // Determining temperature sum for root growth
    var pc_MaximumTemperatureRootGrowth = pc_MinimumTemperatureRootGrowth + 20.0;
    var vc_DailyTemperatureRoot = 0.0;
    if (vw_MeanAirTemperature >= pc_MaximumTemperatureRootGrowth){
      vc_DailyTemperatureRoot = pc_MaximumTemperatureRootGrowth - pc_MinimumTemperatureRootGrowth;
    } else {
      vc_DailyTemperatureRoot= vw_MeanAirTemperature - pc_MinimumTemperatureRootGrowth;
    }
    if (vc_DailyTemperatureRoot < 0.0){
      vc_DailyTemperatureRoot = 0.0;
    }
    vc_CurrentTotalTemperatureSumRoot += vc_DailyTemperatureRoot ;

    // Determining root penetration rate according to soil clay content [m °C-1 d-1]
    var vc_RootPenetrationRate = 0.0; // [m °C-1 d-1]
    if (soilColumn[vc_RootingDepth].vs_SoilClayContent <= 0.02 ){
      vc_RootPenetrationRate = 0.5 * pc_RootPenetrationRate;
    } else if (soilColumn[vc_RootingDepth].vs_SoilClayContent <= 0.08 ){
      vc_RootPenetrationRate = ((1.0 / 3.0) + (0.5 / 0.06 * soilColumn[vc_RootingDepth].vs_SoilClayContent))
               * pc_RootPenetrationRate; // [m °C-1 d-1]
    } else {
      vc_RootPenetrationRate = pc_RootPenetrationRate; // [m °C-1 d-1]
    }

    // Calculating rooting depth [m]
    if (vc_CurrentTotalTemperatureSumRoot <= pc_RootGrowthLag) {
      vc_RootingDepth_m = pc_InitialRootingDepth; // [m]
    } else {
      // corrected because oscillating rooting depth at layer boundaries with texture change
     /* vc_RootingDepth_m = pc_InitialRootingDepth
          + ((vc_CurrentTotalTemperatureSumRoot - pc_RootGrowthLag)
          * vc_RootPenetrationRate); // [m] */
          
      vc_RootingDepth_m += (vc_DailyTemperatureRoot * vc_RootPenetrationRate); // [m]

    }

    if (vc_RootingDepth_m <= pc_InitialRootingDepth){
      vc_RootingDepth_m = pc_InitialRootingDepth;
    }

    if (vc_RootingDepth_m > vc_MaxRootingDepth) {
      vc_RootingDepth_m = vc_MaxRootingDepth; // [m]
    }

    if (vc_RootingDepth_m > vs_MaxEffectiveRootingDepth) {
        vc_RootingDepth_m = vs_MaxEffectiveRootingDepth;
    }

    // Calculating rooting depth layer []
    vc_RootingDepth = int(floor(0.5 + (vc_RootingDepth_m / vs_LayerThickness))); // []

    vc_RootingZone = int(floor(0.5 + ((1.3 * vc_RootingDepth_m) / vs_LayerThickness))); // []

    if (vc_RootingZone > vs_NumberOfLayers){
      vc_RootingZone = vs_NumberOfLayers;
    }

    vc_TotalRootLength = vc_RootBiomass * pc_SpecificRootLength; //[m m-2]

    // Calculating a root density distribution factor []
    var vc_RootDensityFactor = new Array(vs_NumberOfLayers);
    for (var i_Layer = 0; i_Layer < vs_NumberOfLayers; i_Layer++) {
      if (i_Layer < vc_RootingDepth){
        vc_RootDensityFactor[i_Layer] = exp(-pc_RootFormFactor * (i_Layer * vs_LayerThickness)); // []
      } else if (i_Layer < vc_RootingZone){
        vc_RootDensityFactor[i_Layer] = exp(-pc_RootFormFactor * (i_Layer * vs_LayerThickness))
          * (1.0 - int((i_Layer - vc_RootingDepth) / (vc_RootingZone - vc_RootingDepth))); // JS! int division
      } else {
        vc_RootDensityFactor[i_Layer] = 0.0; // []
      }
    }

    // Summing up all factors to scale to a relative factor between [0;1]
    var vc_RootDensityFactorSum = 0.0;
    for (var i_Layer = 0; i_Layer < vc_RootingZone; i_Layer++) {
      vc_RootDensityFactorSum += vc_RootDensityFactor[i_Layer]; // []
    }

    // Calculating root density per layer from total root length and
    // a relative root density distribution factor
    for (var i_Layer = 0; i_Layer < vc_RootingZone; i_Layer++) {
      vc_RootDensity[i_Layer] = (vc_RootDensityFactor[i_Layer] / vc_RootDensityFactorSum)
        * vc_TotalRootLength; // [m m-3]
    }

    for (var i_Layer = 0; i_Layer < vc_RootingZone; i_Layer++) {
      // Root diameter [m]
      if (pc_AbovegroundOrgan[3] == 0) {
        vc_RootDiameter[i_Layer] = 0.0001; //[m]
      } else {
        vc_RootDiameter[i_Layer] = 0.0002 - ((i_Layer + 1) * 0.00001); // [m]
      }

      // in case of sensitivity analysis, this parameter would not be undefined
      // so return fix value instead of calculating mean bulk density
      // if (centralParameterProvider.sensitivityAnalysisParameters.vc_RootDiameter != UNDEFINED) {
      //   vc_RootDiameter[i_Layer] = centralParameterProvider.sensitivityAnalysisParameters.vc_RootDiameter;
      // }

      // Default root decay - 10 %
      vo_FreshSoilOrganicMatter[i_Layer] += vc_RootNIncrement * vc_RootDensity[i_Layer]
            * 10.0 / vc_TotalRootLength;

    }

    // Limiting the maximum N-uptake to 26-13*10^-14 mol/cm W./sec
    vc_MaxNUptake = pc_MaxNUptakeParam - (vc_CurrentTotalTemperatureSum / vc_TotalTemperatureSum); // [kg m Wurzel-1]

    if ((vc_CropNDemand / 10000.0) > (vc_TotalRootLength * vc_MaxNUptake * vc_TimeStep)) {
      vc_CropNDemand = vc_TotalRootLength * vc_MaxNUptake * vc_TimeStep; //[kg m-2]
    } else {
      vc_CropNDemand = vc_CropNDemand / 10000.0; // [kg ha-1 --> kg m-2]
    }
  };

  // double 
  var fc_ReferenceEvapotranspiration = function (
    vs_HeightNN,
    vw_MaxAirTemperature,
    vw_MinAirTemperature,
    vw_RelativeHumidity,
    vw_MeanAirTemperature,
    vw_WindSpeed,
    vw_WindSpeedHeight,
    vc_GlobalRadiation,
    vw_AtmosphericCO2Concentration,
    vc_GrossPhotosynthesisReference_mol
  ) {

    if (DEBUG) debug(arguments);

    var vc_AtmosphericPressure; //[kPA]
    var vc_PsycrometerConstant; //[kPA °C-1]
    var vc_SaturatedVapourPressureMax; //[kPA]
    var vc_SaturatedVapourPressureMin; //[kPA]
    var vc_SaturatedVapourPressure; //[kPA]
    var vc_VapourPressure; //[kPA]
    var vc_SaturationDeficit; //[kPA]
    var vc_SaturatedVapourPressureSlope; //[kPA °C-1]
    var vc_WindSpeed_2m; //[m s-1]
    var vc_AerodynamicResistance; //[s m-1]
    var vc_SurfaceResistance; //[s m-1]
    var vc_ReferenceEvapotranspiration; //[mm]
    var vw_NetRadiation; //[MJ m-2]

    var user_crops = centralParameterProvider.userCropParameters;
    var pc_SaturationBeta = user_crops.pc_SaturationBeta; // Original: Yu et al. 2001; beta = 3.5
    var pc_StomataConductanceAlpha = user_crops.pc_StomataConductanceAlpha; // Original: Yu et al. 2001; alpha = 0.06
    var pc_ReferenceAlbedo = user_crops.pc_ReferenceAlbedo; // FAO Green gras reference albedo from Allen et al. (1998)

    // Calculation of atmospheric pressure
    vc_AtmosphericPressure = 101.3 * pow(((293.0 - (0.0065 * vs_HeightNN)) / 293.0), 5.26);

    // Calculation of psychrometer constant - Luchtfeuchtigkeit
    vc_PsycrometerConstant = 0.000665 * vc_AtmosphericPressure;

    // Calc. of saturated water vapour pressure at daily max temperature
    vc_SaturatedVapourPressureMax = 0.6108 * exp((17.27 * vw_MaxAirTemperature) / (237.3 + vw_MaxAirTemperature));

    // Calc. of saturated water vapour pressure at daily min temperature
    vc_SaturatedVapourPressureMin = 0.6108 * exp((17.27 * vw_MinAirTemperature) / (237.3 + vw_MinAirTemperature));

    // Calculation of the saturated water vapour pressure
    vc_SaturatedVapourPressure = (vc_SaturatedVapourPressureMax + vc_SaturatedVapourPressureMin) / 2.0;

    // Calculation of the water vapour pressure
    if (vw_RelativeHumidity <= 0.0){
      // Assuming Tdew = Tmin as suggested in FAO56 Allen et al. 1998
      vc_VapourPressure = vc_SaturatedVapourPressureMin;
    } else {
      vc_VapourPressure = vw_RelativeHumidity * vc_SaturatedVapourPressure;
    }

    // Calculation of the air saturation deficit
    vc_SaturationDeficit = vc_SaturatedVapourPressure - vc_VapourPressure;

    // Slope of saturation water vapour pressure-to-temperature relation
    vc_SaturatedVapourPressureSlope = (4098.0 * (0.6108 * exp((17.27 * vw_MeanAirTemperature) / (vw_MeanAirTemperature
        + 237.3)))) / ((vw_MeanAirTemperature + 237.3) * (vw_MeanAirTemperature + 237.3));

    // Calculation of wind speed in 2m height
    vc_WindSpeed_2m = vw_WindSpeed * (4.87 / (log(67.8 * vw_WindSpeedHeight - 5.42)));

    // Calculation of the aerodynamic resistance
    vc_AerodynamicResistance = 208.0 / vc_WindSpeed_2m;

    if (vc_GrossPhotosynthesisReference_mol <= 0.0) {
      vc_StomataResistance = 999999.9; // [s m-1]
    } else {
      vc_StomataResistance = // [s m-1]
          (vw_AtmosphericCO2Concentration * (1.0 + vc_SaturationDeficit / pc_SaturationBeta))
              / (pc_StomataConductanceAlpha * vc_GrossPhotosynthesisReference_mol);
    }

    vc_SurfaceResistance = vc_StomataResistance / 1.44;

    // vc_SurfaceResistance = vc_StomataResistance / (vc_CropHeight * vc_LeafAreaIndex);

    // vw_NetRadiation = vc_GlobalRadiation * (1.0 - pc_ReferenceAlbedo); // [MJ m-2]

    var vc_ClearSkyShortwaveRadiation = (0.75 + 0.00002 * vs_HeightNN) * vc_ExtraterrestrialRadiation;
    var vc_RelativeShortwaveRadiation = vc_GlobalRadiation / vc_ClearSkyShortwaveRadiation;
    var vc_NetShortwaveRadiation = (1.0 - pc_ReferenceAlbedo) * vc_GlobalRadiation;

    var pc_BolzmanConstant = 0.0000000049; // Bolzmann constant 4.903 * 10-9 MJ m-2 K-4 d-1
    vw_NetRadiation = vc_NetShortwaveRadiation - (pc_BolzmanConstant
      * (pow((vw_MinAirTemperature + 273.16), 4.0) + pow((vw_MaxAirTemperature
      + 273.16), 4.0)) / 2.0 * (1.35 * vc_RelativeShortwaveRadiation - 0.35)
      * (0.34 - 0.14 * sqrt(vc_VapourPressure)));

    // Calculation of reference evapotranspiration
    // Penman-Monteith-Method FAO
    vc_ReferenceEvapotranspiration = ((0.408 * vc_SaturatedVapourPressureSlope * vw_NetRadiation)
        + (vc_PsycrometerConstant * (900.0 / (vw_MeanAirTemperature + 273.0)) * vc_WindSpeed_2m * vc_SaturationDeficit))
        / (vc_SaturatedVapourPressureSlope + vc_PsycrometerConstant * (1.0 + (vc_SurfaceResistance / vc_AerodynamicResistance)));

    return vc_ReferenceEvapotranspiration;

  };

  var fc_CropWaterUptake = function (
    vs_NumberOfLayers,
    vs_LayerThickness,
    vc_SoilCoverage,
    vc_RootingZone,
    vc_GroundwaterTable,
    vc_ReferenceEvapotranspiration,
    vw_GrossPrecipitation,
    vc_CurrentTotalTemperatureSum ,
    vc_TotalTemperatureSum
  ) {

    if (DEBUG) debug(arguments);

    // JS! make sure it is an "int"
    vc_RootingZone = int(vc_RootingZone);
    vc_GroundwaterTable = int(vc_GroundwaterTable);


    var vc_PotentialTranspirationDeficit = 0.0; // [mm]
    vc_PotentialTranspiration = 0.0; // old TRAMAX [mm]
    var vc_PotentialEvapotranspiration = 0.0; // [mm]
    var vc_TranspirationReduced = 0.0; // old TDRED [mm]
    vc_ActualTranspiration = 0.0; // [mm]
    var vc_RemainingTotalRootEffectivity = 0.0; //old WEFFREST [m]
    var vc_CropWaterUptakeFromGroundwater  = 0.0; // old GAUF [mm]
    var vc_TotalRootEffectivity = 0.0; // old WEFF [m]
    var vc_ActualTranspirationDeficit = 0.0; // old TREST [mm]
    var vc_Interception = 0.0;
    vc_RemainingEvapotranspiration = 0.0;

    for (var i_Layer = 0; i_Layer < vs_NumberOfLayers; i_Layer++) {
      vc_Transpiration[i_Layer] = 0.0; // old TP [mm]
      vc_TranspirationRedux[i_Layer] = 0.0; // old TRRED []
      vc_RootEffectivity[i_Layer] = 0.0; // old WUEFF [?]
    }

    // ################
    // # Interception #
    // ################

    var vc_InterceptionStorageOld = vc_InterceptionStorage;

    // Interception in [mm d-1];
    vc_Interception = (2.5 * vc_CropHeight * vc_SoilCoverage) - vc_InterceptionStorage;

    if (vc_Interception < 0) {
      vc_Interception = 0.0;
    }

    // If no precipitation occurs, vm_Interception = 0
    if (vw_GrossPrecipitation <= 0) {
      vc_Interception = 0.0;
    }

    // Calculating net precipitation and adding to surface water
    if (vw_GrossPrecipitation <= vc_Interception) {
      vc_Interception = vw_GrossPrecipitation;
      vc_NetPrecipitation = 0.0;
    } else {
      vc_NetPrecipitation = vw_GrossPrecipitation - vc_Interception;
    }

    // add intercepted precipitation to the virtual interception water storage
    vc_InterceptionStorage = vc_InterceptionStorageOld + vc_Interception;


    // #################
    // # Transpiration #
    // #################

    vc_PotentialEvapotranspiration = vc_ReferenceEvapotranspiration * vc_KcFactor; // [mm]

    // from HERMES:
    if (vc_PotentialEvapotranspiration > 6.5) vc_PotentialEvapotranspiration = 6.5;

    vc_RemainingEvapotranspiration = vc_PotentialEvapotranspiration; // [mm]

    // If crop holds intercepted water, first evaporation from crop surface
    if (vc_InterceptionStorage > 0.0) {
      if (vc_RemainingEvapotranspiration >= vc_InterceptionStorage) {
        vc_RemainingEvapotranspiration -= vc_InterceptionStorage;
        vc_EvaporatedFromIntercept = vc_InterceptionStorage;
        vc_InterceptionStorage = 0.0;
      } else {
        vc_InterceptionStorage -= vc_RemainingEvapotranspiration;
        vc_EvaporatedFromIntercept = vc_RemainingEvapotranspiration;
        vc_RemainingEvapotranspiration = 0.0;
      }
    } else {
      vc_EvaporatedFromIntercept = 0.0;
    }

    // if the plant has matured, no transpiration occurs!
    if (vc_DevelopmentalStage < vc_FinalDevelopmentalStage){
    //if ((vc_CurrentTotalTemperatureSum / vc_TotalTemperatureSum) < 1.0){

      vc_PotentialTranspiration = vc_RemainingEvapotranspiration * vc_SoilCoverage; // [mm]

      for (var i_Layer = 0; i_Layer < vc_RootingZone; i_Layer++) {
        
        var vc_AvailableWater = soilColumn[i_Layer].get_FieldCapacity() - soilColumn[i_Layer].get_PermanentWiltingPoint();
        var vc_AvailableWaterPercentage = (soilColumn[i_Layer].get_Vs_SoilMoisture_m3() 
          - soilColumn[i_Layer].get_PermanentWiltingPoint()) / vc_AvailableWater;
        
        if (vc_AvailableWaterPercentage < 0.0) vc_AvailableWaterPercentage = 0.0;

        if (vc_AvailableWaterPercentage < 0.15) {
          vc_TranspirationRedux[i_Layer] = vc_AvailableWaterPercentage * 3.0; // []
          vc_RootEffectivity[i_Layer] = 0.15 + 0.45 * vc_AvailableWaterPercentage / 0.15; // []
        } else if (vc_AvailableWaterPercentage < 0.3) {
          vc_TranspirationRedux[i_Layer] = 0.45 + (0.25 * (vc_AvailableWaterPercentage - 0.15) / 0.15);
          vc_RootEffectivity[i_Layer] = 0.6 + (0.2 * (vc_AvailableWaterPercentage - 0.15) / 0.15);
        } else if (vc_AvailableWaterPercentage < 0.5) {
          vc_TranspirationRedux[i_Layer] = 0.7 + (0.275 * (vc_AvailableWaterPercentage - 0.3) / 0.2);
          vc_RootEffectivity[i_Layer] = 0.8 + (0.2 * (vc_AvailableWaterPercentage - 0.3) / 0.2);
        } else if (vc_AvailableWaterPercentage < 0.75) {
          vc_TranspirationRedux[i_Layer] = 0.975 + (0.025 * (vc_AvailableWaterPercentage - 0.5) / 0.25);
          vc_RootEffectivity[i_Layer] = 1.0;
        } else {
          vc_TranspirationRedux[i_Layer] = 1.0;
          vc_RootEffectivity[i_Layer] = 1.0;
        }

        if (vc_TranspirationRedux[i_Layer] < 0)
          vc_TranspirationRedux[i_Layer] = 0.0;
        
        if (vc_RootEffectivity[i_Layer] < 0)
          vc_RootEffectivity[i_Layer] = 0.0;
        
        if (i_Layer == vc_GroundwaterTable) { // old GRW
          vc_RootEffectivity[i_Layer] = 0.5;
        }
        
        if (i_Layer > vc_GroundwaterTable) { // old GRW
          vc_RootEffectivity[i_Layer] = 0.0;
        }

        if (((i_Layer + 1) * vs_LayerThickness) >= vs_MaxEffectiveRootingDepth) {
          vc_RootEffectivity[i_Layer] = 0.0;
        }      
        
        vc_TotalRootEffectivity += vc_RootEffectivity[i_Layer] * vc_RootDensity[i_Layer]; //[m m-3]
        vc_RemainingTotalRootEffectivity = vc_TotalRootEffectivity;
      }

      for (var i_Layer = 0; i_Layer < vs_NumberOfLayers; i_Layer++) {
        
        if (i_Layer > min(vc_RootingZone, vc_GroundwaterTable + 1)) {
          vc_Transpiration[i_Layer] = 0.0; //[mm]
        } else {
          vc_Transpiration[i_Layer] = vc_PotentialTranspiration * ((vc_RootEffectivity[i_Layer] * vc_RootDensity[i_Layer])
                   / vc_TotalRootEffectivity) * vc_OxygenDeficit;

          // [mm]
        }

      }

      for (var i_Layer = 0; i_Layer < min(vc_RootingZone, vc_GroundwaterTable + 1); i_Layer++) {

        vc_RemainingTotalRootEffectivity -= vc_RootEffectivity[i_Layer] * vc_RootDensity[i_Layer]; // [m m-3]

        if (vc_RemainingTotalRootEffectivity <= 0.0)
          vc_RemainingTotalRootEffectivity = 0.00001;
        if (((vc_Transpiration[i_Layer] / 1000.0) / vs_LayerThickness) > ((soilColumn[i_Layer].get_Vs_SoilMoisture_m3()
            - soilColumn[i_Layer].get_PermanentWiltingPoint()))) {
            vc_PotentialTranspirationDeficit = (((vc_Transpiration[i_Layer] / 1000.0) / vs_LayerThickness)
                - (soilColumn[i_Layer].get_Vs_SoilMoisture_m3() - soilColumn[i_Layer].get_PermanentWiltingPoint()))
                * vs_LayerThickness * 1000.0; // [mm]
            if (vc_PotentialTranspirationDeficit < 0.0) {
                vc_PotentialTranspirationDeficit = 0.0;
            }
            if (vc_PotentialTranspirationDeficit > vc_Transpiration[i_Layer]) {
                vc_PotentialTranspirationDeficit = vc_Transpiration[i_Layer]; //[mm]
            }
        } else {
            vc_PotentialTranspirationDeficit = 0.0;
        }

       vc_TranspirationReduced = vc_Transpiration[i_Layer] * (1.0 - vc_TranspirationRedux[i_Layer]);

        //! @todo Claas: How can we lower the groundwater table if crop water uptake is restricted in that layer?
        vc_ActualTranspirationDeficit = max(vc_TranspirationReduced, vc_PotentialTranspirationDeficit); //[mm]
        if (vc_ActualTranspirationDeficit > 0.0) {
          if (i_Layer < min(vc_RootingZone, vc_GroundwaterTable + 1)) {
            for (var i_Layer2 = i_Layer + 1; i_Layer2 < min(vc_RootingZone, vc_GroundwaterTable + 1); i_Layer2++) {
                vc_Transpiration[i_Layer2] += vc_ActualTranspirationDeficit * (vc_RootEffectivity[i_Layer2]
                   * vc_RootDensity[i_Layer2] / vc_RemainingTotalRootEffectivity);
            }
          }
        }

        vc_Transpiration[i_Layer] = vc_Transpiration[i_Layer] - vc_ActualTranspirationDeficit;
        
        if (vc_Transpiration[i_Layer] < 0.0)
          vc_Transpiration[i_Layer] = 0.0;
        
        vc_ActualTranspiration += vc_Transpiration[i_Layer];
        
        if (i_Layer == vc_GroundwaterTable) {
          vc_CropWaterUptakeFromGroundwater = (vc_Transpiration[i_Layer] / 1000.0) / vs_LayerThickness; //[m3 m-3]
        }

      }      

      if (vc_PotentialTranspiration > 0) {
        vc_TranspirationDeficit = vc_ActualTranspiration / vc_PotentialTranspiration;
      } else {
        vc_TranspirationDeficit = 1.0; //[]
      }

      var vm_GroundwaterDistance = int(vc_GroundwaterTable - vc_RootingDepth); // JS! just in case ... added int()
      if (vm_GroundwaterDistance <= 1) {
        vc_TranspirationDeficit = 1.0;
      }

      if (pc_WaterDeficitResponseOn == false){
        vc_TranspirationDeficit = 1.0;
      }

    } //if
  };

  var fc_CropNUptake = function (
    vs_NumberOfLayers,
    vs_LayerThickness,
    vc_RootingZone,
    vc_GroundwaterTable,
    vc_CurrentTotalTemperatureSum ,
    vc_TotalTemperatureSum
  ) {

    if (DEBUG) debug(arguments);

    // JS! make sure it is an "int"
    vc_RootingZone = int(vc_RootingZone);
    vc_GroundwaterTable = int(vc_GroundwaterTable);


    var vc_ConvectiveNUptake = 0.0; // old TRNSUM
    var vc_DiffusiveNUptake = 0.0; // old SUMDIFF
    var vc_ConvectiveNUptakeFromLayer = []; // old MASS
    var vc_DiffusionCoeff = []; // old D
    var vc_DiffusiveNUptakeFromLayer = []; // old DIFF

    for (var i = 0; i < vs_NumberOfLayers; i++) {
      vc_ConvectiveNUptakeFromLayer[i] = 0.0;
      vc_DiffusionCoeff[i] = 0.0;
      vc_DiffusiveNUptakeFromLayer[i] = 0.0;
    }

    var vc_ConvectiveNUptake_1 = 0.0; // old MASSUM
    var vc_DiffusiveNUptake_1 = 0.0; // old DIFFSUM
    var user_crops = centralParameterProvider.userCropParameters;
    var pc_MinimumAvailableN = user_crops.pc_MinimumAvailableN; // kg m-3
    var pc_MinimumNConcentrationRoot = user_crops.pc_MinimumNConcentrationRoot;  // kg kg-1
    var pc_MaxCropNDemand = user_crops.pc_MaxCropNDemand;

    vc_TotalNUptake = 0.0;
    for (var i_Layer = 0; i_Layer < vs_NumberOfLayers; i_Layer++){
      vc_NUptakeFromLayer[i_Layer] = 0.0;
    }

    // if the plant has matured, no N uptake occurs!
    if (vc_DevelopmentalStage < vc_FinalDevelopmentalStage){
    //if ((vc_CurrentTotalTemperatureSum / vc_TotalTemperatureSum) < 1.0){

      for (var i_Layer = 0; i_Layer < (min(vc_RootingZone, vc_GroundwaterTable)); i_Layer++) {

        vs_SoilMineralNContent[i_Layer] = soilColumn[i_Layer].vs_SoilNO3; // [kg m-3]

        // Convective N uptake per layer
        vc_ConvectiveNUptakeFromLayer[i_Layer] = (vc_Transpiration[i_Layer] / 1000.0) * //[mm --> m]
                 (vs_SoilMineralNContent[i_Layer] / // [kg m-3]
                  (soilColumn[i_Layer].get_Vs_SoilMoisture_m3())) * // old WG [m3 m-3]
                 vc_TimeStep; // -->[kg m-2]

        vc_ConvectiveNUptake += vc_ConvectiveNUptakeFromLayer[i_Layer]; // [kg m-2]

        /** @todo Claas: Woher kommt der Wert für vs_Tortuosity? */
        /** @todo Claas: Prüfen ob Umstellung auf [m] die folgenden Gleichungen beeinflusst */
        vc_DiffusionCoeff[i_Layer] = 0.000214 * (vs_Tortuosity * exp(soilColumn[i_Layer].get_Vs_SoilMoisture_m3() * 10))
             / soilColumn[i_Layer].get_Vs_SoilMoisture_m3(); //[m2 d-1]


        vc_DiffusiveNUptakeFromLayer[i_Layer] = (vc_DiffusionCoeff[i_Layer] * // [m2 d-1]
                 soilColumn[i_Layer].get_Vs_SoilMoisture_m3() * // [m3 m-3]
                 2.0 * PI * vc_RootDiameter[i_Layer] * // [m]
                 (vs_SoilMineralNContent[i_Layer] / 1000.0 / // [kg m-3]
                  soilColumn[i_Layer].get_Vs_SoilMoisture_m3() - 0.000014) * // [m3 m-3]
                 sqrt(PI * vc_RootDensity[i_Layer])) * // [m m-3]
                       vc_RootDensity[i_Layer] * 1000.0 * vc_TimeStep; // -->[kg m-2]
             
      if(vc_DiffusiveNUptakeFromLayer[i_Layer] < 0.0){
        vc_DiffusiveNUptakeFromLayer[i_Layer] = 0;
      }

        vc_DiffusiveNUptake += vc_DiffusiveNUptakeFromLayer[i_Layer]; // [kg m-2]

      }

      for (var i_Layer = 0; i_Layer < (min(vc_RootingZone, vc_GroundwaterTable)); i_Layer++) {

        if (vc_CropNDemand > 0.0) {

          if (vc_ConvectiveNUptake >= vc_CropNDemand) { // convective N uptake is sufficient
            vc_NUptakeFromLayer[i_Layer] = vc_CropNDemand * vc_ConvectiveNUptakeFromLayer[i_Layer] / vc_ConvectiveNUptake;
          
          } else { // N demand is not covered
            
            if ((vc_CropNDemand - vc_ConvectiveNUptake) < vc_DiffusiveNUptake) {
              vc_NUptakeFromLayer[i_Layer] = (
                vc_ConvectiveNUptakeFromLayer[i_Layer] + 
                (
                  (vc_CropNDemand - vc_ConvectiveNUptake) * 
                  vc_DiffusiveNUptakeFromLayer[i_Layer] / 
                  vc_DiffusiveNUptake
                )
              );
            } else {
              vc_NUptakeFromLayer[i_Layer] = vc_ConvectiveNUptakeFromLayer[i_Layer] + vc_DiffusiveNUptakeFromLayer[i_Layer];
            }

          }

          vc_ConvectiveNUptake_1 += vc_ConvectiveNUptakeFromLayer[i_Layer];
          vc_DiffusiveNUptake_1 += vc_DiffusiveNUptakeFromLayer[i_Layer];

          if (vc_NUptakeFromLayer[i_Layer] > ((vs_SoilMineralNContent[i_Layer] * vs_LayerThickness) - pc_MinimumAvailableN))
            vc_NUptakeFromLayer[i_Layer] = (vs_SoilMineralNContent[i_Layer] * vs_LayerThickness )- pc_MinimumAvailableN;

          if (vc_NUptakeFromLayer[i_Layer] > (pc_MaxCropNDemand / 10000.0 * 0.75))
            vc_NUptakeFromLayer[i_Layer] = (pc_MaxCropNDemand / 10000.0 * 0.75);

          if (vc_NUptakeFromLayer[i_Layer] < 0.0)
            vc_NUptakeFromLayer[i_Layer] = 0.0;

        } else {
          vc_NUptakeFromLayer[i_Layer] = 0.0;
        }

        vc_TotalNUptake += vc_NUptakeFromLayer[i_Layer] * 10000.0; //[kg m-2] --> [kg ha-1]

      } // for
    } // if

    vc_SumTotalNUptake += vc_TotalNUptake;

    if (vc_RootBiomass > vc_RootBiomassOld) {

      // wurzel ist gewachsen
      vc_NConcentrationRoot = ((vc_RootBiomassOld * vc_NConcentrationRoot)
          + ((vc_RootBiomass - vc_RootBiomassOld) / (vc_AbovegroundBiomass
          - vc_AbovegroundBiomassOld + vc_BelowgroundBiomass - vc_BelowgroundBiomassOld
          + vc_RootBiomass - vc_RootBiomassOld) * vc_TotalNUptake)) / vc_RootBiomass;

      vc_NConcentrationRoot = min(vc_NConcentrationRoot, pc_StageMaxRootNConcentration[vc_DevelopmentalStage]);


      if (vc_NConcentrationRoot < pc_MinimumNConcentrationRoot) {
        vc_NConcentrationRoot = pc_MinimumNConcentrationRoot;
      }
    }

    vc_NConcentrationAbovegroundBiomass = (vc_TotalBiomassNContent + vc_TotalNUptake
           - (vc_RootBiomass * vc_NConcentrationRoot))
           / (vc_AbovegroundBiomass + (vc_BelowgroundBiomass / pc_ResidueNRatio));

    if ((vc_NConcentrationAbovegroundBiomass * vc_AbovegroundBiomass) < (vc_AbovegroundBiomassOld
                 * vc_NConcentrationAbovegroundBiomassOld)) {

      vc_NConcentrationAbovegroundBiomass = vc_AbovegroundBiomassOld * vc_NConcentrationAbovegroundBiomassOld
            / vc_AbovegroundBiomass;

      vc_NConcentrationRoot = (vc_TotalBiomassNContent + vc_TotalNUptake
               - (vc_AbovegroundBiomass * vc_NConcentrationAbovegroundBiomass)
               - (vc_NConcentrationAbovegroundBiomass / pc_ResidueNRatio * vc_BelowgroundBiomass)) / vc_RootBiomass;
    }
  };

  var fc_GrossPrimaryProduction = function (vc_Assimilates) {

    var vc_GPP = 0.0;
    // Converting photosynthesis rate from [kg CH2O ha-1 d-1] back to
    // [kg C ha-1 d-1]
    vc_GPP = vc_Assimilates / 30.0 * 12.0;
    return vc_GPP;
    };

    var fc_NetPrimaryProduction = function (vc_GrossPrimaryProduction, vc_TotalRespired) {
    var vc_NPP = 0.0;
    // Convert [kg CH2O ha-1 d-1] to [kg C ha-1 d-1]
    vc_Respiration = vc_TotalRespired / 30.0 * 12.0;

    vc_NPP = vc_GrossPrimaryProduction - vc_Respiration;
    return vc_NPP;
    };

    var pc_NumberOfAbovegroundOrgans = function () {
    var count = 0;
    for (var i = 0, size = pc_AbovegroundOrgan.length; i < size; i++) {
      if (pc_AbovegroundOrgan[i]) {
        count++;
      }
    }
    return count;

  };

  var get_OrganGrowthIncrement = function (i_Organ) {
    return vc_OrganGrowthIncrement[i_Organ];
  };

  var get_Transpiration = function (i_Layer) {
    return vc_Transpiration[i_Layer];
  };

  var get_OrganBiomass = function (i_Organ) {
    return vc_OrganBiomass[i_Organ];
  };

  var get_NUptakeFromLayer = function (i_Layer) {
    return vc_NUptakeFromLayer[i_Layer];
  };

  var get_AbovegroundBiomassNContent = function () {
    return vc_AbovegroundBiomass * vc_NConcentrationAbovegroundBiomass;
  };

  var pc_NumberOfAbovegroundOrgans = function () {
    var count = 0;
    for (var i = 0, size = pc_AbovegroundOrgan.length; i < size; i++) {
      if (pc_AbovegroundOrgan[i]) {
        count++;
      }
    }
    return count;
  };

  var _cropYield = function (v, bmv) {

    if (DEBUG && v.length === 0)
      debug('organIdsForPrimaryYield', v);

    var yield = 0;
    for (var i = 0, is = v.length; i < is; i++)
      yield += bmv[v[i].organId - 1] * (v[i].yieldPercentage);
    return yield;
  };

  var _cropFreshMatterYield = function (v, bmv) {
    
    if (DEBUG && v.length === 0)
      debug('organIdsForPrimaryYield', v);

    var freshMatterYield = 0;
    for (var i = 0, is = v.length; i < is; i++)
      freshMatterYield += bmv[v[i].organId - 1] * (v[i].yieldPercentage) / (v[i].yieldDryMatter);
    return freshMatterYield;
  };

  var get_PrimaryCropYield = function () {
    // JS: yield auch nach cutting
    if (cropParams.organIdsForPrimaryYield.length === 0)
      return _cropYield(cropParams.organIdsForCutting, vc_OrganBiomass);

    return _cropYield(cropParams.organIdsForPrimaryYield, vc_OrganBiomass);
  };

  var get_SecondaryCropYield = function () {
    return _cropYield(cropParams.organIdsForSecondaryYield, vc_OrganBiomass);
  };

  var get_FreshPrimaryCropYield = function () {
    // JS: yield auch nach cutting
    if (cropParams.organIdsForPrimaryYield.length === 0)
      return _cropFreshMatterYield(cropParams.organIdsForCutting, vc_OrganBiomass);

    return _cropFreshMatterYield(cropParams.organIdsForPrimaryYield, vc_OrganBiomass);
  };

  var get_FreshSecondaryCropYield = function () {
    return _cropFreshMatterYield(cropParams.organIdsForSecondaryYield, vc_OrganBiomass);
  };

  var get_ResidueBiomass = function (useSecondaryCropYields) {
    return vc_TotalBiomass - get_OrganBiomass(0) - get_PrimaryCropYield()
      - (useSecondaryCropYields ? get_SecondaryCropYield() : 0);
  };

  var get_ResiduesNConcentration = function () {
    return (vc_TotalBiomassNContent -
         (get_OrganBiomass(0) * get_RootNConcentration())) /
         ((get_PrimaryCropYield() / pc_ResidueNRatio) +
         (vc_TotalBiomass - get_OrganBiomass(0) - get_PrimaryCropYield()));
  }

  var get_PrimaryYieldNConcentration = function () {
    return (vc_TotalBiomassNContent -
         (get_OrganBiomass(0) * get_RootNConcentration())) /
         (get_PrimaryCropYield() + (pc_ResidueNRatio *
         (vc_TotalBiomass - get_OrganBiomass(0) - get_PrimaryCropYield())));
  }

  var get_ResiduesNContent = function (useSecondaryCropYields)  {
    return (get_ResidueBiomass(useSecondaryCropYields) * get_ResiduesNConcentration());
  };

  var get_PrimaryYieldNContent = function () {
    return (get_PrimaryCropYield() * get_PrimaryYieldNConcentration());
  };

  var get_RawProteinConcentration = function () {
    // Assuming an average N concentration of raw protein of 16%
    return (get_PrimaryYieldNConcentration() * 6.25);
  };

  var get_SecondaryYieldNContent = function () {
    return (get_SecondaryCropYield() * get_ResiduesNConcentration());
  };

  var get_PotNUptake = function () {
    return vc_CropNDemand * 10000.0;
  };

  var get_AutotrophicRespiration = function () {
    return vc_TotalRespired / 30.0 * 12.0;;  // Convert [kg CH2O ha-1 d-1] to [kg C ha-1 d-1]
  };

  var get_OrganSpecificTotalRespired = function (organ) {
    // get total amount of actual biomass
    var total_biomass = totalBiomass();

    // get biomass of specific organ and calculates ratio
    var organ_percentage = get_OrganBiomass(organ) / total_biomass;
    return (get_AutotrophicRespiration() * organ_percentage);
  };

  var get_OrganSpecificNPP = function (organ) {
    // get total amount of actual biomass
    var total_biomass = totalBiomass();

    // get biomass of specific organ and calculates ratio
    var organ_percentage = get_OrganBiomass(organ) / total_biomass;

    return (get_NetPrimaryProduction() * organ_percentage);
  };

  var applyCutting = function () {

    var old_above_biomass = vc_AbovegroundBiomass;
    var removing_biomass = 0.0;

    console.log("CropGrowth::applyCutting()");;
    var new_OrganBiomass = [];      //! old WORG
    for (var organ=1; organ<pc_NumberOfOrgans+1; organ++) {

        var cut_organ_count = cropParams.organIdsForCutting.length;
        var biomasse = vc_OrganBiomass[organ - 1];
        console.log("Alte Biomasse: " + biomasse  + "\tOrgan: " + organ);
        for (var cut_organ=0; cut_organ<cut_organ_count; cut_organ++) {

            var yc = new YieldComponent(cropParams.organIdsForCutting[cut_organ]);

            if (organ == yc.organId) {
                console.log("YC yc.yieldPercentage: " + yc.yieldPercentage);
                biomasse = vc_OrganBiomass[organ - 1] * ((1-yc.yieldPercentage));
                vc_AbovegroundBiomass -= biomasse;

                removing_biomass +=biomasse;
            }
        }
        new_OrganBiomass.push(biomasse);
        console.log("Neue Biomasse: " + biomasse);
    }

    vc_TotalBiomassNContent = (removing_biomass / old_above_biomass) * vc_TotalBiomassNContent;


    vc_OrganBiomass = new Float64Array(new_OrganBiomass);

    // reset stage and temperature some after cutting
    var stage_after_cutting = cropParams.pc_StageAfterCut-1;
    for (var stage=stage_after_cutting; stage<pc_NumberOfDevelopmentalStages; stage++) {
      vc_CurrentTemperatureSum[stage] = 0.0;
    }
    vc_CurrentTotalTemperatureSum = 0.0;
    vc_DevelopmentalStage = stage_after_cutting;
    cutting_delay_days = cropParams.pc_CuttingDelayDays;
    pc_MaxAssimilationRate  = pc_MaxAssimilationRate * 0.9;

    // JS: Fehler in MONICA C++? LAI bleibt nach Schnitt unverändert
    // Reset leaf area index
    vc_LeafAreaIndex = vc_OrganBiomass[1] * pc_SpecificLeafArea[vc_DevelopmentalStage]; // [ha ha-1]  

  };

  var accumulateEvapotranspiration = function (ETa) { 
    vc_accumulatedETa += ETa;
  };

  var get_RootNConcentration = function () {
    return vc_NConcentrationRoot;
  };

  /**
  * Returns the depth of the maximum active and effective root.
  * [m]
  */
  var getEffectiveRootingDepth = function () {
    for (var i_Layer = 0; i_Layer < vs_NumberOfLayers; i_Layer++) {
      if (vc_RootEffectivity[i_Layer] == 0.0) {
          return (i_Layer+1) / 10.0;
      } // if
    } // for
    return (vs_NumberOfLayers + 1) / 10.0;
  };

  var get_CropName = function () {
    return pc_CropName;
  };

  var get_GrossPhotosynthesisRate = function () {
    return vc_GrossPhotosynthesis_mol;
  };

  var get_GrossPhotosynthesisHaRate = function () {
    return vc_GrossPhotosynthesis;
  };

  var get_AssimilationRate = function () {
    return vc_AssimilationRate;
  };

  var get_Assimilates = function () {
    return vc_Assimilates;
  };

  var get_NetMaintenanceRespiration = function () {
    return vc_NetMaintenanceRespiration;
  };

  var get_MaintenanceRespirationAS = function () {
    return vc_MaintenanceRespirationAS;
  };

  var get_GrowthRespirationAS = function () {
    return vc_GrowthRespirationAS;
  };

  var get_VernalisationFactor = function () {
    return vc_VernalisationFactor;
  };

  var get_DaylengthFactor = function () {
    return vc_DaylengthFactor;
  };

  var get_NetPhotosynthesis = function () {
    return vc_NetPhotosynthesis;
  };

  var get_ReferenceEvapotranspiration = function () {
    return vc_ReferenceEvapotranspiration;
  };

  var get_RemainingEvapotranspiration = function () {
    return vc_RemainingEvapotranspiration;
  };

  var get_EvaporatedFromIntercept = function () {
    return vc_EvaporatedFromIntercept;
  };

  var get_NetPrecipitation = function () {
    return vc_NetPrecipitation;
  };

  var get_LeafAreaIndex = function () {
    return vc_LeafAreaIndex;
  };

  var get_CropHeight = function () {
    return vc_CropHeight;
  };

  var get_RootingDepth = function () {
    return vc_RootingDepth;
  };

  var get_SoilCoverage = function () {
    return vc_SoilCoverage;
  };

  var get_KcFactor = function () {
    return vc_KcFactor;
  };

  var get_StomataResistance = function () {
    return vc_StomataResistance;
  };

  var get_PotentialTranspiration = function () {
    return vc_PotentialTranspiration;
  };

  var get_ActualTranspiration = function () {
    return vc_ActualTranspiration;
  };

  var get_TranspirationDeficit = function () {
    return vc_TranspirationDeficit;
  };

  var get_OxygenDeficit = function () {
    return vc_OxygenDeficit;
  };

  var get_CropNRedux = function () {
    return vc_CropNRedux;
  };

  var get_HeatStressRedux = function () {
    return vc_CropHeatRedux;
  };

  var get_CurrentTemperatureSum = function () {
    return vc_CurrentTotalTemperatureSum;
  };

  var get_DevelopmentalStage = function () {
    return vc_DevelopmentalStage;
  };

  var get_RelativeTotalDevelopment = function () {
    return vc_RelativeTotalDevelopment;
  };

  var get_AbovegroundBiomass = function () {
    return vc_AbovegroundBiomass;
  };

  var get_TotalBiomassNContent = function () {
    return vc_TotalBiomassNContent;
  };

  var get_TargetNConcentration = function () {
    return vc_TargetNConcentration;
  };

  var get_CriticalNConcentration = function () {
    return vc_CriticalNConcentration;
  };

  var get_AbovegroundBiomassNConcentration = function () {
    return vc_NConcentrationAbovegroundBiomass;
  };

  var get_HeatSumIrrigationStart = function () {
    return cropParams.pc_HeatSumIrrigationStart;
  };

  var get_HeatSumIrrigationEnd = function () {
    return cropParams.pc_HeatSumIrrigationEnd
  };

  var get_SumTotalNUptake = function () {
    return vc_SumTotalNUptake;
  };

  var get_ActNUptake = function () {
    return vc_TotalNUptake;
  };

  var get_GrossPrimaryProduction = function () {
    return vc_GrossPrimaryProduction;
  };

  var get_NetPrimaryProduction = function () {
    return vc_NetPrimaryProduction;
  };

  var get_AccumulatedETa = function () {
    return vc_accumulatedETa;
  };

  var isDying = function () {
    return dyingOut;
  };

  var get_NumberOfOrgans = function () { 
    return pc_NumberOfOrgans; 
  };

  var totalBiomass = function () { 
    return vc_TotalBiomass; 
  };

  return {
      accumulateEvapotranspiration: accumulateEvapotranspiration
    , applyCutting: applyCutting
    , fc_CropDevelopmentalStage: fc_CropDevelopmentalStage
    , fc_CropDryMatter: fc_CropDryMatter
    , fc_CropGreenArea: fc_CropGreenArea
    , fc_CropNUptake: fc_CropNUptake
    , fc_CropNitrogen: fc_CropNitrogen
    , fc_CropPhotosynthesis: fc_CropPhotosynthesis
    , fc_CropSize: fc_CropSize
    , fc_CropWaterUptake: fc_CropWaterUptake
    , fc_DaylengthFactor: fc_DaylengthFactor
    , fc_DroughtImpactOnFertility: fc_DroughtImpactOnFertility
    , fc_GrossPrimaryProduction: fc_GrossPrimaryProduction
    , fc_HeatStressImpact: fc_HeatStressImpact
    , fc_KcFactor: fc_KcFactor
    , fc_NetPrimaryProduction: fc_NetPrimaryProduction
    , fc_OxygenDeficiency: fc_OxygenDeficiency
    , fc_Radiation: fc_Radiation
    , fc_ReferenceEvapotranspiration: fc_ReferenceEvapotranspiration
    , fc_SoilCoverage: fc_SoilCoverage
    , fc_VernalisationFactor: fc_VernalisationFactor
    , getEffectiveRootingDepth: getEffectiveRootingDepth
    , get_AbovegroundBiomass: get_AbovegroundBiomass
    , get_AbovegroundBiomassNConcentration: get_AbovegroundBiomassNConcentration
    , get_AbovegroundBiomassNContent: get_AbovegroundBiomassNContent
    , get_AbovegroundBiomassNContent: get_AbovegroundBiomassNContent
    , get_AccumulatedETa: get_AccumulatedETa
    , get_ActNUptake: get_ActNUptake
    , get_ActualTranspiration: get_ActualTranspiration
    , get_Assimilates: get_Assimilates
    , get_AssimilationRate: get_AssimilationRate
    , get_AutotrophicRespiration: get_AutotrophicRespiration
    , get_CriticalNConcentration: get_CriticalNConcentration
    , get_CropHeight: get_CropHeight
    , get_CropNRedux: get_CropNRedux
    , get_CropName: get_CropName
    , get_CurrentTemperatureSum: get_CurrentTemperatureSum
    , get_DaylengthFactor: get_DaylengthFactor
    , get_DevelopmentalStage: get_DevelopmentalStage
    , get_EvaporatedFromIntercept: get_EvaporatedFromIntercept
    , get_FreshPrimaryCropYield: get_FreshPrimaryCropYield
    , get_FreshSecondaryCropYield: get_FreshSecondaryCropYield
    , get_GrossPhotosynthesisHaRate: get_GrossPhotosynthesisHaRate
    , get_GrossPhotosynthesisRate: get_GrossPhotosynthesisRate
    , get_GrossPrimaryProduction: get_GrossPrimaryProduction
    , get_GrowthRespirationAS: get_GrowthRespirationAS
    , get_HeatStressRedux: get_HeatStressRedux
    , get_HeatSumIrrigationEnd: get_HeatSumIrrigationEnd
    , get_HeatSumIrrigationStart: get_HeatSumIrrigationStart
    , get_KcFactor: get_KcFactor
    , get_LeafAreaIndex: get_LeafAreaIndex
    , get_MaintenanceRespirationAS: get_MaintenanceRespirationAS
    , get_NUptakeFromLayer: get_NUptakeFromLayer
    , get_NUptakeFromLayer: get_NUptakeFromLayer
    , get_NetMaintenanceRespiration: get_NetMaintenanceRespiration
    , get_NetPhotosynthesis: get_NetPhotosynthesis
    , get_NetPrecipitation: get_NetPrecipitation
    , get_NetPrimaryProduction: get_NetPrimaryProduction
    , get_NumberOfOrgans: get_NumberOfOrgans
    , get_OrganBiomass: get_OrganBiomass
    , get_OrganBiomass: get_OrganBiomass
    , get_OrganGrowthIncrement: get_OrganGrowthIncrement
    , get_OrganGrowthIncrement: get_OrganGrowthIncrement
    , get_OrganSpecificNPP: get_OrganSpecificNPP
    , get_OrganSpecificTotalRespired: get_OrganSpecificTotalRespired
    , get_OxygenDeficit: get_OxygenDeficit
    , get_PotNUptake: get_PotNUptake
    , get_PotentialTranspiration: get_PotentialTranspiration
    , get_PrimaryCropYield: get_PrimaryCropYield
    , get_PrimaryYieldNConcentration: get_PrimaryYieldNConcentration
    , get_PrimaryYieldNContent: get_PrimaryYieldNContent
    , get_RawProteinConcentration: get_RawProteinConcentration
    , get_ReferenceEvapotranspiration: get_ReferenceEvapotranspiration
    , get_RelativeTotalDevelopment: get_RelativeTotalDevelopment
    , get_RemainingEvapotranspiration: get_RemainingEvapotranspiration
    , get_ResidueBiomass: get_ResidueBiomass
    , get_ResiduesNConcentration: get_ResiduesNConcentration
    , get_ResiduesNContent: get_ResiduesNContent
    , get_RootNConcentration: get_RootNConcentration
    , get_RootNConcentration: get_RootNConcentration
    , get_RootingDepth: get_RootingDepth
    , get_SecondaryCropYield: get_SecondaryCropYield
    , get_SecondaryYieldNContent: get_SecondaryYieldNContent
    , get_SoilCoverage: get_SoilCoverage
    , get_StomataResistance: get_StomataResistance
    , get_SumTotalNUptake: get_SumTotalNUptake
    , get_TargetNConcentration: get_TargetNConcentration
    , get_TotalBiomassNContent: get_TotalBiomassNContent
    , get_Transpiration: get_Transpiration
    , get_Transpiration: get_Transpiration
    , get_TranspirationDeficit: get_TranspirationDeficit
    , get_VernalisationFactor: get_VernalisationFactor
    , isDying: isDying
    , pc_NumberOfAbovegroundOrgans: pc_NumberOfAbovegroundOrgans
    , step: calculateCropGrowthStep
    , totalBiomass: totalBiomass
  }

};



var Environment = function (sps, cpp) {

  this.mode = "MyMode"; // JS! mode not implemented

  // copy constructor
  if (arguments[0] instanceof Environment) {
    console.log("Copy constructor: Env" + "\tsoil param size: " + env.soilParams.length);;
    this.env = arguments[0];
    this.customId = env.customId;
    this.soilParams = env.soilParams;
    this.noOfLayers = env.noOfLayers;
    this.layerThickness = env.layerThickness;
    this.useNMinMineralFertilisingMethod = env.useNMinMineralFertilisingMethod;
    this.useAutomaticIrrigation = env.useAutomaticIrrigation;
    this.useSecondaryYields = env.useSecondaryYields;

    this.windSpeedHeight = env.windSpeedHeight;
    this.atmosphericCO2 = env.atmosphericCO2;
    this.albedo = env.albedo;

    this.da = env.da;
    this.cropRotation = env.cropRotation;

    // gridPoint = env.gridPoint;

    this.site = env.site;
    this.general = env.general;
    this.organic = env.organic;

    this.nMinFertiliserPartition = env.nMinFertiliserPartition;
    this.nMinUserParams = env.nMinUserParams;
    this.autoIrrigationParams = env.autoIrrigationParams;
    this.centralParameterProvider = env.centralParameterProvider;

    this.pathToOutputDir = env.pathToOutputDir;
    this.mode = env.mode;
  } else {
    this.soilParams = sps;
    this.customId = -1;
    this.centralParameterProvider = cpp;
    this.pathToOutputDir = null;

    this.user_env = this.centralParameterProvider.userEnvironmentParameters;
    this.windSpeedHeight = this.user_env.p_WindSpeedHeight;
    this.atmosphericCO2 = this.user_env.p_AthmosphericCO2;
    this.albedo = this.user_env.p_Albedo;

    this.noOfLayers = this.user_env.p_NumberOfLayers;
    this.layerThickness = this.user_env.p_LayerThickness;
    this.useNMinMineralFertilisingMethod = this.user_env.p_UseNMinMineralFertilisingMethod;
    this.useAutomaticIrrigation = this.user_env.p_UseAutomaticIrrigation;
    this.useSecondaryYields = this.user_env.p_UseSecondaryYields;

    this.cropRotation = null; 
  }

  /**
   * Set execution mode of Monica.
   * Disables debug outputs for some modes.
   *
   * @param mode
   */
  var setMode = function (_mode) {
    mode = _mode;
  };

  /**
   * Interface method for python wrapping. Simply returns number
   * of possible simulation steps according to avaible climate data.
   *
   * @return Number of steps
   */

  var numberOfPossibleSteps = function () {
    return da.noOfStepsPossible();
  };

  this.getMode =  function () { 
    return mode; 
  };

  this.setCropRotation = function (ff) {
    this.cropRotation = ff;
  };

};

var Model = function (env, da) {

  var that = this;

  /**
   * @brief returns value for current crop.
   * @return crop growth
   */
  // this.cropGrowth statt var, um this an SoilX. zu übergeben
  this._currentCropGrowth = null;
  this.cropGrowth = function () { return that._currentCropGrowth; };

  var _env = env
    , _soilColumn = new SoilColumn(_env.general, _env.soilParams, _env.centralParameterProvider)
    , _soilTemperature = new SoilTemperature(_soilColumn, this, _env.centralParameterProvider)
    , _soilMoisture = new SoilMoisture(_soilColumn, _env.site, this, _env.centralParameterProvider)
    , _soilOrganic = new SoilOrganic(_soilColumn, _env.general, _env.site,_env.centralParameterProvider)
    , _soilTransport = new SoilTransport(_soilColumn, _env.site, _env.centralParameterProvider)
    , _sumFertiliser = 0
    , _dailySumFertiliser = 0
    , _dailySumIrrigationWater = 0
    , _dataAccessor = da
    , centralParameterProvider = _env.centralParameterProvider
    , p_daysWithCrop = 0
    , p_accuNStress = 0.0
    , p_accuWaterStress = 0.0
    , p_accuHeatStress = 0.0
    , p_accuOxygenStress = 0.0
    ;

  this.vw_AtmosphericCO2Concentration;
  this.vs_GroundwaterDepth;

  var _currentCrop = null;


  /**
   * @brief Simulation of crop seed.
   * @param crop to be planted
   */
  var seedCrop = function (crop) {

    console.log("seedCrop");
    that._currentCropGrowth = null;
    p_daysWithCrop = 0;
    p_accuNStress = 0.0;
    p_accuWaterStress = 0.0;
    p_accuHeatStress = 0.0;
    p_accuOxygenStress = 0.0;

    _currentCrop = crop;
    if(_currentCrop.isValid()) {
      cps = _currentCrop.cropParameters();
      that._currentCropGrowth = new CropGrowth(_soilColumn, _env.general, cps, _env.site, _env.centralParameterProvider/*, crop.getEva2TypeUsage()*/);
      _soilTransport.put_Crop(that._currentCropGrowth);
      _soilColumn.put_Crop(that._currentCropGrowth);
      _soilMoisture.put_Crop(that._currentCropGrowth);
      _soilOrganic.put_Crop(that._currentCropGrowth);

      console.log("seedDate: " + _currentCrop.seedDate().toString()
          + " harvestDate: " + _currentCrop.harvestDate().toString());

      if(_env.useNMinMineralFertilisingMethod && _currentCrop.seedDate().dayOfYear() <=
         _currentCrop.harvestDate().dayOfYear())
      {
        console.log("nMin fertilising summer crop");
        var fert_amount = applyMineralFertiliserViaNMinMethod
            (_env.nMinFertiliserPartition,
             NMinCropParameters(cps.pc_SamplingDepth,
                                cps.pc_TargetNSamplingDepth,
                                cps.pc_TargetN30));
        addDailySumFertiliser(fert_amount);
      }

      // if (that.writeOutputFiles()) {
          _currentCrop.writeCropParameters(_env.pathToOutputDir);
      // }
    }
  };

  /**
   * @brief Simulating harvest of crop.
   *
   * Deletes the current crop.
   */
  var harvestCurrentCrop = function () {

    //could be just a fallow, so there might be no CropGrowth object
    if(_currentCrop && _currentCrop.isValid())
    {
      //prepare to add root and crop residues to soilorganic (AOMs)
      var rootBiomass = that._currentCropGrowth.get_OrganBiomass(0);
      var rootNConcentration = that._currentCropGrowth.get_RootNConcentration();
      console.log("adding organic matter from root to soilOrganic");
      console.log("root biomass: " + rootBiomass
          + " Root N concentration: " + rootNConcentration);

      _soilOrganic.addOrganicMatter(_currentCrop.residueParameters(),
                                    rootBiomass, rootNConcentration);

      var residueBiomass =
          that._currentCropGrowth.get_ResidueBiomass(_env.useSecondaryYields);
      //!@todo Claas: das hier noch berechnen
      var residueNConcentration = that._currentCropGrowth.get_ResiduesNConcentration();
      console.log("adding organic matter from residues to soilOrganic");
      console.log("residue biomass: " + residueBiomass
          + " Residue N concentration: " + residueNConcentration);
      console.log("primary yield biomass: " + that._currentCropGrowth.get_PrimaryCropYield()
          + " Primary yield N concentration: " + that._currentCropGrowth.get_PrimaryYieldNConcentration());
      console.log("secondary yield biomass: " + that._currentCropGrowth.get_SecondaryCropYield()
          + " Secondary yield N concentration: " + that._currentCropGrowth.get_PrimaryYieldNConcentration());
      console.log("Residues N content: " + that._currentCropGrowth.get_ResiduesNContent()
          + " Primary yield N content: " + that._currentCropGrowth.get_PrimaryYieldNContent()
          + " Secondary yield N content: " + that._currentCropGrowth.get_SecondaryYieldNContent());

      _soilOrganic.addOrganicMatter(_currentCrop.residueParameters(),
                                    residueBiomass, residueNConcentration);
    }

    that._currentCropGrowth = null;
    _currentCrop = null;
    _soilTransport.remove_Crop();
    _soilColumn.remove_Crop();
    _soilMoisture.remove_Crop();
  };


  /**
   * @brief Simulating plowing or incorporating of total crop.
   *
   * Deletes the current crop.
   */
  var incorporateCurrentCrop = function () {
    //could be just a fallow, so there might be no CropGrowth object
    if(_currentCrop && _currentCrop.isValid())
    {
      //prepare to add root and crop residues to soilorganic (AOMs)
      var total_biomass = that._currentCropGrowth.totalBiomass();
      var totalNConcentration = that._currentCropGrowth.get_AbovegroundBiomassNConcentration() + that._currentCropGrowth.get_RootNConcentration();

      console.log("Adding organic matter from total biomass of crop to soilOrganic");
      console.log("Total biomass: " + total_biomass
          + " Total N concentration: " + totalNConcentration);

      _soilOrganic.addOrganicMatter(_currentCrop.residueParameters(),
                                    total_biomass, totalNConcentration);
    }

    that._currentCropGrowth = null;
    _currentCrop = null;
    _soilTransport.remove_Crop();
    _soilColumn.remove_Crop();
    _soilMoisture.remove_Crop();
  };


  /**
   * @brief Applying of fertilizer.
   *
   * @todo Nothing implemented yet.
   */
  var applyMineralFertiliser = function (partition, amount) {
    if(!_env.useNMinMineralFertilisingMethod) {
      _soilColumn.applyMineralFertiliser(partition, amount);
      addDailySumFertiliser(amount);
    }
  };

  var applyOrganicFertiliser = function (params, amount, incorporation) {
    console.log("MONICA model: applyOrganicFertiliser:\t" + amount + "\t" + params.vo_NConcentration);
    _soilOrganic.setIncorporation(incorporation);
    _soilOrganic.addOrganicMatter(params, amount, params.vo_NConcentration);
    addDailySumFertiliser(amount * params.vo_NConcentration);
  };

  var applyMineralFertiliserViaNMinMethod = function (partition, cps) {
    // TODO: implement
    //AddFertiliserAmountsCallback x(_sumFertiliser, _dailySumFertiliser);

    var ups = _env.nMinUserParams;

    var fert_amount = _soilColumn.applyMineralFertiliserViaNMinMethod(partition, cps.samplingDepth, cps.nTarget, cps.nTarget30,
         ups.min, ups.max, ups.delayInDays);
    return fert_amount;

    //ref(_sumFertiliser) += _1);
  };

  var applyIrrigation = function (amount, nitrateConcentration /*, sulfateConcentration*/) {
    //if the production process has still some defined manual irrigation dates
    if(!_env.useAutomaticIrrigation)
    {
      _soilOrganic.addIrrigationWater(amount);
      _soilColumn.applyIrrigation(amount, nitrateConcentration);
      if(_currentCrop)
      {
        _currentCrop.addAppliedIrrigationWater(amount);
        this.addDailySumIrrigationWater(amount);
      }
    }
  };

  /**
   * Applies tillage for a given soil depth. Tillage means in MONICA,
   * that for all effected soil layer the parameters are averaged.
   * @param depth Depth in meters
   */
  var applyTillage = function (depth) {
    _soilColumn.applyTillage(depth);
  };

  /**
   * @brief Simulating the soil processes for one time step.
   * @param stepNo Number of current processed step
   */
  var generalStep = function (stepNo) {

    var startDate = _dataAccessor.startDate();
    var currentDate = new Date(startDate.getFullYear(), startDate.getMonth(), startDate.getDate() + stepNo);
    var julday = _dataAccessor.julianDayForStep(stepNo);
    var year = currentDate.getFullYear();
    var leapYear = currentDate.isLeapYear();
    var tmin = _dataAccessor.dataForTimestep(Climate.tmin, stepNo);
    var tavg = _dataAccessor.dataForTimestep(Climate.tavg, stepNo);
    var tmax = _dataAccessor.dataForTimestep(Climate.tmax, stepNo);
    var precip = _dataAccessor.dataForTimestep(Climate.precip, stepNo);
    var wind = _dataAccessor.dataForTimestep(Climate.wind, stepNo);
    var globrad = _dataAccessor.dataForTimestep(Climate.globrad, stepNo);

    debug("-------- generalStep " + stepNo + " ---------");
    debug(currentDate.toLocaleDateString());

    // test if data for relhumid are available; if not, value is set to -1.0
    var relhumid = _dataAccessor.hasAvailableClimateData(Climate.relhumid) ?
         _dataAccessor.dataForTimestep(Climate.relhumid, stepNo) : -1.0;

    var user_env = centralParameterProvider.userEnvironmentParameters;
    that.vw_AtmosphericCO2Concentration = _env.atmosphericCO2 == -1 ? user_env.p_AthmosphericCO2 : _env.atmosphericCO2;

  //  cout << "that.vs_GroundwaterDepth:\t" << user_env.p_MinGroundwaterDepth << "\t" << user_env.p_MaxGroundwaterDepth << endl;
    that.vs_GroundwaterDepth = GroundwaterDepthForDate(user_env.p_MaxGroundwaterDepth,
                  user_env.p_MinGroundwaterDepth,
                  user_env.p_MinGroundwaterDepthMonth,
                  julday,
                  leapYear);

    if (stepNo<=1) {
      //    : << "Monica: tmin: " << tmin << endl;
      //    cout << "Monica: tmax: " << tmax << endl;
      //    cout << "Monica: globrad: " << globrad << endl;
      //    cout << "Monica: precip: " << precip << endl;
    }


    if (int(that.vw_AtmosphericCO2Concentration) == 0)
      that.vw_AtmosphericCO2Concentration = CO2ForDate(year, julday, leapYear);

    //  debug << "step: " << stepNo << " p: " << precip << " gr: " << globrad << endl;

    //31 + 28 + 15
    var pc_JulianDayAutomaticFertilising = user_env.p_JulianDayAutomaticFertilising;

    _soilColumn.deleteAOMPool();

    _soilColumn.applyPossibleDelayedFerilizer();
    var delayed_fert_amount = _soilColumn.applyPossibleTopDressing();
    addDailySumFertiliser(delayed_fert_amount);

    if(_currentCrop && _currentCrop.isValid() &&
       _env.useNMinMineralFertilisingMethod
       && _currentCrop.seedDate().dayOfYear() > _currentCrop.harvestDate().dayOfYear()
      && _dataAccessor.julianDayForStep(stepNo) == pc_JulianDayAutomaticFertilising)
      {
      console.log("nMin fertilising winter crop");
      var cps = _currentCrop.cropParameters();
      var fert_amount = applyMineralFertiliserViaNMinMethod
          (_env.nMinFertiliserPartition,
           NMinCropParameters(cps.pc_SamplingDepth,
                              cps.pc_TargetNSamplingDepth,
                              cps.pc_TargetN30));
      addDailySumFertiliser(fert_amount);

    }

    _soilTemperature.step(tmin, tmax, globrad);
    _soilMoisture.step(that.vs_GroundwaterDepth,
                       precip, tmax, tmin,
                       (relhumid / 100.0), tavg, wind,
                       _env.windSpeedHeight,
       globrad, julday);

    _soilOrganic.step(tavg, precip, wind);
    _soilTransport.step();
  };

  /**
   * @brief Simulating crop growth for one time step.
   */
  var cropStep = function (stepNo) {
    // do nothing if there is no crop
    if(!that._currentCropGrowth)
      return;

    p_daysWithCrop++;

    var julday = _dataAccessor.julianDayForStep(stepNo);

    var tavg = _dataAccessor.dataForTimestep(Climate.tavg, stepNo);
    var tmax = _dataAccessor.dataForTimestep(Climate.tmax, stepNo);
    var tmin = _dataAccessor.dataForTimestep(Climate.tmin, stepNo);
    var globrad = _dataAccessor.dataForTimestep(Climate.globrad, stepNo);

    // test if data for sunhours are available; if not, value is set to -1.0
    var sunhours = _dataAccessor.hasAvailableClimateData(Climate.sunhours) ?
      _dataAccessor.dataForTimestep(Climate.sunhours, stepNo) : -1.0;    

    // test if data for relhumid are available; if not, value is set to -1.0
    var relhumid = _dataAccessor.hasAvailableClimateData(Climate.relhumid) ?
        _dataAccessor.dataForTimestep(Climate.relhumid, stepNo) : -1.0;

    var wind =  _dataAccessor.dataForTimestep(Climate.wind, stepNo);
    var precip =  _dataAccessor.dataForTimestep(Climate.precip, stepNo);

    var vw_WindSpeedHeight =
        centralParameterProvider.userEnvironmentParameters.p_WindSpeedHeight;

    that._currentCropGrowth.step(tavg, tmax, tmin, globrad, sunhours, julday,
                             (relhumid / 100.0), wind, vw_WindSpeedHeight,
                             that.vw_AtmosphericCO2Concentration, precip);
    if(_env.useAutomaticIrrigation)
    {
      var aips = _env.autoIrrigationParams;
      if(_soilColumn.applyIrrigationViaTrigger(aips.treshold, aips.amount,
                                               aips.nitrateConcentration))
      {
        _soilOrganic.addIrrigationWater(aips.amount);
        _currentCrop.addAppliedIrrigationWater(aips.amount);
        _dailySumIrrigationWater += aips.amount;
      }
    }

    p_accuNStress += that._currentCropGrowth.get_CropNRedux();
    p_accuWaterStress += that._currentCropGrowth.get_TranspirationDeficit();
    p_accuHeatStress += that._currentCropGrowth.get_HeatStressRedux();
    p_accuOxygenStress += that._currentCropGrowth.get_OxygenDeficit();

  };

  /**
  * @brief Returns atmospheric CO2 concentration for date [ppm]
  *
  * @param co2
  *
  * @return
  */
  var CO2ForDate = function (year, julianday, leapYear) {
    var co2;
    var decimalDate;

    if (leapYear)
      decimalDate = year + (julianday/366.0);
    else
      decimalDate = year + (julianday/365.0);

    co2 = 222.0 + exp(0.0119 * (decimalDate - 1580.0)) + 2.5 * sin((decimalDate - 0.5) / 0.1592);
    return co2;
  };

  /**
  * @brief Returns groundwater table for date [m]
  *
  * @param pm_MaxGroundwaterTable; pm_MinGroundwaterTable; pm_MaxGroundwaterTableMonth
  *
  * @return
  */
  var GroundwaterDepthForDate = function (
    maxGroundwaterDepth,
    minGroundwaterDepth,
    minGroundwaterDepthMonth,
    julianday,
    leapYear
  ) {

    // console.log("GroundwaterDepthForDate");
    // console.log(arguments);
    
    var groundwaterDepth;
    var days;
    var meanGroundwaterDepth;
    var groundwaterAmplitude;

    if (leapYear)
      days = 366.0;
    else
      days = 365.0;

    meanGroundwaterDepth = (maxGroundwaterDepth + minGroundwaterDepth) / 2.0;
    groundwaterAmplitude = (maxGroundwaterDepth - minGroundwaterDepth) / 2.0;

    var sinus = sin(((julianday / days * 360.0) - 90.0 -
           (((minGroundwaterDepthMonth) * 30.0) - 15.0)) *
           3.14159265358979 / 180.0);

    groundwaterDepth = meanGroundwaterDepth + (sinus * groundwaterAmplitude);

    if (groundwaterDepth < 0.0) groundwaterDepth = 20.0;

    return groundwaterDepth;
  };

  //----------------------------------------------------------------------------

  /**
   * @brief Returns mean soil organic C.
   * @param depth_m
   */
  //Kohlenstoffgehalt 0-depth [% kg C / kg Boden]
  var avgCorg = function (depth_m) {
    var lsum = 0, sum = 0;
    var count = 0;

    for(var i = 0, nols = _env.noOfLayers; i < nols; i++)
    {
      count++;
      sum +=_soilColumn[i].vs_SoilOrganicCarbon(); //[kg C / kg Boden]
      lsum += _soilColumn[i].vs_LayerThickness;
      if(lsum >= depth_m)
        break;
    }

    return sum / (count) * 100.0;
  };

  /**
   * @brief Returns the soil moisture up to 90 cm depth
   * @return water content
   */
  //Bodenwassergehalt 0-90cm [%nFK]
  var mean90cmWaterContent = function () {
    return _soilMoisture.meanWaterContent(0.9);
  };

  var meanWaterContent = function (layer, number_of_layers) {
    return _soilMoisture.meanWaterContent(layer, number_of_layers);
  };

  /**
   * @brief Returns the N content up to given depth.
   *
   *@return N content
   *
   */
  //Boden-Nmin-Gehalt 0-90cm am 31.03. [kg N/ha]
  var sumNmin = function (depth_m) {
    var lsum = 0, sum = 0;
    var count = 0;

    for(var i = 0, nols = _env.noOfLayers; i < nols; i++)
    {
      count++;
      sum += _soilColumn[i].get_SoilNmin(); //[kg N m-3]
      lsum += _soilColumn[i].vs_LayerThickness;
      if(lsum >= depth_m)
        break;
    }

    return sum / (count) * lsum * 10000;
  }

  /**
   * Returns accumulation of soil nitrate for 90cm soil at 31.03.
   * @param depth Depth of soil
   * @return Accumulated nitrate
   */
  var sumNO3AtDay = function (depth_m) {
    var lsum = 0, sum = 0;
    var count = 0;

    for(var i = 0, nols = _env.noOfLayers; i < nols; i++)
    {
      count++;
      sum += _soilColumn[i].get_SoilNO3(); //[kg m-3]
      lsum += _soilColumn[i].vs_LayerThickness;
      if(lsum >= depth_m)
        break;
    }

    return sum;
  };

  //Grundwasserneubildung[mm Wasser]
  var groundWaterRecharge = function () {
    return _soilMoisture.get_GroundwaterRecharge();
  };

  //N-Auswaschung[kg N/ha]
  var nLeaching = function () {
    return _soilTransport.get_NLeaching();//[kg N ha-1]
  };

  /**
   * Returns sum of soiltemperature in given number of soil layers
   * @param layers Number of layers that should be added.
   * @return Soil temperature sum [°C]
   */
  var sumSoilTemperature = function (layers) {
    return _soilColumn.sumSoilTemperature(layers);
  };

  /**
   * Returns maximal snow depth during simulation
   * @return
   */
  var maxSnowDepth = function () {
    return _soilMoisture.getMaxSnowDepth();
  };

  /**
   * Returns sum of all snowdepth during whole simulation
   * @return
   */
  var accumulatedSnowDepth = function () {
    return _soilMoisture.accumulatedSnowDepth();
  };

  /**
   * Returns sum of frost depth during whole simulation.
   * @return Accumulated frost depth
   */
  var accumulatedFrostDepth = function () {
    return _soilMoisture.getAccumulatedFrostDepth();
  };

  /**
   * Returns average soil temperature of first 30cm soil.
   * @return Average soil temperature of organic layers.
   */
  var avg30cmSoilTemperature = function () {
    var nols = 3;
    var accu_temp = 0.0;
    for (var layer=0; layer<nols; layer++)
      accu_temp+=_soilColumn.soilLayer(layer).get_Vs_SoilTemperature();

    return accu_temp / nols;
  };

  /**
   * Returns average soil moisture concentration in soil in a defined layer.
   * Layer is specified by start end end of soil layer.
   *
   * @param start_layer
   * @param end_layer
   * @return Average soil moisture concentation
   */
  var avgSoilMoisture = function (start_layer, end_layer) {
    var num=0;
    var accu = 0.0;
    for (var i=start_layer; i<end_layer; i++)
    {
      accu+=_soilColumn.soilLayer(i).get_Vs_SoilMoisture_m3();
      num++;
    }
    return accu/num;
  };

  /**
   * Returns mean of capillary rise in a set of layers.
   * @param start_layer First layer to be included
   * @param end_layer Last layer, is not included;
   * @return Average capillary rise [mm]
   */
  var avgCapillaryRise = function (start_layer, end_layer) {
    var num=0;
    var accu = 0.0;
    for (var i=start_layer; i<end_layer; i++)
    {
      accu+=_soilMoisture.get_CapillaryRise(i);
      num++;
    }
    return accu/num;
  };

  /**
   * @brief Returns mean percolation rate
   * @param start_layer
   * @param end_layer
   * @return Mean percolation rate [mm]
   */
  var avgPercolationRate = function (start_layer, end_layer) {
    var num=0;
    var accu = 0.0;
    for (var i=start_layer; i<end_layer; i++)
    {
      accu+=_soilMoisture.get_PercolationRate(i);
      num++;
    }
    return accu/num;
  };

  /**
   * Returns sum of all surface run offs at this point in simulation time.
   * @return Sum of surface run off in [mm]
   */
  var sumSurfaceRunOff = function () {
    return _soilMoisture.get_SumSurfaceRunOff();
  };

  /**
   * Returns surface runoff of current day [mm].
   */
  var surfaceRunoff = function () {
    return _soilMoisture.get_SurfaceRunOff();
  };

  /**
   * Returns evapotranspiration [mm]
   * @return
   */
  var getEvapotranspiration = function () {
    if (that._currentCropGrowth!=0)
      return that._currentCropGrowth.get_RemainingEvapotranspiration();

    return 0.0;
  };

  /**
   * Returns actual transpiration
   * @return
   */
  var getTranspiration = function () {
    if (that._currentCropGrowth!=0)
      return that._currentCropGrowth.get_ActualTranspiration();

    return 0.0;
  };

  /**
   * Returns actual evaporation
   * @return
   */
  var getEvaporation = function () {
    if (that._currentCropGrowth!=0)
      return that._currentCropGrowth.get_EvaporatedFromIntercept();

    return 0.0;
  };

  var getETa = function () {
    return _soilMoisture.get_Evapotranspiration();
  };

  /**
   * Returns sum of evolution rate in first three layers.
   * @return
   */
  var get_sum30cmSMB_CO2EvolutionRate = function () {
    var sum = 0.0;
    for (var layer=0; layer<3; layer++) {
      sum+=_soilOrganic.get_SMB_CO2EvolutionRate(layer);
    }

    return sum;
  };

  /**
   * Returns volatilised NH3
   * @return
   */
  var getNH3Volatilised = function () {
    return _soilOrganic.get_NH3_Volatilised();
  };

  /**
   * Returns accumulated sum of all volatilised NH3 in simulation time.
   * @return
   */
  var getSumNH3Volatilised = function () {
  //  cout << "NH4Vol: " << _soilOrganic.get_sumNH3_Volatilised() << endl;
    return _soilOrganic.get_SumNH3_Volatilised();
  };

  /**
   * Returns sum of denitrification rate in first 30cm soil.
   * @return Denitrification rate [kg N m-3 d-1]
   */
  var getsum30cmActDenitrificationRate = function () {
    var sum=0.0;
    for (var layer=0; layer<3; layer++) {
  //    cout << "DENIT: " << _soilOrganic.get_ActDenitrificationRate(layer) << endl;
      sum+=_soilOrganic.get_ActDenitrificationRate(layer);
    }

    return sum;
  };

  var addDailySumFertiliser = function (amount) {
    _dailySumFertiliser += amount;
    _sumFertiliser += amount;
  };

  return {
      cropGrowth: this.cropGrowth,
      generalStep: generalStep,
      cropStep: cropStep,
      CO2ForDate: CO2ForDate,
      GroundwaterDepthForDate: GroundwaterDepthForDate,
      //! seed given crop
      seedCrop: seedCrop,
      //! what crop is currently seeded ?
      currentCrop: function () {
        return _currentCrop;
      },
      isCropPlanted: function () {
        return _currentCrop && _currentCrop.isValid();
      },
      //! harvest the currently seeded crop
      harvestCurrentCrop: harvestCurrentCrop,
      incorporateCurrentCrop: incorporateCurrentCrop,
      applyMineralFertiliser: applyMineralFertiliser,
      applyOrganicFertiliser: applyOrganicFertiliser,
      useNMinMineralFertilisingMethod: function () {
        return _env.useNMinMineralFertilisingMethod;
      },
      applyMineralFertiliserViaNMinMethod: applyMineralFertiliserViaNMinMethod,
      dailySumFertiliser: function () { 
        return _dailySumFertiliser; 
      },
      addDailySumFertiliser: addDailySumFertiliser,
      dailySumIrrigationWater: function () { 
        return _dailySumIrrigationWater; 
      },
      addDailySumIrrigationWater: function (amount) {
        _dailySumIrrigationWater += amount;
      },
      sumFertiliser: function () { 
        return _sumFertiliser; 
      },
      resetFertiliserCounter: function () { 
        _sumFertiliser = 0;
      },
      resetDailyCounter: function () {
        _dailySumIrrigationWater = 0.0;
        _dailySumFertiliser = 0.0;
      },
      applyIrrigation: applyIrrigation,
      applyTillage: applyTillage,
      get_AtmosphericCO2Concentration: function () {
        return that.vw_AtmosphericCO2Concentration;
      },
      get_GroundwaterDepth: function () { 
        return that.vs_GroundwaterDepth; 
      },
      writeOutputFiles: function () {
        return centralParameterProvider.writeOutputFiles;
      },
      avgCorg: avgCorg,
      mean90cmWaterContent: mean90cmWaterContent,
      meanWaterContent: meanWaterContent,
      sumNmin: sumNmin,
      groundWaterRecharge: groundWaterRecharge,
      nLeaching: nLeaching,
      sumSoilTemperature: sumSoilTemperature,
      sumNO3AtDay: sumNO3AtDay,
      maxSnowDepth: maxSnowDepth,
      accumulatedSnowDepth: accumulatedSnowDepth,
      accumulatedFrostDepth: accumulatedFrostDepth,
      avg30cmSoilTemperature: avg30cmSoilTemperature,
      avgSoilMoisture: avgSoilMoisture,
      avgCapillaryRise: avgCapillaryRise,
      avgPercolationRate: avgPercolationRate,
      sumSurfaceRunOff: sumSurfaceRunOff,
      surfaceRunoff: surfaceRunoff,
      getEvapotranspiration: getEvapotranspiration,
      getTranspiration: getTranspiration,
      getEvaporation: getEvaporation,
      get_sum30cmSMB_CO2EvolutionRate: get_sum30cmSMB_CO2EvolutionRate,
      getNH3Volatilised: getNH3Volatilised,
      getSumNH3Volatilised: getSumNH3Volatilised,
      getsum30cmActDenitrificationRate: getsum30cmActDenitrificationRate,
      getETa: getETa,
      vw_AtmosphericCO2Concentration: this.vw_AtmosphericCO2Concentration,
      vs_GroundwaterDepth: this.vs_GroundwaterDepth,
      /**
       * @brief Returns soil temperature
       * @return temperature
       */
      soilTemperature: function () { return _soilTemperature; },
      /**
       * @brief Returns soil moisture.
       * @return Moisture
       */
      soilMoisture: function () { return _soilMoisture; },

      /**
       * @brief Returns soil organic mass.
       * @return soil organic
       */
      soilOrganic: function () { return _soilOrganic; },

      /**
       * @brief Returns soil transport
       * @return soil transport
       */
      soilTransport: function () { return _soilTransport; },

      /**
       * @brief Returns soil column
       * @return soil column
       */
      soilColumn: function () { return _soilColumn; },

      soilColumnNC: function () { return _soilColumn; },

      /**
       * @brief Returns net radiation.
       * @param globrad
       * @return radiation
       */
      netRadiation: function (globrad) { return globrad * (1 - _env.albedo); },
      daysWithCrop: function () {return p_daysWithCrop; },
      getAccumulatedNStress: function () { return p_accuNStress; },
      getAccumulatedWaterStress: function () { return p_accuWaterStress; },
      getAccumulatedHeatStress: function () { return p_accuHeatStress; },
      getAccumulatedOxygenStress: function () { return p_accuOxygenStress; }
  };

};

/*

  TODO: test
    - Monica::soilParametersFromHermesFile
    - Monica::soilCharacteristicsKA5 
*/

var getCropParameters = function (cropId) {

  var cps = new CropParameters();

  for (var r = 0, rs = data.crop.rows.length; r < rs; r++) {
    if (data.crop.rows[r].id === cropId) {

      var row = data.crop.rows[r]; 

      cps.pc_CropName = row.name;
      cps.pc_MaxAssimilationRate = row.max_assimilation_rate;
      cps.pc_CarboxylationPathway = row.carboxylation_pathway;
      cps.pc_MinimumTemperatureForAssimilation = row.minimum_temperature_for_assimilation;
      cps.pc_CropSpecificMaxRootingDepth = row.crop_specific_max_rooting_depth;
      cps.pc_MinimumNConcentration = row.min_n_content;
      cps.pc_NConcentrationPN = row.n_content_pn;
      cps.pc_NConcentrationB0 = row.n_content_b0;
      cps.pc_NConcentrationAbovegroundBiomass = row.n_content_above_ground_biomass;
      cps.pc_NConcentrationRoot = row.n_content_root;
      cps.pc_InitialKcFactor = row.initial_kc_factor;
      cps.pc_DevelopmentAccelerationByNitrogenStress = row.development_acceleration_by_nitrogen_stress;
      cps.pc_FixingN = row.fixing_n;
      cps.pc_LuxuryNCoeff = row.luxury_n_coeff;
      cps.pc_MaxCropHeight = row.max_crop_height;
      cps.pc_ResidueNRatio = row.residue_n_ratio;
      cps.pc_SamplingDepth = row.sampling_depth;
      cps.pc_TargetNSamplingDepth = row.target_n_sampling_depth;
      cps.pc_TargetN30 = row.target_n30;
      cps.pc_DefaultRadiationUseEfficiency = row.default_radiation_use_efficiency;
      cps.pc_CropHeightP1 = row.crop_height_P1;
      cps.pc_CropHeightP2 = row.crop_height_P2;
      cps.pc_StageAtMaxHeight = row.stage_at_max_height;
      cps.pc_MaxCropDiameter = row.max_stem_diameter;
      cps.pc_StageAtMaxDiameter = row.stage_at_max_diameter;
      cps.pc_HeatSumIrrigationStart = row.heat_sum_irrigation_start;
      cps.pc_HeatSumIrrigationEnd = row.heat_sum_irrigation_end;
      cps.pc_MaxNUptakeParam = row.max_N_uptake_p;
      cps.pc_RootDistributionParam = row.root_distribution_p;
      cps.pc_PlantDensity = row.plant_density;
      cps.pc_RootGrowthLag = row.root_growth_lag;
      cps.pc_MinimumTemperatureRootGrowth = row.min_temperature_root_growth;
      cps.pc_InitialRootingDepth = row.initial_rooting_depth;
      cps.pc_RootPenetrationRate = row.root_penetration_rate;
      cps.pc_RootFormFactor = row.root_form_factor;
      cps.pc_SpecificRootLength = row.specific_root_length;
      cps.pc_StageAfterCut = row.stage_after_cut;
      cps.pc_CriticalTemperatureHeatStress = row.crit_temperature_heat_stress;
      cps.pc_LimitingTemperatureHeatStress = row.lim_temperature_heat_stress;
      cps.pc_BeginSensitivePhaseHeatStress = row.begin_sensitive_phase_heat_stress;
      cps.pc_EndSensitivePhaseHeatStress = row.end_sensitive_phase_heat_stress;
      cps.pc_DroughtImpactOnFertilityFactor = row.drought_impact_on_fertility_factor;
      cps.pc_CuttingDelayDays = row.cutting_delay_days;
      cps.pc_FieldConditionModifier = row.field_condition_modifier;

      break;
    }
  }

  for (var r = 0, rs = data.organ.rows.length; r < rs; r++) {
    if (data.organ.rows[r].crop_id === cropId) {

      var row = data.organ.rows[r];  

      cps.pc_NumberOfOrgans++;
      cps.pc_InitialOrganBiomass.push(row.initial_organ_biomass);
      cps.pc_OrganMaintenanceRespiration.push(row.organ_maintainance_respiration);
      cps.pc_AbovegroundOrgan.push(row.is_above_ground === 1);
      cps.pc_OrganGrowthRespiration.push(row.organ_growth_respiration);
      cps.pc_StorageOrgan.push(row.is_storage_organ === 1);

    }
  }

  for (var r = 0, rs = data.dev_stage.rows.length; r < rs; r++) {
    if (data.dev_stage.rows[r].crop_id === cropId) {
  
      var row = data.dev_stage.rows[r];      

      cps.pc_NumberOfDevelopmentalStages++;
      cps.pc_StageTemperatureSum.push(row.stage_temperature_sum);
      cps.pc_BaseTemperature.push(row.base_temperature);
      cps.pc_OptimumTemperature.push(row.opt_temperature);
      cps.pc_VernalisationRequirement.push(row.vernalisation_requirement);
      cps.pc_DaylengthRequirement.push(row.day_length_requirement);
      cps.pc_BaseDaylength.push(row.base_day_length);
      cps.pc_DroughtStressThreshold.push(row.drought_stress_threshold);
      cps.pc_CriticalOxygenContent.push(row.critical_oxygen_content);
      cps.pc_SpecificLeafArea.push(row.specific_leaf_area);
      cps.pc_StageMaxRootNConcentration.push(row.stage_max_root_n_content);
      cps.pc_StageKcFactor.push(row.stage_kc_factor);
    }
  }

  cps.resizeStageOrganVectors();

  for (var r = 0, rs = data.crop2ods_dependent_param.rows.length; r < rs; r++) {
    if (data.crop2ods_dependent_param.rows[r].crop_id === cropId) {

      var row = data.crop2ods_dependent_param.rows[r];

      var ods_dependent_param_id = row.ods_dependent_param_id;
      var dev_stage_id = row.dev_stage_id;
      var organ_id = row.organ_id;
      var sov = (ods_dependent_param_id === 1) ? cps.pc_AssimilatePartitioningCoeff : cps.pc_OrganSenescenceRate;

      sov[dev_stage_id - 1][organ_id - 1] = row.value;

    }
  }

  for (var r = 0, rs = data.yield_parts.rows.length; r < rs; r++) {
    if (data.yield_parts.rows[r].crop_id === cropId) {

      var row = data.yield_parts.rows[r];

      var organId = row.organ_id;
      var percentage = row.percentage / 100.0;
      var yieldDryMatter = row.dry_matter;

      if (row.is_primary === 1)
        cps.organIdsForPrimaryYield.push(new YieldComponent(organId, percentage, yieldDryMatter));
      else
        cps.organIdsForSecondaryYield.push(new YieldComponent(organId, percentage, yieldDryMatter));

    }
  }

  for (var r = 0, rs = data.cutting_parts.rows.length; r < rs; r++) {
    if (data.cutting_parts.rows[r].crop_id === cropId) {

      var row = data.cutting_parts.rows[r];

      var organId = row.organ_id;
      var percentage = row.percentage / 100.0;
      var yieldDryMatter = row.dry_matter;

      // do not add cutting part organ id for sudan gras because they are already added
      if (cropId === 18)
        cps.organIdsForPrimaryYield.push(new YieldComponent(organId, percentage, yieldDryMatter));
      else
        cps.organIdsForCutting.push(new YieldComponent(organId, percentage, yieldDryMatter));

    }
  }

  return cps;
   
};

/**
 * @brief Reads mineral fertiliser parameters from monica DB
 * @param id of the fertiliser
 * @return mineral fertiliser parameters value object with values from database
 */

var getMineralFertiliserParameters = function (id) {

   for (var r = 0, rs = data.mineral_fertilisers.rows.length; r < rs; r++) {
    if (data.mineral_fertilisers.rows[r].ID === id) {

      var row = data.mineral_fertilisers.rows[r];

      var name = row.name;
      var carbamid = row.carbamid;
      var no3 = row.no3;
      var nh4 = row.nh4;

      break;
    }
  }

  return new MineralFertiliserParameters(name, carbamid, no3, nh4);
};

/**
 * @brief Reads organic fertiliser parameters from monica DB
 * @param organ_fert_id ID of fertiliser
 * @return organic fertiliser parameters with values from database
 */
var getOrganicFertiliserParameters = function (id) {

  var omp = new OrganicMatterParameters();

   for (var r = 0, rs = data.organic_fertilisers.rows.length; r < rs; r++) {
    if (data.organic_fertilisers.rows[r].ID === id) {

      var row = data.organic_fertilisers.rows[r];

      omp.name = row.om_type;
      omp.vo_AOM_DryMatterContent = row.dm;
      omp.vo_AOM_NH4Content = row.nh4_n;
      omp.vo_AOM_NO3Content = row.no3_n;
      omp.vo_AOM_CarbamidContent = row.nh2_n;
      omp.vo_AOM_SlowDecCoeffStandard = row.k_slow;
      omp.vo_AOM_FastDecCoeffStandard = row.k_fast;
      omp.vo_PartAOM_to_AOM_Slow = row.part_s;
      omp.vo_PartAOM_to_AOM_Fast = row.part_f;
      omp.vo_CN_Ratio_AOM_Slow = row.cn_s;
      omp.vo_CN_Ratio_AOM_Fast = row.cn_f;
      omp.vo_PartAOM_Slow_to_SMB_Slow = row.smb_s;
      omp.vo_PartAOM_Slow_to_SMB_Fast = row.smb_f;

      break;
    }
  }  

  return omp;
};


var getResidueParameters = function (cropId) {

  var rps = new OrganicMatterParameters();

   for (var r = 0, rs = data.residue_table.rows.length; r < rs; r++) {
    if (data.residue_table.rows[r].crop_id === cropId) {

      var row = data.residue_table.rows[r];

      rps.name = row.residue_type;
      rps.vo_AOM_DryMatterContent = row.dm;
      rps.vo_AOM_NH4Content = row.nh4;
      rps.vo_AOM_NO3Content = row.no3;
      rps.vo_AOM_CarbamidContent = row.nh2;
      rps.vo_AOM_SlowDecCoeffStandard = row.k_slow;
      rps.vo_AOM_FastDecCoeffStandard = row.k_fast;
      rps.vo_PartAOM_to_AOM_Slow = row.part_s;
      rps.vo_PartAOM_to_AOM_Fast = row.part_f;
      rps.vo_CN_Ratio_AOM_Slow = row.cn_s;
      rps.vo_CN_Ratio_AOM_Fast = row.cn_f;
      rps.vo_PartAOM_Slow_to_SMB_Slow = row.smb_s;
      rps.vo_PartAOM_Slow_to_SMB_Fast = row.smb_f;

      break;
    }
  }  

  return rps;
};

var readCapillaryRiseRates = function () {

  var cap_rates = new CapillaryRiseRates();

  for (var r = 0, rs = data.capillary_rise_rate.rows.length; r < rs; r++) {

    var row = data.capillary_rise_rate.rows[r];
    
    var soil_type = row.soil_type;
    var distance = row.distance;
    var rate = row.capillary_rate;

    cap_rates.addRate(soil_type, distance, rate);
  }  

  return cap_rates;
};

var readUserParameterFromDatabase = function () {

  var cpp = new CentralParameterProvider();

  var user_crops = cpp.userCropParameters;
  var user_env = cpp.userEnvironmentParameters;
  var user_soil_moisture = cpp.userSoilMoistureParameters;
  var user_soil_temperature = cpp.userSoilTemperatureParameters;
  var user_soil_transport = cpp.userSoilTransportParameters;
  var user_soil_organic = cpp.userSoilOrganicParameters;
  var user_init_values = cpp.userInitValues;

  for (var r = 0, rs = data.user_parameter.rows.length; r < rs; r++) {

    var row = data.user_parameter.rows[r];

    var name = row.NAME;
    if (name == "tortuosity")
      user_crops.pc_Tortuosity = row.VALUE_HERMES;
    else if (name == "canopy_reflection_coefficient")
      user_crops.pc_CanopyReflectionCoefficient = row.VALUE_HERMES;
    else if (name == "reference_max_assimilation_rate")
      user_crops.pc_ReferenceMaxAssimilationRate = row.VALUE_HERMES;
    else if (name == "reference_leaf_area_index")
      user_crops.pc_ReferenceLeafAreaIndex = row.VALUE_HERMES;
    else if (name == "maintenance_respiration_parameter_2")
      user_crops.pc_MaintenanceRespirationParameter2 = row.VALUE_HERMES;
    else if (name == "maintenance_respiration_parameter_1")
      user_crops.pc_MaintenanceRespirationParameter1 = row.VALUE_HERMES;
    else if (name == "minimum_n_concentration_root")
      user_crops.pc_MinimumNConcentrationRoot = row.VALUE_HERMES;
    else if (name == "minimum_available_n")
      user_crops.pc_MinimumAvailableN = row.VALUE_HERMES;
    else if (name == "reference_albedo")
      user_crops.pc_ReferenceAlbedo = row.VALUE_HERMES;
    else if (name == "stomata_conductance_alpha")
      user_crops.pc_StomataConductanceAlpha = row.VALUE_HERMES;
    else if (name == "saturation_beta")
      user_crops.pc_SaturationBeta = row.VALUE_HERMES;
    else if (name == "growth_respiration_redux")
      user_crops.pc_GrowthRespirationRedux = row.VALUE_HERMES;
    else if (name == "max_crop_n_demand")
      user_crops.pc_MaxCropNDemand = row.VALUE_HERMES;
    else if (name == "growth_respiration_parameter_2")
      user_crops.pc_GrowthRespirationParameter2 = row.VALUE_HERMES;
    else if (name == "growth_respiration_parameter_1")
      user_crops.pc_GrowthRespirationParameter1 = row.VALUE_HERMES;
    else if (name == "use_automatic_irrigation")
      user_env.p_UseAutomaticIrrigation = (row.VALUE_HERMES === 1);
    else if (name == "use_nmin_mineral_fertilising_method")
      user_env.p_UseNMinMineralFertilisingMethod = (row.VALUE_HERMES === 1);
    else if (name == "layer_thickness")
      user_env.p_LayerThickness = row.VALUE_HERMES;
    else if (name == "number_of_layers")
      user_env.p_NumberOfLayers = row.VALUE_HERMES;
    else if (name == "start_pv_index")
      user_env.p_StartPVIndex = row.VALUE_HERMES;
    else if (name == "albedo")
      user_env.p_Albedo = row.VALUE_HERMES;
    else if (name == "athmospheric_co2")
      user_env.p_AthmosphericCO2 = row.VALUE_HERMES;
    else if (name == "wind_speed_height")
      user_env.p_WindSpeedHeight = row.VALUE_HERMES;
    else if (name == "use_secondary_yields")
      user_env.p_UseSecondaryYields = (row.VALUE_HERMES === 1);
    else if (name == "julian_day_automatic_fertilising")
      user_env.p_JulianDayAutomaticFertilising = row.VALUE_HERMES;
    else if (name == "critical_moisture_depth")
      user_soil_moisture.pm_CriticalMoistureDepth = row.VALUE_HERMES;
    else if (name == "saturated_hydraulic_conductivity")
      user_soil_moisture.pm_SaturatedHydraulicConductivity = row.VALUE_HERMES;
    else if (name == "surface_roughness")
      user_soil_moisture.pm_SurfaceRoughness = row.VALUE_HERMES;
    else if (name == "hydraulic_conductivity_redux")
      user_soil_moisture.pm_HydraulicConductivityRedux = row.VALUE_HERMES;
    else if (name == "snow_accumulation_treshold_temperature")
      user_soil_moisture.pm_SnowAccumulationTresholdTemperature = row.VALUE_HERMES;
    else if (name == "kc_factor")
      user_soil_moisture.pm_KcFactor = row.VALUE_HERMES;
    else if (name == "time_step")
      user_env.p_timeStep = row.VALUE_HERMES;
    else if (name == "temperature_limit_for_liquid_water")
      user_soil_moisture.pm_TemperatureLimitForLiquidWater = row.VALUE_HERMES;
    else if (name == "correction_snow")
      user_soil_moisture.pm_CorrectionSnow = row.VALUE_HERMES;
    else if (name == "correction_rain")
      user_soil_moisture.pm_CorrectionRain = row.VALUE_HERMES;
    else if (name == "snow_max_additional_density")
      user_soil_moisture.pm_SnowMaxAdditionalDensity = row.VALUE_HERMES;
    else if (name == "new_snow_density_min")
      user_soil_moisture.pm_NewSnowDensityMin = row.VALUE_HERMES;
    else if (name == "snow_retention_capacity_min")
      user_soil_moisture.pm_SnowRetentionCapacityMin = row.VALUE_HERMES;
    else if (name == "refreeze_parameter_2")
      user_soil_moisture.pm_RefreezeParameter2 = row.VALUE_HERMES;
    else if (name == "refreeze_parameter_1")
      user_soil_moisture.pm_RefreezeParameter1 = row.VALUE_HERMES;
    else if (name == "refreeze_temperature")
      user_soil_moisture.pm_RefreezeTemperature = row.VALUE_HERMES;
    else if (name == "snowmelt_temperature")
      user_soil_moisture.pm_SnowMeltTemperature = row.VALUE_HERMES;
    else if (name == "snow_packing")
      user_soil_moisture.pm_SnowPacking = row.VALUE_HERMES;
    else if (name == "snow_retention_capacity_max")
      user_soil_moisture.pm_SnowRetentionCapacityMax = row.VALUE_HERMES;
    else if (name == "evaporation_zeta")
      user_soil_moisture.pm_EvaporationZeta = row.VALUE_HERMES;
    else if (name == "xsa_critical_soil_moisture")
      user_soil_moisture.pm_XSACriticalSoilMoisture = row.VALUE_HERMES;
    else if (name == "maximum_evaporation_impact_depth")
      user_soil_moisture.pm_MaximumEvaporationImpactDepth = row.VALUE_HERMES;
    else if (name == "ntau")
      user_soil_temperature.pt_NTau = row.VALUE_HERMES;
    else if (name == "initial_surface_temperature")
      user_soil_temperature.pt_InitialSurfaceTemperature = row.VALUE_HERMES;
    else if (name == "base_temperature")
      user_soil_temperature.pt_BaseTemperature = row.VALUE_HERMES;
    else if (name == "quartz_raw_density")
      user_soil_temperature.pt_QuartzRawDensity = row.VALUE_HERMES;
    else if (name == "density_air")
      user_soil_temperature.pt_DensityAir = row.VALUE_HERMES;
    else if (name == "density_water")
      user_soil_temperature.pt_DensityWater = row.VALUE_HERMES;
    else if (name == "specific_heat_capacity_air")
      user_soil_temperature.pt_SpecificHeatCapacityAir = row.VALUE_HERMES;
    else if (name == "specific_heat_capacity_quartz")
      user_soil_temperature.pt_SpecificHeatCapacityQuartz = row.VALUE_HERMES;
    else if (name == "specific_heat_capacity_water")
      user_soil_temperature.pt_SpecificHeatCapacityWater = row.VALUE_HERMES;
    else if (name == "soil_albedo")
      user_soil_temperature.pt_SoilAlbedo = row.VALUE_HERMES;
    else if (name == "dispersion_length")
      user_soil_transport.pq_DispersionLength = row.VALUE_HERMES;
    else if (name == "AD")
      user_soil_transport.pq_AD = row.VALUE_HERMES;
    else if (name == "diffusion_coefficient_standard")
      user_soil_transport.pq_DiffusionCoefficientStandard = row.VALUE_HERMES;
    else if (name == "leaching_depth")
      user_env.p_LeachingDepth = row.VALUE_HERMES;
    else if (name == "groundwater_discharge")
      user_soil_moisture.pm_GroundwaterDischarge = row.VALUE_HERMES;
    else if (name == "density_humus")
      user_soil_temperature.pt_DensityHumus = row.VALUE_HERMES;
    else if (name == "specific_heat_capacity_humus")
      user_soil_temperature.pt_SpecificHeatCapacityHumus = row.VALUE_HERMES;
    else if (name == "max_percolation_rate")
      user_soil_moisture.pm_MaxPercolationRate = row.VALUE_HERMES;
    else if (name == "max_groundwater_depth")
      user_env.p_MaxGroundwaterDepth = row.VALUE_HERMES;
    else if (name == "min_groundwater_depth")
      user_env.p_MinGroundwaterDepth = row.VALUE_HERMES;
    else if (name == "min_groundwater_depth_month")
      user_env.p_MinGroundwaterDepthMonth = row.VALUE_HERMES;
    else if (name == "SOM_SlowDecCoeffStandard")
      user_soil_organic.po_SOM_SlowDecCoeffStandard = row.VALUE_HERMES;
    else if (name == "SOM_FastDecCoeffStandard")
      user_soil_organic.po_SOM_FastDecCoeffStandard = row.VALUE_HERMES;
    else if (name == "SMB_SlowMaintRateStandard")
      user_soil_organic.po_SMB_SlowMaintRateStandard = row.VALUE_HERMES;
    else if (name == "SMB_FastMaintRateStandard")
      user_soil_organic.po_SMB_FastMaintRateStandard = row.VALUE_HERMES;
    else if (name == "SMB_SlowDeathRateStandard")
      user_soil_organic.po_SMB_SlowDeathRateStandard = row.VALUE_HERMES;
    else if (name == "SMB_FastDeathRateStandard")
      user_soil_organic.po_SMB_FastDeathRateStandard = row.VALUE_HERMES;
    else if (name == "SMB_UtilizationEfficiency")
      user_soil_organic.po_SMB_UtilizationEfficiency = row.VALUE_HERMES;
    else if (name == "SOM_SlowUtilizationEfficiency")
      user_soil_organic.po_SOM_SlowUtilizationEfficiency = row.VALUE_HERMES;
    else if (name == "SOM_FastUtilizationEfficiency")
      user_soil_organic.po_SOM_FastUtilizationEfficiency = row.VALUE_HERMES;
    else if (name == "AOM_SlowUtilizationEfficiency")
      user_soil_organic.po_AOM_SlowUtilizationEfficiency = row.VALUE_HERMES;
    else if (name == "AOM_FastUtilizationEfficiency")
      user_soil_organic.po_AOM_FastUtilizationEfficiency = row.VALUE_HERMES;
    else if (name == "AOM_FastMaxC_to_N")
      user_soil_organic.po_AOM_FastMaxC_to_N = row.VALUE_HERMES;
    else if (name == "PartSOM_Fast_to_SOM_Slow")
      user_soil_organic.po_PartSOM_Fast_to_SOM_Slow = row.VALUE_HERMES;
    else if (name == "PartSMB_Slow_to_SOM_Fast")
      user_soil_organic.po_PartSMB_Slow_to_SOM_Fast = row.VALUE_HERMES;
    else if (name == "PartSMB_Fast_to_SOM_Fast")
      user_soil_organic.po_PartSMB_Fast_to_SOM_Fast = row.VALUE_HERMES;
    else if (name == "PartSOM_to_SMB_Slow")
      user_soil_organic.po_PartSOM_to_SMB_Slow = row.VALUE_HERMES;
    else if (name == "PartSOM_to_SMB_Fast")
      user_soil_organic.po_PartSOM_to_SMB_Fast = row.VALUE_HERMES;
    else if (name == "CN_Ratio_SMB")
      user_soil_organic.po_CN_Ratio_SMB = row.VALUE_HERMES;
    else if (name == "LimitClayEffect")
      user_soil_organic.po_LimitClayEffect = row.VALUE_HERMES;
    else if (name == "AmmoniaOxidationRateCoeffStandard")
      user_soil_organic.po_AmmoniaOxidationRateCoeffStandard = row.VALUE_HERMES;
    else if (name == "NitriteOxidationRateCoeffStandard")
      user_soil_organic.po_NitriteOxidationRateCoeffStandard = row.VALUE_HERMES;
    else if (name == "TransportRateCoeff")
      user_soil_organic.po_TransportRateCoeff = row.VALUE_HERMES;
    else if (name == "SpecAnaerobDenitrification")
      user_soil_organic.po_SpecAnaerobDenitrification = row.VALUE_HERMES;
    else if (name == "ImmobilisationRateCoeffNO3")
      user_soil_organic.po_ImmobilisationRateCoeffNO3 = row.VALUE_HERMES;
    else if (name == "ImmobilisationRateCoeffNH4")
      user_soil_organic.po_ImmobilisationRateCoeffNH4 = row.VALUE_HERMES;
    else if (name == "Denit1")
      user_soil_organic.po_Denit1 = row.VALUE_HERMES;
    else if (name == "Denit2")
      user_soil_organic.po_Denit2 = row.VALUE_HERMES;
    else if (name == "Denit3")
      user_soil_organic.po_Denit3 = row.VALUE_HERMES;
    else if (name == "HydrolysisKM")
      user_soil_organic.po_HydrolysisKM = row.VALUE_HERMES;
    else if (name == "ActivationEnergy")
      user_soil_organic.po_ActivationEnergy = row.VALUE_HERMES;
    else if (name == "HydrolysisP1")
      user_soil_organic.po_HydrolysisP1 = row.VALUE_HERMES;
    else if (name == "HydrolysisP2")
      user_soil_organic.po_HydrolysisP2 = row.VALUE_HERMES;
    else if (name == "AtmosphericResistance")
      user_soil_organic.po_AtmosphericResistance = row.VALUE_HERMES;
    else if (name == "N2OProductionRate")
      user_soil_organic.po_N2OProductionRate = row.VALUE_HERMES;
    else if (name == "Inhibitor_NH3")
      user_soil_organic.po_Inhibitor_NH3 = row.VALUE_HERMES;

    cpp.capillaryRiseRates = readCapillaryRiseRates();
  }

  return cpp;
};

var soilCharacteristicsKA5 = function (soilParameter) {

  console.log("soilCharacteristicsKA5");
  var texture = soilParameter.vs_SoilTexture;
  var stoneContent = soilParameter.vs_SoilStoneContent;

  var fc = 0.0;
  var sat = 0.0;
  var pwp = 0.0;

  if (texture != "") {
    var srd = soilParameter.vs_SoilRawDensity() / 1000.0; // [kg m-3] -> [g cm-3]
    var som = soilParameter.vs_SoilOrganicMatter() * 100.0; // [kg kg-1] -> [%]

    // ***************************************************************************
    // *** The following boundaries are extracted from:                        ***
    // *** Wessolek, G., M. Kaupenjohann, M. Renger (2009) Bodenphysikalische  ***
    // *** Kennwerte und Berechnungsverfahren für die Praxis. Bodenökologie    ***
    // *** und Bodengenese 40, Selbstverlag Technische Universität Berlin      ***
    // *** (Tab. 4).                                                           ***
    // ***************************************************************************

    var srd_lowerBound = 0.0;
    var srd_upperBound = 0.0;
    if (srd < 1.1) {
      srd_lowerBound = 1.1;
      srd_upperBound = 1.1;
    }
    else if ((srd >= 1.1) && (srd < 1.3)) {
      srd_lowerBound = 1.1;
      srd_upperBound = 1.3;
    }
    else if ((srd >= 1.3) && (srd < 1.5)) {
      srd_lowerBound = 1.3;
      srd_upperBound = 1.5;
    }
    else if ((srd >= 1.5) && (srd < 1.7)) {
      srd_lowerBound = 1.5;
      srd_upperBound = 1.7;
    }
    else if ((srd >= 1.7) && (srd < 1.9)) {
      srd_lowerBound = 1.7;
      srd_upperBound = 1.9;
    }
    else if (srd >= 1.9) {
      srd_lowerBound = 1.9;
      srd_upperBound = 1.9;
    }

    // special treatment for "torf" soils
    if (texture == "Hh" || texture == "Hn") {
        srd_lowerBound = -1;
        srd_upperBound = -1;
    }

    // Boundaries for linear interpolation
    var lbRes = readPrincipalSoilCharacteristicData(texture, srd_lowerBound);
    var sat_lowerBound = lbRes.sat;
    var fc_lowerBound = lbRes.fc;
    var pwp_lowerBound = lbRes.pwp;

    var ubRes = readPrincipalSoilCharacteristicData(texture, srd_upperBound);
    var sat_upperBound = ubRes.sat;
    var fc_upperBound = ubRes.fc;
    var pwp_upperBound = ubRes.pwp;

    if(lbRes.initialized && ubRes.initialized) {
      //    cout << "Soil Raw Density:\t" << vs_SoilRawDensity << endl;
      //    cout << "Saturation:\t\t" << vs_SaturationLowerBoundary << "\t" << vs_SaturationUpperBoundary << endl;
      //    cout << "Field Capacity:\t" << vs_FieldCapacityLowerBoundary << "\t" << vs_FieldCapacityUpperBoundary << endl;
      //    cout << "PermanentWP:\t" << vs_PermanentWiltingPointLowerBoundary << "\t" << vs_PermanentWiltingPointUpperBoundary << endl;
      //    cout << "Soil Organic Matter:\t" << vs_SoilOrganicMatter << endl;

      // ***************************************************************************
      // *** The following boundaries are extracted from:                        ***
      // *** Wessolek, G., M. Kaupenjohann, M. Renger (2009) Bodenphysikalische  ***
      // *** Kennwerte und Berechnungsverfahren für die Praxis. Bodenökologie    ***
      // *** und Bodengenese 40, Selbstverlag Technische Universität Berlin      ***
      // *** (Tab. 5).                                                           ***
      // ***************************************************************************

      var som_lowerBound = 0.0;
      var som_upperBound = 0.0;

      if(som >= 0.0 && som < 1.0) {
        som_lowerBound = 0.0;
        som_upperBound = 0.0;
      }
      else if(som >= 1.0 && som < 1.5) {
        som_lowerBound = 0.0;
        som_upperBound = 1.5;
      }
      else if(som >= 1.5 && som < 3.0) {
        som_lowerBound = 1.5;
        som_upperBound = 3.0;
      }
      else if(som >= 3.0 && som < 6.0) {
        som_lowerBound = 3.0;
        som_upperBound = 6.0;
      }
      else if(som >= 6.0 && som < 11.5) {
        som_lowerBound = 6.0;
        som_upperBound = 11.5;
      }
      else if(som >= 11.5) {
        som_lowerBound = 11.5;
        som_upperBound = 11.5;
      }

      // special treatment for "torf" soils
      if (texture == "Hh" || texture == "Hn") {
        som_lowerBound = 0.0;
        som_upperBound = 0.0;
      }

      // Boundaries for linear interpolation
      var fc_mod_lowerBound = 0.0;
      var sat_mod_lowerBound = 0.0;
      var pwp_mod_lowerBound = 0.0;
      // modifier values are given only for organic matter > 1.0% (class h2)
      if (som_lowerBound != 0.0) {
        var lbRes = readSoilCharacteristicModifier(texture, som_lowerBound);
        sat_mod_lowerBound = lbRes.sat;
        fc_mod_lowerBound = lbRes.fc;
        pwp_mod_lowerBound = lbRes.pwp;
      }

      var fc_mod_upperBound = 0.0;
      var sat_mod_upperBound = 0.0;
      var pwp_mod_upperBound = 0.0;
      if (som_upperBound != 0.0) {
        var ubRes = readSoilCharacteristicModifier(texture, som_upperBound);
        sat_mod_upperBound = ubRes.sat;
        fc_mod_upperBound = ubRes.fc;
        pwp_mod_upperBound = ubRes.pwp;
      }

//      cout << "Saturation-Modifier:\t" << sat_mod_lowerBound << "\t" << sat_mod_upperBound << endl;
//      cout << "Field capacity-Modifier:\t" << fc_mod_lowerBound << "\t" << fc_mod_upperBound << endl;
//      cout << "PWP-Modifier:\t" << pwp_mod_lowerBound << "\t" << pwp_mod_upperBound << endl;

      // Linear interpolation
      var fc_unmod = fc_lowerBound;
      if (fc_upperBound < 0.5 && fc_lowerBound >= 1.0)
        fc_unmod = fc_lowerBound;
      else if(fc_lowerBound < 0.5 && fc_upperBound >= 1.0)
        fc_unmod = fc_upperBound;
      else if(srd_upperBound != srd_lowerBound)
        fc_unmod = (srd - srd_lowerBound)/
                   (srd_upperBound - srd_lowerBound)*
                   (fc_upperBound - fc_lowerBound) + fc_lowerBound;

      var sat_unmod = sat_lowerBound;
      if(sat_upperBound < 0.5 && sat_lowerBound >= 1.0)
        sat_unmod = sat_lowerBound;
      else if(sat_lowerBound < 0.5 && sat_upperBound >= 1.0)
        sat_unmod = sat_upperBound;
      else if(srd_upperBound != srd_lowerBound)
        sat_unmod = (srd - srd_lowerBound)/
                    (srd_upperBound - srd_lowerBound)*
                    (sat_upperBound - sat_lowerBound) + sat_lowerBound;

      var pwp_unmod = pwp_lowerBound;
      if(pwp_upperBound < 0.5 && pwp_lowerBound >= 1.0)
        pwp_unmod = pwp_lowerBound;
      else if(pwp_lowerBound < 0.5 && pwp_upperBound >= 1.0)
        pwp_unmod = pwp_upperBound;
      else if(srd_upperBound != srd_lowerBound)
        pwp_unmod = (srd - srd_lowerBound)/
                    (srd_upperBound - srd_lowerBound)*
                    (pwp_upperBound - pwp_lowerBound) + pwp_lowerBound;

      //in this case upper and lower boundary are equal, so doesn't matter.
      var fc_mod = fc_mod_lowerBound;
      var sat_mod = sat_mod_lowerBound;
      var pwp_mod = pwp_mod_lowerBound;
      if(som_upperBound != som_lowerBound) {
        fc_mod = (som - som_lowerBound)/
                 (som_upperBound - som_lowerBound)*
                 (fc_mod_upperBound - fc_mod_lowerBound) + fc_mod_lowerBound;

        sat_mod = (som - som_lowerBound)/
                  (som_upperBound - som_lowerBound)*
                  (sat_mod_upperBound - sat_mod_lowerBound) + sat_mod_lowerBound;

        pwp_mod = (som - som_lowerBound)/
                  (som_upperBound - som_lowerBound)*
                  (pwp_mod_upperBound - pwp_mod_lowerBound) + pwp_mod_lowerBound;
      }

      // Modifying the principal values by organic matter
      fc = (fc_unmod + fc_mod)/100.0; // [m3 m-3]
      sat = (sat_unmod + sat_mod)/100.0; // [m3 m-3]
      pwp = (pwp_unmod + pwp_mod)/100.0; // [m3 m-3]

      // Modifying the principal values by stone content
      fc *= (1.0 - stoneContent);
      sat *= (1.0 - stoneContent);
      pwp *= (1.0 - stoneContent);
    }
  }

  soilParameter.vs_FieldCapacity = fc;
  soilParameter.vs_Saturation = sat;
  soilParameter.vs_PermanentWiltingPoint = pwp;
};


var readPrincipalSoilCharacteristicData = function (soilType, rawDensity) {

  // typedef map<int, RPSCDRes> M1;
  // typedef map<string, M1> M2;
  // static M2 m;
  var m = {};

  for (var r = 0, rs = data.soil_characteristic_data.rows.length; r < rs; r++) {

    var row = data.soil_characteristic_data.rows[r];

    if (row.soil_type === soilType) {

      var ac = row.air_capacity;
      var fc = row.field_capacity;
      var nfc = row.n_field_capacity;

      var rp = new RPSCDRes(true);
      rp.sat = ac + fc;
      rp.fc = fc;
      rp.pwp = fc - nfc;


      if (m[row.soil_type] === undefined)
        m[row.soil_type] = {};

      m[row.soil_type][row['soil_raw_density*10']] = rp;
    }
  }

  var rd10 = int(rawDensity * 10);
  if (m[soilType][rd10])
    return m[soilType][rd10];

  //if we didn't find values for a given raw density, e.g. 1.1 (= 11)
  //we try to find the closest next one (up (1.1) or down (1.9))
  while(!m[soilType][rd10] && (11 <= rd10 && rd10 <= 19))
    rd10 += (rd10 < 15) ? 1 : -1;

  return (m[soilType][rd10]) ? m[soilType][rd10] : new RPSCDRes();
};

var readSoilCharacteristicModifier = function (soilType, organicMatter) {

  // typedef map<int, RPSCDRes> M1;
  // typedef map<string, M1> M2;
  // static M2 m;
  var m = {};

  for (var r = 0, rs = data.soil_aggregation_values.rows.length; r < rs; r++) {

    var row = data.soil_aggregation_values.rows[r];

    if (row.soil_type === soilType) {

      var ac = row.air_capacity;
      var fc = row.field_capacity;
      var nfc = row.n_field_capacity;

      var rp = new RPSCDRes(true);
      rp.sat = ac + fc;
      rp.fc = fc;
      rp.pwp = fc - nfc;


      if (m[row.soil_type] === undefined)
        m[row.soil_type] = {};

      m[row.soil_type][row['organic_matter*10']] = rp;
    }
  }

  var rd10 = int(organicMatter * 10);

  return (m[soilType][rd10]) ? m[soilType][rd10] : new RPSCDRes();
};



var runMonica = function (env) {

  var res = { crops: [] };
  
  ResultId.forEach(function (id) {
    if (perCropResults.indexOf(id) === -1)
      res[id] = [];
  });

  if(env.cropRotation.length === 0) {
    console.log("Error: Fruchtfolge is empty");
    return res;
  }

  console.log("starting Monica");

  var write_output_files = (env.pathToOutputDir != null && !!fs);
  var foutFileName = env.pathToOutputDir + '/rmout.dat';
  var goutFileName = env.pathToOutputDir + '/smout.dat';
  var monicaParamFileName = env.pathToOutputDir + '/monica_parameters.txt';

  if (write_output_files) {
    // writes the header line to output files
    initializeFoutHeader(foutFileName);
    initializeGoutHeader(goutFileName);
    dumpMonicaParametersIntoFile(monicaParamFileName, env.centralParameterProvider);
  }

  //debug() << "MonicaModel" << endl;
  //debug() << env.toString();
  var model = new Model(env, env.da);
  var currentDate = env.da.startDate();
  var nods = env.da.noOfStepsPossible();

  var currentMonth = currentDate.getMonth();
  var dim = 0; //day in current month

  var avg10corg = 0, avg30corg = 0, watercontent = 0,
      groundwater = 0,  nLeaching= 0, yearly_groundwater=0,
      yearly_nleaching=0, monthSurfaceRunoff = 0.0;
  var monthPrecip = 0.0;
  var monthETa = 0.0;

  //iterator through the production processes
  var ppci = 0;
  //direct handle to current process
  var currentPP = env.cropRotation[ppci];
  //are the dates in the production process relative dates
  //or are they absolute as produced by the hermes inputs
  var useRelativeDates =  false;// currentPP.start().isRelativeDate();
  //the next application date, either a relative or an absolute date
  //to get the correct applications out of the production processes
  var nextPPApplicationDate = currentPP.start();

  //a definitely absolute next application date to keep track where
  //we are in the list of climate data
  var nextAbsolutePPApplicationDate =
      useRelativeDates ? nextPPApplicationDate.toAbsoluteDate
                         (currentDate.year() + 1) : nextPPApplicationDate;
  console.log("next app-date: " + nextPPApplicationDate.toString()
          + " next abs app-date: " + nextAbsolutePPApplicationDate.toString());

  //if for some reason there are no applications (no nothing) in the
  //production process: quit
  if(!nextAbsolutePPApplicationDate.isValid())
  {
    console.log("start of production-process: " + currentPP.toString()
            + " is not valid");
    return res;
  }

  //beware: !!!! if there are absolute days used, then there is basically
  //no rotation if the last crop in the crop rotation has changed
  //the loop starts anew but the first crops date has already passed
  //so the crop won't be seeded again or any work applied
  //thus for absolute dates the crop rotation has to be as long as there
  //are climate data !!!!!

  for (var d = 0; d < nods; ++d, currentDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate() + 1), ++dim) {

    console.log("currentDate: " + currentDate.getDate() + "." + (currentDate.getMonth() + 1) + "." + currentDate.getFullYear());
    model.resetDailyCounter();

    // test if model's crop has been dying in previous step
    // if yes, it will be incorporated into soil
    if (model.cropGrowth() && model.cropGrowth().isDying()) {
        model.incorporateCurrentCrop();
    }

    //there's something to at this day
    if (nextAbsolutePPApplicationDate.setHours(0,0,0,0) == currentDate.setHours(0,0,0,0)) {

      console.log(
        " applying at: " + nextPPApplicationDate.toString() +
        " absolute-at: " + nextAbsolutePPApplicationDate.toString()
      );

      // store yields if cutting
      // debug('currentPP.getWorksteps()[0]', currentPP.getWorkstep(currentDate));
      // if (currentPP.getWorkstep(currentDate) instanceof Cutting && currentPP.getWorkstep(currentDate))
      //   res.crops.push(currentPP.cropResult());
      
      //apply everything to do at current day
      //cout << currentPP.toString() << endl;
      currentPP.apply(nextPPApplicationDate, model);

      //get the next application date to wait for (either absolute or relative)
      var prevPPApplicationDate = nextPPApplicationDate;

      nextPPApplicationDate =  currentPP.nextDate(nextPPApplicationDate);

      nextAbsolutePPApplicationDate =  useRelativeDates ? nextPPApplicationDate.toAbsoluteDate
          (currentDate.year() + (nextPPApplicationDate.dayOfYear() > prevPPApplicationDate.dayOfYear() ? 0 : 1),
           true) : nextPPApplicationDate;

      console.log(
        " next app-date: " + nextPPApplicationDate.toString() + 
        " next abs app-date: " + nextAbsolutePPApplicationDate.toString()
      );

      //if application date was not valid, we're (probably) at the end
      //of the application list of this production process
      //-> go to the next one in the crop rotation
      if(!nextAbsolutePPApplicationDate.isValid()) {
        
        //get yieldresults for crop
        res.crops.push(currentPP.cropResult());

        // if(!env.useSecondaryYields)
        //   res.crops[res.crops.length - 1]['secondaryYield'] = 0;
        // res.crops[res.crops.length - 1]['sumFertiliser'] = model.sumFertiliser();
        // res.crops[res.crops.length - 1]['daysWithCrop'] = model.daysWithCrop();
        // res.crops[res.crops.length - 1]['NStress'] = model.getAccumulatedNStress();
        // res.crops[res.crops.length - 1]['WaterStress'] = model.getAccumulatedWaterStress();
        // res.crops[res.crops.length - 1]['HeatStress'] = model.getAccumulatedHeatStress();
        // res.crops[res.crops.length - 1]['OxygenStress'] = model.getAccumulatedOxygenStress();

        //to count the applied fertiliser for the next production process
        model.resetFertiliserCounter();

        //resets crop values for use in next year
        currentPP.crop().reset();

        ppci++;

        //start anew if we reached the end of the crop rotation
        if(ppci == env.cropRotation.length)
          ppci = 0;

        currentPP = env.cropRotation[ppci];
        nextPPApplicationDate = currentPP.start();
        nextAbsolutePPApplicationDate =
            useRelativeDates ? nextPPApplicationDate.toAbsoluteDate
            (currentDate.year() + (nextPPApplicationDate.dayOfYear() > prevPPApplicationDate.dayOfYear() ? 0 : 1),
             true) : nextPPApplicationDate;

        console.log(
          " new valid next app-date: " + nextPPApplicationDate.toString() +
          " next abs app-date: " + nextAbsolutePPApplicationDate.toString()
        );
      }

      //if we got our next date relative it might be possible that
      //the actual relative date belongs into the next year
      //this is the case if we're already (dayOfYear) past the next dayOfYear
      if(useRelativeDates && currentDate > nextAbsolutePPApplicationDate)
        nextAbsolutePPApplicationDate.addYears(1);
    }
    // write simulation date to file
    if (write_output_files) {
        fs.appendFileSync(goutFileName, currentDate.toLocaleDateString(), { encoding: 'utf8' });
        fs.appendFileSync(foutFileName, currentDate.toLocaleDateString(), { encoding: 'utf8' });
    }

    // run crop step
    if(model.isCropPlanted()) {
      model.cropStep(d);
      // return;
    }

    // writes crop results to output file
    if (write_output_files)
      writeCropResults(model.cropGrowth(), foutFileName, goutFileName, model.isCropPlanted());

    model.generalStep(d);

    // write special outputs at 31.03.
    if(currentDate.getDate() == 31 && currentDate.getMonth() == 3) {

      res['sum90cmYearlyNatDay'].push(fixed(10, model.sumNmin(0.9)));
      //      debug << "N at: " << model.sumNmin(0.9) << endl;
      res['sum30cmSoilTemperature'].push(fixed(10, model.sumSoilTemperature(3)));
      res['sum90cmYearlyNO3AtDay'].push(fixed(10, model.sumNO3AtDay(0.9)));
      res['avg30cmSoilTemperature'].push(fixed(10, model.avg30cmSoilTemperature()));
      //cout << "MONICA_TEMP:\t" << model.avg30cmSoilTemperature() << endl;
      res['avg0_30cmSoilMoisture'].push(fixed(10, model.avgSoilMoisture(0,3)));
      res['avg30_60cmSoilMoisture'].push(fixed(10, model.avgSoilMoisture(3,6)));
      res['avg60_90cmSoilMoisture'].push(fixed(10, model.avgSoilMoisture(6,9)));
      res['waterFluxAtLowerBoundary'].push(fixed(10, model.groundWaterRecharge()));
      res['avg0_30cmCapillaryRise'].push(fixed(10, model.avgCapillaryRise(0,3)));
      res['avg30_60cmCapillaryRise'].push(fixed(10, model.avgCapillaryRise(3,6)));
      res['avg60_90cmCapillaryRise'].push(fixed(10, model.avgCapillaryRise(6,9)));
      res['avg0_30cmPercolationRate'].push(fixed(10, model.avgPercolationRate(0,3)));
      res['avg30_60cmPercolationRate'].push(fixed(10, model.avgPercolationRate(3,6)));
      res['avg60_90cmPercolationRate'].push(fixed(10, model.avgPercolationRate(6,9)));
      res['evapotranspiration'].push(fixed(10, model.getEvapotranspiration()));
      res['transpiration'].push(fixed(10, model.getTranspiration()));
      res['evaporation'].push(fixed(10, model.getEvaporation()));
      res['sum30cmSMB_CO2EvolutionRate'].push(fixed(10, model.get_sum30cmSMB_CO2EvolutionRate()));
      res['NH3Volatilised'].push(fixed(10, model.getNH3Volatilised()));
      res['sum30cmActDenitrificationRate'].push(fixed(10, model.getsum30cmActDenitrificationRate()));
      res['leachingNAtBoundary'].push(fixed(10, model.nLeaching()));
    }

    if((currentDate.getMonth() != currentMonth) || (d == nods - 1)) {
      
      currentMonth = currentDate.getMonth();

      res['avg10cmMonthlyAvgCorg'].push(fixed(10, avg10corg / dim));
      res['avg30cmMonthlyAvgCorg'].push(fixed(10, avg30corg / dim));
      res['mean90cmMonthlyAvgWaterContent'].push(fixed(10, model.mean90cmWaterContent()));
      res['monthlySumGroundWaterRecharge'].push(fixed(10, groundwater));
      res['monthlySumNLeaching'].push(fixed(10, nLeaching));
      res['maxSnowDepth'].push(fixed(10, model.maxSnowDepth()));
      res['sumSnowDepth'].push(fixed(10, model.accumulatedSnowDepth()));
      res['sumFrostDepth'].push(fixed(10, model.accumulatedFrostDepth()));
      res['sumSurfaceRunOff'].push(fixed(10, model.sumSurfaceRunOff()));
      res['sumNH3Volatilised'].push(fixed(10, model.getSumNH3Volatilised()));
      res['monthlySurfaceRunoff'].push(fixed(10, monthSurfaceRunoff));
      res['monthlyPrecip'].push(fixed(10, monthPrecip));
      res['monthlyETa'].push(fixed(10, monthETa));
      res['monthlySoilMoistureL0'].push(fixed(10, model.avgSoilMoisture(0,1) * 100.0));
      res['monthlySoilMoistureL1'].push(fixed(10, model.avgSoilMoisture(1,2) * 100.0));
      res['monthlySoilMoistureL2'].push(fixed(10, model.avgSoilMoisture(2,3) * 100.0));
      res['monthlySoilMoistureL3'].push(fixed(10, model.avgSoilMoisture(3,4) * 100.0));
      res['monthlySoilMoistureL4'].push(fixed(10, model.avgSoilMoisture(4,5) * 100.0));
      res['monthlySoilMoistureL5'].push(fixed(10, model.avgSoilMoisture(5,6) * 100.0));
      res['monthlySoilMoistureL6'].push(fixed(10, model.avgSoilMoisture(6,7) * 100.0));
      res['monthlySoilMoistureL7'].push(fixed(10, model.avgSoilMoisture(7,8) * 100.0));
      res['monthlySoilMoistureL8'].push(fixed(10, model.avgSoilMoisture(8,9) * 100.0));
      res['monthlySoilMoistureL9'].push(fixed(10, model.avgSoilMoisture(9,10) * 100.0));
      res['monthlySoilMoistureL10'].push(fixed(10, model.avgSoilMoisture(10,11) * 100.0));
      res['monthlySoilMoistureL11'].push(fixed(10, model.avgSoilMoisture(11,12) * 100.0));
      res['monthlySoilMoistureL12'].push(fixed(10, model.avgSoilMoisture(12,13) * 100.0));
      res['monthlySoilMoistureL13'].push(fixed(10, model.avgSoilMoisture(13,14) * 100.0));
      res['monthlySoilMoistureL14'].push(fixed(10, model.avgSoilMoisture(14,15) * 100.0));
      res['monthlySoilMoistureL15'].push(fixed(10, model.avgSoilMoisture(15,16) * 100.0));
      res['monthlySoilMoistureL16'].push(fixed(10, model.avgSoilMoisture(16,17) * 100.0));
      res['monthlySoilMoistureL17'].push(fixed(10, model.avgSoilMoisture(17,18) * 100.0));
      res['monthlySoilMoistureL18'].push(fixed(10, model.avgSoilMoisture(18,19) * 100.0));

      avg10corg = avg30corg = watercontent = groundwater = nLeaching =  monthSurfaceRunoff = 0.0;
      monthPrecip = 0.0;
      monthETa = 0.0;

      dim = 0;
      console.log("stored monthly values for month: " + currentMonth);
    
    } else {

      avg10corg += model.avgCorg(0.1);
      avg30corg += model.avgCorg(0.3);
      watercontent += model.mean90cmWaterContent();
      groundwater += model.groundWaterRecharge();

      nLeaching += model.nLeaching();
      monthSurfaceRunoff += model.surfaceRunoff();
      monthPrecip += env.da.dataForTimestep(Climate.precip, d);
      monthETa += model.getETa();
    }

    // Yearly accumulated values
    if ((currentDate.getFullYear() != new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate() - 1).getFullYear()) && 
      (currentDate.getFullYear()!= env.da.startDate().getFullYear())) {
      res['yearlySumGroundWaterRecharge'].push(yearly_groundwater);
      res['yearlySumNLeaching'].push(yearly_nleaching);
      yearly_groundwater = 0.0;
      yearly_nleaching = 0.0;
    } else {
      yearly_groundwater += model.groundWaterRecharge();
      yearly_nleaching += model.nLeaching();
    }

    if (model.isCropPlanted())
      res['dev_stage'].push(model.cropGrowth().get_DevelopmentalStage()+1);
    else
      res['dev_stage'].push(0.0);

    // res.dates.push(currentDate.toMysqlString());

    if (write_output_files)
      writeGeneralResults(foutFileName, goutFileName, env, model, d);
  }

  console.log("returning from runMonica");

  return res;
};

/**
 * Write header line to fout Output file
 * @param fout File pointer to rmout.dat
 */
var initializeFoutHeader = function (foutFileName) {

  var outLayers = 20;
  var fout = "", endl = '\n';
  fout += "Datum     ";
  fout += "\tCrop";
  fout += "\tTraDef";
  fout += "\tTra";
  fout += "\tNDef";
  fout += "\tHeatRed";
  fout += "\tOxRed";

  fout += "\tStage";
  fout += "\tTempSum";
  fout += "\tVernF";
  fout += "\tDaylF";
  fout += "\tIncRoot";
  fout += "\tIncLeaf";
  fout += "\tIncShoot";
  fout += "\tIncFruit";

  fout += "\tRelDev";
  fout += "\tRoot";
  fout += "\tLeaf";
  fout += "\tShoot";
  fout += "\tFruit";
  fout += "\tYield";

  fout += "\tGroPhot";
  fout += "\tNetPhot";
  fout += "\tMaintR";
  fout += "\tGrowthR";
  fout += "\tStomRes";
  fout += "\tHeight";
  fout += "\tLAI";
  fout += "\tRootDep";
  fout += "\tAbBiom";

  fout += "\tNBiom";
  fout += "\tSumNUp";
  fout += "\tActNup";
  fout += "\tPotNup";
  fout += "\tTarget";

  fout += "\tCritN";
  fout += "\tAbBiomN";

  fout += "\tNPP";
  fout += "\tNPPRoot";
  fout += "\tNPPLeaf";
  fout += "\tNPPShoot";
  fout += "\tNPPFruit";

  fout += "\tGPP";
  fout += "\tRa";
  fout += "\tRaRoot";
  fout += "\tRaLeaf";
  fout += "\tRaShoot";
  fout += "\tRaFruit";

  for (var i_Layer = 0; i_Layer < outLayers; i_Layer++) {
    fout += "\tMois" + i_Layer;
  }
  fout += "\tPrecip";
  fout += "\tIrrig";
  fout += "\tInfilt";
  fout += "\tSurface";
  fout += "\tRunOff";
  fout += "\tSnowD";
  fout += "\tFrostD";
  fout += "\tThawD";
  for (var i_Layer = 0; i_Layer < outLayers; i_Layer++) {
    fout += "\tPASW-" + i_Layer;
  }
  fout += "\tSurfTemp";
  fout += "\tSTemp0";
  fout += "\tSTemp1";
  fout += "\tSTemp2";
  fout += "\tSTemp3";
  fout += "\tSTemp4";
  fout += "\tact_Ev";
  fout += "\tact_ET";
  fout += "\tET0";
  fout += "\tKc";
  fout += "\tatmCO2";
  fout += "\tGroundw";
  fout += "\tRecharge";
  fout += "\tNLeach";

  for(var i_Layer = 0; i_Layer < outLayers; i_Layer++) {
    fout += "\tNO3-" + i_Layer;
  }
  fout += "\tCarb";
  for(var i_Layer = 0; i_Layer < outLayers; i_Layer++) {
    fout += "\tNH4-" + i_Layer;
  }
  for(var i_Layer = 0; i_Layer < 4; i_Layer++) {
    fout += "\tNO2-" + i_Layer;
  }
  for(var i_Layer = 0; i_Layer < 6; i_Layer++) {
    fout += "\tSOC-" + i_Layer;
  }

  fout += "\tSOC-0-30";
  fout += "\tSOC-0-200";

  for(var i_Layer = 0; i_Layer < 1; i_Layer++) {
    fout += "\tAOMf-" + i_Layer;
  }
  for(var i_Layer = 0; i_Layer < 1; i_Layer++) {
    fout += "\tAOMs-" + i_Layer;
  }
  for(var i_Layer = 0; i_Layer < 1; i_Layer++) {
    fout += "\tSMBf-" + i_Layer;
  }
  for(var i_Layer = 0; i_Layer < 1; i_Layer++) {
    fout += "\tSMBs-" + i_Layer;
  }
  for(var i_Layer = 0; i_Layer < 1; i_Layer++) {
    fout += "\tSOMf-" + i_Layer;
  }
  for(var i_Layer = 0; i_Layer < 1; i_Layer++) {
    fout += "\tSOMs-" + i_Layer;
  }
  for(var i_Layer = 0; i_Layer < 1; i_Layer++) {
    fout += "\tCBal-" + i_Layer;
  }
  for(var i_Layer = 0; i_Layer < 3; i_Layer++) {
    fout += "\tNmin-" + i_Layer;
  }

  fout += "\tNetNmin";
  fout += "\tDenit";
  fout += "\tN2O";
  fout += "\tSoilpH";
  fout += "\tNEP";
  fout += "\tNEE";
  fout += "\tRh";


  fout += "\ttmin";
  fout += "\ttavg";
  fout += "\ttmax";
  fout += "\twind";
  fout += "\tglobrad";
  fout += "\trelhumid";
  fout += "\tsunhours";
  fout += endl;

  //**** Second header line ***
  fout += "TTMMYYY";  // Date
  fout += "\t[ ]";    // Crop name
  fout += "\t[0;1]";    // TranspirationDeficit
  fout += "\t[mm]";     // ActualTranspiration
  fout += "\t[0;1]";    // CropNRedux
  fout += "\t[0;1]";    // HeatStressRedux
  fout += "\t[0;1]";    // OxygenDeficit

  fout += "\t[ ]";      // DevelopmentalStage
  fout += "\t[°Cd]";    // CurrentTemperatureSum
  fout += "\t[0;1]";    // VernalisationFactor
  fout += "\t[0;1]";    // DaylengthFactor
  fout += "\t[kg/ha]";  // OrganGrowthIncrement root
  fout += "\t[kg/ha]";  // OrganGrowthIncrement leaf
  fout += "\t[kg/ha]";  // OrganGrowthIncrement shoot
  fout += "\t[kg/ha]";  // OrganGrowthIncrement fruit

  fout += "\t[0;1]";        // RelativeTotalDevelopment

  fout += "\t[kgDM/ha]";    // get_OrganBiomass(0)
  fout += "\t[kgDM/ha]";    // get_OrganBiomass(1)
  fout += "\t[kgDM/ha]";    // get_OrganBiomass(2)
  fout += "\t[kgDM/ha]";    // get_OrganBiomass(3)
  fout += "\t[kgDM/ha]";    // get_PrimaryCropYield(3)

  fout += "\t[kgCH2O/ha]";  // GrossPhotosynthesisHaRate
  fout += "\t[kgCH2O/ha]";  // NetPhotosynthesis
  fout += "\t[kgCH2O/ha]";  // MaintenanceRespirationAS
  fout += "\t[kgCH2O/ha]";  // GrowthRespirationAS
  fout += "\t[s/m]";        // StomataResistance
  fout += "\t[m]";          // CropHeight
  fout += "\t[m2/m2]";      // LeafAreaIndex
  fout += "\t[layer]";      // RootingDepth
  fout += "\t[kg/ha]";       // AbovegroundBiomass

  fout += "\t[kgN/ha]";     // TotalBiomassNContent
  fout += "\t[kgN/ha]";     // SumTotalNUptake
  fout += "\t[kgN/ha]";     // ActNUptake
  fout += "\t[kgN/ha]";     // PotNUptake
  fout += "\t[kgN/kg]";     // TargetNConcentration

  fout += "\t[kgN/kg]";     // CriticalNConcentration
  fout += "\t[kgN/kg]";     // AbovegroundBiomassNConcentration

  fout += "\t[kg C ha-1]";   // NPP
  fout += "\t[kg C ha-1]";   // NPP root
  fout += "\t[kg C ha-1]";   // NPP leaf
  fout += "\t[kg C ha-1]";   // NPP shoot
  fout += "\t[kg C ha-1]";   // NPP fruit

  fout += "\t[kg C ha-1]";   // GPP
  fout += "\t[kg C ha-1]";   // Ra
  fout += "\t[kg C ha-1]";   // Ra root
  fout += "\t[kg C ha-1]";   // Ra leaf
  fout += "\t[kg C ha-1]";   // Ra shoot
  fout += "\t[kg C ha-1]";   // Ra fruit


  for (var i_Layer = 0; i_Layer < outLayers; i_Layer++) {
    fout += "\t[m3/m3]"; // Soil moisture content
  }
  fout += "\t[mm]"; // Precipitation
  fout += "\t[mm]"; // Irrigation
  fout += "\t[mm]"; // Infiltration
  fout += "\t[mm]"; // Surface water storage
  fout += "\t[mm]"; // Surface water runoff
  fout += "\t[mm]"; // Snow depth
  fout += "\t[m]"; // Frost front depth in soil
  fout += "\t[m]"; // Thaw front depth in soil
  for(var i_Layer = 0; i_Layer < outLayers; i_Layer++) {
    fout += "\t[m3/m3]"; //PASW
  }

  fout += "\t[°C]"; //
  fout += "\t[°C]";
  fout += "\t[°C]";
  fout += "\t[°C]";
  fout += "\t[°C]";
  fout += "\t[°C]";
  fout += "\t[mm]";
  fout += "\t[mm]";
  fout += "\t[mm]";
  fout += "\t[ ]";
  fout += "\t[ppm]";
  fout += "\t[m]";
  fout += "\t[mm]";
  fout += "\t[kgN/ha]";

  // NO3
  for(var i_Layer = 0; i_Layer < outLayers; i_Layer++) {
    fout += "\t[kgN/m3]";
  }

  fout += "\t[kgN/m3]";  // Soil Carbamid

  // NH4
  for(var i_Layer = 0; i_Layer < outLayers; i_Layer++) {
    fout += "\t[kgN/m3]";
  }

  // NO2
  for(var i_Layer = 0; i_Layer < 4; i_Layer++) {
    fout += "\t[kgN/m3]";
  }

  // get_SoilOrganicC
  for(var i_Layer = 0; i_Layer < 6; i_Layer++) {
    fout += "\t[kgC/kg]";
  }

  fout += "\t[gC m-2]";   // SOC-0-30
  fout += "\t[gC m-2]";   // SOC-0-200

  // get_AOM_FastSum
  for(var i_Layer = 0; i_Layer < 1; i_Layer++) {
    fout += "\t[kgC/m3]";
  }
  // get_AOM_SlowSum
  for(var i_Layer = 0; i_Layer < 1; i_Layer++) {
    fout += "\t[kgC/m3]";
  }

  // get_SMB_Fast
  for(var i_Layer = 0; i_Layer < 1; i_Layer++) {
    fout += "\t[kgC/m3]";
  }
  // get_SMB_Slow
  for(var i_Layer = 0; i_Layer < 1; i_Layer++) {
    fout += "\t[kgC/m3]";
  }

  // get_SOM_Fast
  for(var i_Layer = 0; i_Layer < 1; i_Layer++) {
    fout += "\t[kgC/m3]";
  }
  // get_SOM_Slow
  for(var i_Layer = 0; i_Layer < 1; i_Layer++) {
    fout += "\t[kgC/m3]";
  }

  // get_CBalance
  for(var i_Layer = 0; i_Layer < 1; i_Layer++) {
    fout += "\t[kgC/m3]";
  }

  // NetNMineralisationRate
  for(var i_Layer = 0; i_Layer < 3; i_Layer++) {
    fout += "\t[kgN/ha]";
  }

  fout += "\t[kgN/ha]";  // NetNmin
  fout += "\t[kgN/ha]";  // Denit
  fout += "\t[kgN/ha]";  // N2O
  fout += "\t[ ]";       // SoilpH
  fout += "\t[kgC/ha]";  // NEP
  fout += "\t[kgC/ha]";  // NEE
  fout += "\t[kgC/ha]"; // Rh

  fout += "\t[°C]";     // tmin
  fout += "\t[°C]";     // tavg
  fout += "\t[°C]";     // tmax
  fout += "\t[m/s]";    // wind
  fout += "\tglobrad";  // globrad
  fout += "\t[m3/m3]";  // relhumid
  fout += "\t[h]";      // sunhours
  fout += endl;

  fs.writeFileSync(foutFileName, fout, { encoding: 'utf8' });

};

/**
 * Writes header line to gout-Outputfile
 * @param gout File pointer to smout.dat
 */
var initializeGoutHeader = function (goutFileName) {

  var gout = "", endl = '\n';
  gout += "Datum     ";
  gout += "\tCrop";
  gout += "\tStage";
  gout += "\tHeight";
  gout += "\tRoot";
  gout += "\tRoot10";
  gout += "\tLeaf";
  gout += "\tShoot";
  gout += "\tFruit";
  gout += "\tAbBiom";
  gout += "\tAbGBiom";
  gout += "\tYield";
  gout += "\tEarNo";
  gout += "\tGrainNo";

  gout += "\tLAI";
  gout += "\tAbBiomNc";
  gout += "\tYieldNc";
  gout += "\tAbBiomN";
  gout += "\tYieldN";

  gout += "\tTotNup";
  gout += "\tNGrain";
  gout += "\tProtein";


  gout += "\tBedGrad";
  gout += "\tM0-10";
  gout += "\tM10-20";
  gout += "\tM20-30";
  gout += "\tM30-40";
  gout += "\tM40-50";
  gout += "\tM50-60";
  gout += "\tM60-70";
  gout += "\tM70-80";
  gout += "\tM80-90";
  gout += "\tM0-30";
  gout += "\tM30-60";
  gout += "\tM60-90";
  gout += "\tM0-60";
  gout += "\tM0-90";
  gout += "\tPAW0-200";
  gout += "\tPAW0-130";
  gout += "\tPAW0-150";
  gout += "\tN0-30";
  gout += "\tN30-60";
  gout += "\tN60-90";
  gout += "\tN90-120";
  gout += "\tN0-60";
  gout += "\tN0-90";
  gout += "\tN0-200";
  gout += "\tN0-130";
  gout += "\tN0-150";
  gout += "\tNH430";
  gout += "\tNH460";
  gout += "\tNH490";
  gout += "\tCo0-10";
  gout += "\tCo0-30";
  gout += "\tT0-10";
  gout += "\tT20-30";
  gout += "\tT50-60";
  gout += "\tCO2";
  gout += "\tNH3";
  gout += "\tN2O";
  gout += "\tN2";
  gout += "\tNgas";
  gout += "\tNFert";
  gout += "\tIrrig";
  gout += endl;

  // **** Second header line ****

  gout += "TTMMYYYY";
  gout += "\t[ ]";
  gout += "\t[ ]";
  gout += "\t[m]";
  gout += "\t[kgDM/ha]";
  gout += "\t[kgDM/ha]";
  gout += "\t[kgDM/ha]";
  gout += "\t[kgDM/ha]";
  gout += "\t[kgDM/ha]";
  gout += "\t[kgDM/ha]";
  gout += "\t[kgDM/ha]";
  gout += "\t[kgDM/ha]";
  gout += "\t[ ]";
  gout += "\t[ ]";
  gout += "\t[m2/m2]";
  gout += "\t[kgN/kgDM";
  gout += "\t[kgN/kgDM]";
  gout += "\t[kgN/ha]";
  gout += "\t[kgN/ha]";
  gout += "\t[kgN/ha]";
  gout += "\t[-]";
  gout += "\t[kg/kgDM]";

  gout += "\t[0;1]";
  gout += "\t[m3/m3]";
  gout += "\t[m3/m3]";
  gout += "\t[m3/m3]";
  gout += "\t[m3/m3]";
  gout += "\t[m3/m3]";
  gout += "\t[m3/m3]";
  gout += "\t[m3/m3]";
  gout += "\t[m3/m3]";
  gout += "\t[m3/m3]";
  gout += "\t[m3/m3]";
  gout += "\t[m3/m3]";
  gout += "\t[m3/m3]";
  gout += "\t[m3/m3]";
  gout += "\t[m3/m3]";
  gout += "\t[mm]";
  gout += "\t[mm]";
  gout += "\t[mm]";
  gout += "\t[kgN/ha]";
  gout += "\t[kgN/ha]";
  gout += "\t[kgN/ha]";
  gout += "\t[kgN/ha]";
  gout += "\t[kgN/ha]";
  gout += "\t[kgN/ha]";
  gout += "\t[kgN/ha]";
  gout += "\t[kgN/ha]";
  gout += "\t[kgN/ha]";
  gout += "\t[kgN/ha]";
  gout += "\t[kgN/ha]";
  gout += "\t[kgN/ha]";
  gout += "\t[kgC/ha]";
  gout += "\t[kgC/ha]";
  gout += "\t[°C]";
  gout += "\t[°C]";
  gout += "\t[°C]";
  gout += "\t[kgC/ha]";
  gout += "\t[kgN/ha]";
  gout += "\t[-]";
  gout += "\t[-]";
  gout += "\t[-]";
  gout += "\t[kgN/ha]";
  gout += "\t[mm]";
  gout += endl;

  fs.writeFileSync(goutFileName, gout, { encoding: 'utf8' });

};

/**
 * Write crop results to file; if no crop is planted, fields are filled out with zeros;
 * @param mcg CropGrowth modul that contains information about crop
 * @param fout File pointer to rmout.dat
 * @param gout File pointer to smout.dat
 */
var writeCropResults = function (mcg, foutFileName, goutFileName, crop_is_planted) {

  var fout = '', gout = '', endl = '\n';

  if (crop_is_planted) {
    fout += "\t" + mcg.get_CropName();
    fout += "\t" + fixed(10, mcg.get_TranspirationDeficit());// [0;1]
    fout += "\t" + fixed(10, mcg.get_ActualTranspiration());
    fout += "\t" + fixed(10, mcg.get_CropNRedux());// [0;1]
    fout += "\t" + fixed(10, mcg.get_HeatStressRedux());// [0;1]
    fout += "\t" + fixed(10, mcg.get_OxygenDeficit());// [0;1]

    fout += "\t" + fixed(10, mcg.get_DevelopmentalStage() + 1);
    fout += "\t" + fixed(10, mcg.get_CurrentTemperatureSum());
    fout += "\t" + fixed(10, mcg.get_VernalisationFactor());
    fout += "\t" + fixed(10, mcg.get_DaylengthFactor());
    fout += "\t" + fixed(10, mcg.get_OrganGrowthIncrement(0));

    fout += "\t" + fixed(10, mcg.get_OrganGrowthIncrement(1));
    fout += "\t" + fixed(10, mcg.get_OrganGrowthIncrement(2));
    fout += "\t" + fixed(10, mcg.get_OrganGrowthIncrement(3));
    
    fout += "\t" + fixed(10, mcg.get_RelativeTotalDevelopment());
    fout += "\t" + fixed(10, mcg.get_OrganBiomass(0));
    fout += "\t" + fixed(10, mcg.get_OrganBiomass(1));
    fout += "\t" + fixed(10, mcg.get_OrganBiomass(2));
    fout += "\t" + fixed(10, mcg.get_OrganBiomass(3));
    fout += "\t" + fixed(10, mcg.get_PrimaryCropYield());

    fout += "\t" + fixed(10, mcg.get_GrossPhotosynthesisHaRate()); // [kg CH2O ha-1 d-1]
    fout += "\t" + fixed(10, mcg.get_NetPhotosynthesis());  // [kg CH2O ha-1 d-1]
    fout += "\t" + fixed(10, mcg.get_MaintenanceRespirationAS());// [kg CH2O ha-1]
    fout += "\t" + fixed(10, mcg.get_GrowthRespirationAS());// [kg CH2O ha-1]

    fout += "\t" + fixed(10, mcg.get_StomataResistance());// [s m-1]

    fout += "\t" + fixed(10, mcg.get_CropHeight());// [m]
    fout += "\t" + fixed(10, mcg.get_LeafAreaIndex()); //[m2 m-2]
    fout += "\t" + fixed(10, mcg.get_RootingDepth()); //[layer]
    fout += "\t" + fixed(10, mcg.get_AbovegroundBiomass()); //[kg ha-1]

    fout += "\t" + fixed(10, mcg.get_TotalBiomassNContent());
    fout += "\t" + fixed(10, mcg.get_SumTotalNUptake());
    fout += "\t" + fixed(10, mcg.get_ActNUptake()); // [kg N ha-1]
    fout += "\t" + fixed(10, mcg.get_PotNUptake()); // [kg N ha-1]
    fout += "\t" + fixed(10, mcg.get_TargetNConcentration());//[kg N kg-1]

    fout += "\t" + fixed(10, mcg.get_CriticalNConcentration());//[kg N kg-1]
    fout += "\t" + fixed(10, mcg.get_AbovegroundBiomassNConcentration());//[kg N kg-1]

    fout += "\t" + fixed(10, mcg.get_NetPrimaryProduction()); // NPP, [kg C ha-1]
    for (var i=0; i<mcg.get_NumberOfOrgans(); i++) {
        fout += "\t" + fixed(10, mcg.get_OrganSpecificNPP(i)); // NPP organs, [kg C ha-1]
    }
    // if there less than 4 organs we have to fill the column that
    // was added in the output header of rmout; in this header there
    // are statically 4 columns initialised for the organ NPP
    for (var i=mcg.get_NumberOfOrgans(); i<4; i++) {
        fout += "\t0.0"; // NPP organs, [kg C ha-1]
    }

    fout += "\t" + fixed(10, mcg.get_GrossPrimaryProduction()); // GPP, [kg C ha-1]

    fout += "\t" + fixed(10, mcg.get_AutotrophicRespiration()); // Ra, [kg C ha-1]
    for (var i=0; i<mcg.get_NumberOfOrgans(); i++) {
      fout += "\t" + fixed(10, mcg.get_OrganSpecificTotalRespired(i)); // Ra organs, [kg C ha-1]
    }
    // if there less than 4 organs we have to fill the column that
    // was added in the output header of rmout; in this header there
    // are statically 4 columns initialised for the organ RA
    for (var i=mcg.get_NumberOfOrgans(); i<4; i++) {
        fout += "\t0.0";
    }

    gout += "\t" + mcg.get_CropName();
    gout += "\t" + fixed(10, mcg.get_DevelopmentalStage() + 1);
    gout += "\t" + fixed(10, mcg.get_CropHeight());
    gout += "\t" + fixed(10, mcg.get_OrganBiomass(0));
    gout += "\t" + fixed(10, mcg.get_OrganBiomass(0)); //! @todo
    gout += "\t" + fixed(10, mcg.get_OrganBiomass(1));
    gout += "\t" + fixed(10, mcg.get_OrganBiomass(2));
    gout += "\t" + fixed(10, mcg.get_OrganBiomass(3));
    gout += "\t" + fixed(10, mcg.get_AbovegroundBiomass());
    gout += "\t" + fixed(10, mcg.get_AbovegroundBiomass()); //! @todo
    gout += "\t" + fixed(10, mcg.get_PrimaryCropYield());
    gout += "\t0"; //! @todo
    gout += "\t0"; //! @todo
    gout += "\t" + fixed(10, mcg.get_LeafAreaIndex());
    gout += "\t" + fixed(10, mcg.get_AbovegroundBiomassNConcentration());
    gout += "\t" + fixed(10, mcg.get_PrimaryYieldNConcentration());
    gout += "\t" + fixed(10, mcg.get_AbovegroundBiomassNContent());
    gout += "\t" + fixed(10, mcg.get_PrimaryYieldNContent());
    gout += "\t" + fixed(10, mcg.get_TotalBiomassNContent());
    gout += "\t0"; //! @todo
    gout += "\t" + fixed(10, mcg.get_RawProteinConcentration());

  } else { // crop is not planted

    fout += "\t"; // Crop Name
    fout += "\t1.00"; // TranspirationDeficit
    fout += "\t0.00"; // ActualTranspiration
    fout += "\t1.00"; // CropNRedux
    fout += "\t1.00"; // HeatStressRedux
    fout += "\t1.00"; // OxygenDeficit

    fout += "\t0";      // DevelopmentalStage
    fout += "\t0.0";    // CurrentTemperatureSum
    fout += "\t0.00";   // VernalisationFactor
    fout += "\t0.00";   // DaylengthFactor

    fout += "\t0.00";   // OrganGrowthIncrement root
    fout += "\t0.00";   // OrganGrowthIncrement leaf
    fout += "\t0.00";   // OrganGrowthIncrement shoot
    fout += "\t0.00";   // OrganGrowthIncrement fruit
    fout += "\t0.00";   // RelativeTotalDevelopment

    fout += "\t0.0";    // get_OrganBiomass(0)
    fout += "\t0.0";    // get_OrganBiomass(1)
    fout += "\t0.0";    // get_OrganBiomass(2)
    fout += "\t0.0";    // get_OrganBiomass(3)
    fout += "\t0.0";    // get_PrimaryCropYield(3)

    fout += "\t0.000";  // GrossPhotosynthesisHaRate
    fout += "\t0.00";   // NetPhotosynthesis
    fout += "\t0.000";  // MaintenanceRespirationAS
    fout += "\t0.000";  // GrowthRespirationAS
    fout += "\t0.00";   // StomataResistance
    fout += "\t0.00";   // CropHeight
    fout += "\t0.00";   // LeafAreaIndex
    fout += "\t0";      // RootingDepth
    fout += "\t0.0";    // AbovegroundBiomass

    fout += "\t0.0";    // TotalBiomassNContent
    fout += "\t0.00";   // SumTotalNUptake
    fout += "\t0.00";   // ActNUptake
    fout += "\t0.00";   // PotNUptake
    fout += "\t0.000";  // TargetNConcentration

    fout += "\t0.000";  // CriticalNConcentration
    fout += "\t0.000";  // AbovegroundBiomassNConcentration
    fout += "\t0.0"; // NetPrimaryProduction

    fout += "\t0.0"; // NPP root
    fout += "\t0.0"; // NPP leaf
    fout += "\t0.0"; // NPP shoot
    fout += "\t0.0"; // NPP fruit

    fout += "\t0.0"; // GrossPrimaryProduction
    fout += "\t0.0"; // Ra - VcRespiration
    fout += "\t0.0"; // Ra root - OrganSpecificTotalRespired
    fout += "\t0.0"; // Ra leaf - OrganSpecificTotalRespired
    fout += "\t0.0"; // Ra shoot - OrganSpecificTotalRespired
    fout += "\t0.0"; // Ra fruit - OrganSpecificTotalRespired

    gout += "\t";       // Crop Name
    gout += "\t0";      // DevelopmentalStage
    gout += "\t0.00";   // CropHeight
    gout += "\t0.0";    // OrganBiomass(0)
    gout += "\t0.0";    // OrganBiomass(0)
    gout += "\t0.0";    // OrganBiomass(1)

    gout += "\t0.0";    // OrganBiomass(2)
    gout += "\t0.0";    // OrganBiomass(3)
    gout += "\t0.0";    // AbovegroundBiomass
    gout += "\t0.0";    // AbovegroundBiomass
    gout += "\t0.0";    // PrimaryCropYield

    gout += "\t0";
    gout += "\t0";

    gout += "\t0.00";   // LeafAreaIndex
    gout += "\t0.000";  // AbovegroundBiomassNConcentration
    gout += "\t0.0";    // PrimaryYieldNConcentration
    gout += "\t0.00";   // AbovegroundBiomassNContent
    gout += "\t0.0";    // PrimaryYieldNContent

    gout += "\t0.0";    // TotalBiomassNContent
    gout += "\t0";
    gout += "\t0.00";   // RawProteinConcentration
  }

  fs.appendFileSync(goutFileName, gout, { encoding: 'utf8' });
  fs.appendFileSync(foutFileName, fout, { encoding: 'utf8' });

};


/**
 * Writing general results from MONICA simulation to output files
 * @param fout File pointer to rmout.dat
 * @param gout File pointer to smout.dat
 * @param env Environment object
 * @param monica MONICA model that contains pointer to all submodels
 * @param d Day of simulation
 */
var writeGeneralResults = function (foutFileName, goutFileName, env, monica, d) {

  var fout = '', gout = '', endl = '\n';
  var mst = monica.soilTemperature();
  var msm = monica.soilMoisture();
  var mso = monica.soilOrganic();
  var msc = monica.soilColumn();

  //! TODO: schmutziger work-around. Hier muss was eleganteres hin!
  var msa = monica.soilColumnNC();
  var msq = monica.soilTransport();

  var outLayers = 20;
  for (var i_Layer = 0; i_Layer < outLayers; i_Layer++)
    fout += "\t" + fixed(10, msm.get_SoilMoisture(i_Layer));

  fout += "\t" + fixed(10, env.da.dataForTimestep(Climate.precip, d));
  fout += "\t" + fixed(10, monica.dailySumIrrigationWater());
  fout += "\t" + fixed(10, msm.get_Infiltration()); // {mm]
  fout += "\t" + fixed(10, msm.get_SurfaceWaterStorage());// {mm]
  fout += "\t" + fixed(10, msm.get_SurfaceRunOff());// {mm]
  fout += "\t" + fixed(10, msm.get_SnowDepth()); // [mm]
  fout += "\t" + fixed(10, msm.get_FrostDepth());
  fout += "\t" + fixed(10, msm.get_ThawDepth());
  for(var i_Layer = 0; i_Layer < outLayers; i_Layer++)
    fout += "\t" + fixed(10, msm.get_SoilMoisture(i_Layer) - msa[i_Layer].get_PermanentWiltingPoint());

  fout += "\t" + fixed(10, mst.get_SoilSurfaceTemperature());

  for(var i_Layer = 0; i_Layer < 5; i_Layer++)
    fout += "\t" + fixed(10, mst.get_SoilTemperature(i_Layer));// [°C]

  fout += "\t" + fixed(10, msm.get_ActualEvaporation());// [mm]
  fout += "\t" + fixed(10, msm.get_Evapotranspiration());// [mm]
  fout += "\t" + fixed(10, msm.get_ET0());// [mm]
  fout += "\t" + fixed(10, msm.get_KcFactor());
  fout += "\t" + fixed(10, monica.get_AtmosphericCO2Concentration());// [ppm]
  fout += "\t" + fixed(10, monica.get_GroundwaterDepth());// [m]
  fout += "\t" + fixed(10, msm.get_GroundwaterRecharge());// [mm]
  fout += "\t" + fixed(10, msq.get_NLeaching()); // [kg N ha-1]


  for(var i_Layer = 0; i_Layer < outLayers; i_Layer++)
    fout += "\t" + fixed(10, msc.soilLayer(i_Layer).get_SoilNO3());// [kg N m-3]

  fout += "\t" + fixed(10, msc.soilLayer(0).get_SoilCarbamid());

  for(var i_Layer = 0; i_Layer < outLayers; i_Layer++)
    fout += "\t" + fixed(10, msc.soilLayer(i_Layer).get_SoilNH4());

  for(var i_Layer = 0; i_Layer < 4; i_Layer++)
    fout += "\t" + fixed(10, msc.soilLayer(i_Layer).get_SoilNO2());

  for(var i_Layer = 0; i_Layer < 6; i_Layer++)
    fout += "\t" + fixed(10, msc.soilLayer(i_Layer).vs_SoilOrganicCarbon()); // [kg C kg-1]

  // SOC-0-30 [g C m-2]
  var  soc_30_accumulator = 0.0;
  for (var i_Layer = 0; i_Layer < 3; i_Layer++) {
      // kg C / kg --> g C / m2
      soc_30_accumulator += msc.soilLayer(i_Layer).vs_SoilOrganicCarbon() * msc.soilLayer(i_Layer).vs_SoilBulkDensity() * msc.soilLayer(i_Layer).vs_LayerThickness * 1000;
  }
  fout += "\t" + fixed(10, soc_30_accumulator);


  // SOC-0-200   [g C m-2]
  var  soc_200_accumulator = 0.0;
  for (var i_Layer = 0; i_Layer < outLayers; i_Layer++) {
      // kg C / kg --> g C / m2
      soc_200_accumulator += msc.soilLayer(i_Layer).vs_SoilOrganicCarbon() * msc.soilLayer(i_Layer).vs_SoilBulkDensity() * msc.soilLayer(i_Layer).vs_LayerThickness * 1000;
  }
  fout += "\t" + fixed(10, soc_200_accumulator);

  for(var i_Layer = 0; i_Layer < 1; i_Layer++)
    fout += "\t" + fixed(10, mso.get_AOM_FastSum(i_Layer));

  for(var i_Layer = 0; i_Layer < 1; i_Layer++)
    fout += "\t" + fixed(10, mso.get_AOM_SlowSum(i_Layer));

  for(var i_Layer = 0; i_Layer < 1; i_Layer++)
    fout += "\t" + fixed(10, mso.get_SMB_Fast(i_Layer));

  for(var i_Layer = 0; i_Layer < 1; i_Layer++)
    fout += "\t" + fixed(10, mso.get_SMB_Slow(i_Layer));

  for(var i_Layer = 0; i_Layer < 1; i_Layer++)
    fout += "\t" + fixed(10, mso.get_SOM_Fast(i_Layer));

  for(var i_Layer = 0; i_Layer < 1; i_Layer++)
    fout += "\t" + fixed(10, mso.get_SOM_Slow(i_Layer));

  for(var i_Layer = 0; i_Layer < 1; i_Layer++)
    fout += "\t" + fixed(10, mso.get_CBalance(i_Layer));

  for(var i_Layer = 0; i_Layer < 3; i_Layer++)
    fout += "\t" + fixed(10, mso.get_NetNMineralisationRate(i_Layer)); // [kg N ha-1]


  fout += "\t" + fixed(10, mso.get_NetNMineralisation()); // [kg N ha-1]
  fout += "\t" + fixed(10, mso.get_Denitrification()); // [kg N ha-1]
  fout += "\t" + fixed(10, mso.get_N2O_Produced()); // [kg N ha-1]
  fout += "\t" + fixed(10, msc.soilLayer(0).get_SoilpH()); // [ ]
  fout += "\t" + fixed(10, mso.get_NetEcosystemProduction()); // [kg C ha-1]
  fout += "\t" + fixed(10, mso.get_NetEcosystemExchange()); // [kg C ha-1]
  fout += "\t" + fixed(10, mso.get_DecomposerRespiration()); // Rh, [kg C ha-1 d-1]


  fout += "\t" + fixed(10, env.da.dataForTimestep(Climate.tmin, d));
  fout += "\t" + fixed(10, env.da.dataForTimestep(Climate.tavg, d));
  fout += "\t" + fixed(10, env.da.dataForTimestep(Climate.tmax, d));
  fout += "\t" + fixed(10, env.da.dataForTimestep(Climate.wind, d));
  fout += "\t" + fixed(10, env.da.dataForTimestep(Climate.globrad, d));
  fout += "\t" + fixed(10, env.da.dataForTimestep(Climate.relhumid, d));
  fout += "\t" + fixed(10, env.da.dataForTimestep(Climate.sunhours, d));
  fout += endl;

  // smout
  gout += "\t" + fixed(10, msm.get_PercentageSoilCoverage());

  for(var i_Layer = 0; i_Layer < 9; i_Layer++) {
    gout += "\t" + fixed(10, msm.get_SoilMoisture(i_Layer)); // [m3 m-3]
  }

  gout += "\t" + fixed(10, (msm.get_SoilMoisture(0) + msm.get_SoilMoisture(1) + msm.get_SoilMoisture(2)) / 3.0); //[m3 m-3]
  gout += "\t" + fixed(10, (msm.get_SoilMoisture(3) + msm.get_SoilMoisture(4) + msm.get_SoilMoisture(5)) / 3.0); //[m3 m-3]
  gout += "\t" + fixed(10, (msm.get_SoilMoisture(6) + msm.get_SoilMoisture(7) + msm.get_SoilMoisture(8)) / 3.0); //[m3 m-3]

  var M0_60 = 0.0;
  for(var i_Layer = 0; i_Layer < 6; i_Layer++) {
    M0_60 += msm.get_SoilMoisture(i_Layer);
  }
  gout += "\t" + fixed(10, (M0_60 / 6.0)); // [m3 m-3]

  var M0_90 = 0.0;
  for(var i_Layer = 0; i_Layer < 9; i_Layer++) {
    M0_90 += msm.get_SoilMoisture(i_Layer);
  }
  gout += "\t" + fixed(10, (M0_90 / 9.0)); // [m3 m-3]

  var PAW0_200 = 0.0;
  for(var i_Layer = 0; i_Layer < 20; i_Layer++) {
      PAW0_200 += (msm.get_SoilMoisture(i_Layer) - msa[i_Layer].get_PermanentWiltingPoint()) ;
  }
  gout += "\t" + fixed(10, (PAW0_200 * 0.1 * 1000.0)); // [mm]

  var PAW0_130 = 0.0;
  for(var i_Layer = 0; i_Layer < 13; i_Layer++) {
      PAW0_130 += (msm.get_SoilMoisture(i_Layer) - msa[i_Layer].get_PermanentWiltingPoint()) ;
  }
  gout += "\t" + fixed(10, (PAW0_130 * 0.1 * 1000.0)); // [mm]

    var PAW0_150 = 0.0;
    for(var i_Layer = 0; i_Layer < 15; i_Layer++) {
            PAW0_150 += (msm.get_SoilMoisture(i_Layer) - msa[i_Layer].get_PermanentWiltingPoint()) ;
  }
    gout += "\t" + fixed(10, (PAW0_150 * 0.1 * 1000.0)); // [mm]

  gout += "\t" + fixed(10, (msc.soilLayer(0).get_SoilNmin() + msc.soilLayer(1).get_SoilNmin() + msc.soilLayer(2).get_SoilNmin()) / 3.0 * 0.3 * 10000); // [kg m-3] -> [kg ha-1]
  gout += "\t" + fixed(10, (msc.soilLayer(3).get_SoilNmin() + msc.soilLayer(4).get_SoilNmin() + msc.soilLayer(5).get_SoilNmin()) / 3.0 * 0.3 * 10000); // [kg m-3] -> [kg ha-1]
  gout += "\t" + fixed(10, (msc.soilLayer(6).get_SoilNmin() + msc.soilLayer(7).get_SoilNmin() + msc.soilLayer(8).get_SoilNmin()) / 3.0 * 0.3 * 10000); // [kg m-3] -> [kg ha-1]
  gout += "\t" + fixed(10, (msc.soilLayer(9).get_SoilNmin() + msc.soilLayer(10).get_SoilNmin() + msc.soilLayer(11).get_SoilNmin()) / 3.0 * 0.3 * 10000); // [kg m-3] -> [kg ha-1]

  var N0_60 = 0.0;
  for(var i_Layer = 0; i_Layer < 6; i_Layer++) {
    N0_60 += msc.soilLayer(i_Layer).get_SoilNmin();
  }
  gout += "\t" + fixed(10, (N0_60 * 0.1 * 10000));  // [kg m-3] -> [kg ha-1]

  var N0_90 = 0.0;
  for(var i_Layer = 0; i_Layer < 9; i_Layer++) {
    N0_90 += msc.soilLayer(i_Layer).get_SoilNmin();
  }
  gout += "\t" + fixed(10, (N0_90 * 0.1 * 10000));  // [kg m-3] -> [kg ha-1]

  var N0_200 = 0.0;
  for(var i_Layer = 0; i_Layer < 20; i_Layer++) {
    N0_200 += msc.soilLayer(i_Layer).get_SoilNmin();
  }
  gout += "\t" + fixed(10, (N0_200 * 0.1 * 10000));  // [kg m-3] -> [kg ha-1]

  var N0_130 = 0.0;
  for(var i_Layer = 0; i_Layer < 13; i_Layer++) {
    N0_130 += msc.soilLayer(i_Layer).get_SoilNmin();
  }
  gout += "\t" + fixed(10, (N0_130 * 0.1 * 10000));  // [kg m-3] -> [kg ha-1]

  var N0_150 = 0.0;
  for(var i_Layer = 0; i_Layer < 15; i_Layer++) {
    N0_150 += msc.soilLayer(i_Layer).get_SoilNmin();
  }
  gout += "\t" + fixed(10, (N0_150 * 0.1 * 10000));  // [kg m-3] -> [kg ha-1]

  gout += "\t" + fixed(10, (msc.soilLayer(0).get_SoilNH4() + msc.soilLayer(1).get_SoilNH4() + msc.soilLayer(2).get_SoilNH4()) / 3.0 * 0.3 * 10000); // [kg m-3] -> [kg ha-1]
  gout += "\t" + fixed(10, (msc.soilLayer(3).get_SoilNH4() + msc.soilLayer(4).get_SoilNH4() + msc.soilLayer(5).get_SoilNH4()) / 3.0 * 0.3 * 10000); // [kg m-3] -> [kg ha-1]
  gout += "\t" + fixed(10, (msc.soilLayer(6).get_SoilNH4() + msc.soilLayer(7).get_SoilNH4() + msc.soilLayer(8).get_SoilNH4()) / 3.0 * 0.3 * 10000); // [kg m-3] -> [kg ha-1]
  gout += "\t" + fixed(10, mso.get_SoilOrganicC(0) * 0.1 * 10000);// [kg m-3] -> [kg ha-1]
  gout += "\t" + fixed(10, ((mso.get_SoilOrganicC(0) + mso.get_SoilOrganicC(1) + mso.get_SoilOrganicC(2)) / 3.0 * 0.3 * 10000)); // [kg m-3] -> [kg ha-1]
  gout += "\t" + fixed(10, mst.get_SoilTemperature(0));
  gout += "\t" + fixed(10, mst.get_SoilTemperature(2));
  gout += "\t" + fixed(10, mst.get_SoilTemperature(5));
  gout += "\t" + fixed(10, mso.get_DecomposerRespiration()); // Rh, [kg C ha-1 d-1]

  gout += "\t" + fixed(10, mso.get_NH3_Volatilised()); // [kg N ha-1]
  gout += "\t0"; //! @todo
  gout += "\t0"; //! @todo
  gout += "\t0"; //! @todo
  gout += "\t" + fixed(10, monica.dailySumFertiliser());
  gout += "\t" + fixed(10, monica.dailySumIrrigationWater());
  gout += endl;

  fs.appendFileSync(goutFileName, gout, { encoding: 'utf8' });
  fs.appendFileSync(foutFileName, fout, { encoding: 'utf8' });

}

var dumpMonicaParametersIntoFile = function (fileName, cpp) {

  var parameter_output = '', endl = '\n';

  //double po_AtmosphericResistance; //0.0025 [s m-1], from Sadeghi et al. 1988

  // userSoilOrganicParameters
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_SOM_SlowDecCoeffStandard" + "\t" + cpp.userSoilOrganicParameters.po_SOM_SlowDecCoeffStandard + endl;
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_SOM_FastDecCoeffStandard" + "\t" + cpp.userSoilOrganicParameters.po_SOM_FastDecCoeffStandard + endl;
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_SMB_SlowMaintRateStandard" + "\t" + cpp.userSoilOrganicParameters.po_SMB_SlowMaintRateStandard + endl;
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_SMB_FastMaintRateStandard" + "\t" + cpp.userSoilOrganicParameters.po_SMB_FastMaintRateStandard + endl;
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_SMB_SlowDeathRateStandard" + "\t" + cpp.userSoilOrganicParameters.po_SMB_SlowDeathRateStandard + endl;

  parameter_output += "userSoilOrganicParameters" + "\t" + "po_SMB_FastDeathRateStandard" + "\t" + cpp.userSoilOrganicParameters.po_SMB_FastDeathRateStandard + endl;
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_SMB_UtilizationEfficiency" + "\t" + cpp.userSoilOrganicParameters.po_SMB_UtilizationEfficiency + endl;
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_SOM_SlowUtilizationEfficiency" + "\t" + cpp.userSoilOrganicParameters.po_SOM_SlowUtilizationEfficiency + endl;
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_SOM_FastUtilizationEfficiency" + "\t" + cpp.userSoilOrganicParameters.po_SOM_FastUtilizationEfficiency + endl;
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_AOM_SlowUtilizationEfficiency" + "\t" + cpp.userSoilOrganicParameters.po_AOM_SlowUtilizationEfficiency + endl;

  parameter_output += "userSoilOrganicParameters" + "\t" + "po_AOM_FastUtilizationEfficiency" + "\t" + cpp.userSoilOrganicParameters.po_AOM_FastUtilizationEfficiency + endl;
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_AOM_FastMaxC_to_N" + "\t" + cpp.userSoilOrganicParameters.po_AOM_FastMaxC_to_N + endl;
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_PartSOM_Fast_to_SOM_Slow" + "\t" + cpp.userSoilOrganicParameters.po_PartSOM_Fast_to_SOM_Slow + endl;
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_PartSMB_Slow_to_SOM_Fast" + "\t" + cpp.userSoilOrganicParameters.po_PartSMB_Slow_to_SOM_Fast + endl;
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_PartSMB_Fast_to_SOM_Fast" + "\t" + cpp.userSoilOrganicParameters.po_PartSMB_Fast_to_SOM_Fast + endl;

  parameter_output += "userSoilOrganicParameters" + "\t" + "po_PartSOM_to_SMB_Slow" + "\t" + cpp.userSoilOrganicParameters.po_PartSOM_to_SMB_Slow + endl;
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_PartSOM_to_SMB_Fast" + "\t" + cpp.userSoilOrganicParameters.po_PartSOM_to_SMB_Fast + endl;
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_CN_Ratio_SMB" + "\t" + cpp.userSoilOrganicParameters.po_CN_Ratio_SMB + endl;
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_LimitClayEffect" + "\t" + cpp.userSoilOrganicParameters.po_LimitClayEffect + endl;
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_AmmoniaOxidationRateCoeffStandard" + "\t" + cpp.userSoilOrganicParameters.po_AmmoniaOxidationRateCoeffStandard + endl;

  parameter_output += "userSoilOrganicParameters" + "\t" + "po_NitriteOxidationRateCoeffStandard" + "\t" + cpp.userSoilOrganicParameters.po_NitriteOxidationRateCoeffStandard + endl;
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_TransportRateCoeff" + "\t" + cpp.userSoilOrganicParameters.po_TransportRateCoeff + endl;
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_SpecAnaerobDenitrification" + "\t" + cpp.userSoilOrganicParameters.po_SpecAnaerobDenitrification + endl;
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_ImmobilisationRateCoeffNO3" + "\t" + cpp.userSoilOrganicParameters.po_ImmobilisationRateCoeffNO3 + endl;
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_ImmobilisationRateCoeffNH4" + "\t" + cpp.userSoilOrganicParameters.po_ImmobilisationRateCoeffNH4 + endl;

  parameter_output += "userSoilOrganicParameters" + "\t" + "po_Denit1" + "\t" + cpp.userSoilOrganicParameters.po_Denit1 + endl;
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_Denit2" + "\t" + cpp.userSoilOrganicParameters.po_Denit2 + endl;
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_Denit3" + "\t" + cpp.userSoilOrganicParameters.po_Denit3 + endl;
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_HydrolysisKM" + "\t" + cpp.userSoilOrganicParameters.po_HydrolysisKM + endl;
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_ActivationEnergy" + "\t" + cpp.userSoilOrganicParameters.po_ActivationEnergy + endl;

  parameter_output += "userSoilOrganicParameters" + "\t" + "po_HydrolysisP1" + "\t" + cpp.userSoilOrganicParameters.po_HydrolysisP1 + endl;
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_HydrolysisP2" + "\t" + cpp.userSoilOrganicParameters.po_HydrolysisP2 + endl;
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_AtmosphericResistance" + "\t" + cpp.userSoilOrganicParameters.po_AtmosphericResistance + endl;
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_N2OProductionRate" + "\t" + cpp.userSoilOrganicParameters.po_N2OProductionRate + endl;
  parameter_output += "userSoilOrganicParameters" + "\t" + "po_Inhibitor_NH3" + "\t" + cpp.userSoilOrganicParameters.po_Inhibitor_NH3 + endl;

  parameter_output += endl;

  fs.writeFileSync(fileName, parameter_output, { encoding: 'utf8' });

};





var SoilLayer = function (vs_LayerThickness, sps, cpp) {

  if (DEBUG) debug(arguments);

  var that = this;

  // JS! Contructor with 0 arguments. Only used in SoilTemperature (ground and bottom layer)
  if (arguments.length === 0) {

    this.vs_SoilSandContent = 0.90;
    this.vs_SoilClayContent = 0.05;
    this.vs_SoilStoneContent = 0;
    this.vs_SoilTexture = "Ss";
    this.vs_SoilpH = 7;
    this.vs_SoilMoistureOld_m3 = 0.25;
    this.vs_SoilWaterFlux = 0;
    this.vs_Lambda = 0.5;
    this.vs_FieldCapacity = 0.21;
    this.vs_Saturation = 0.43;
    this.vs_PermanentWiltingPoint = 0.08;
    this.vs_SOM_Slow = 0;
    this.vs_SOM_Fast = 0;
    this.vs_SMB_Slow = 0;
    this.vs_SMB_Fast = 0;
    this.vs_SoilCarbamid = 0;
    this.vs_SoilNH4 = 0.0001;
    this.vs_SoilNO2 = 0.001;
    this.vs_SoilNO3 = 0.001;
    this.vs_SoilFrozen = false;
    var _vs_SoilOrganicCarbon = -1.0;
    var _vs_SoilOrganicMatter = -1.0;
    var _vs_SoilBulkDensity = 0;
    var _vs_SoilMoisture_pF = -1;
    var vs_SoilMoisture_m3 = 0.25;
    var vs_SoilTemperature = 0;
    this.vo_AOM_Pool = [];

    // JV! initialized with default instead of real user values
    var centralParameterProvider = new CentralParameterProvider(); // JS!
    this.vs_SoilMoisture_m3 = this.vs_FieldCapacity * centralParameterProvider.userInitValues.p_initPercentageFC;
    this.vs_SoilMoistureOld_m3 = this.vs_FieldCapacity * centralParameterProvider.userInitValues.p_initPercentageFC;
    this.vs_SoilNO3 = centralParameterProvider.userInitValues.p_initSoilNitrate;
    this.vs_SoilNH4 = centralParameterProvider.userInitValues.p_initSoilAmmonium;

  } else {

    if (arguments.length !== 3 || !(arguments[2] instanceof CentralParameterProvider))
      throw arguments;

    this.vs_LayerThickness = vs_LayerThickness;
    this.vs_SoilSandContent = sps.vs_SoilSandContent;
    this.vs_SoilClayContent = sps.vs_SoilClayContent;
    this.vs_SoilStoneContent = sps.vs_SoilStoneContent;
    this.vs_SoilTexture = sps.vs_SoilTexture;
    this.vs_SoilpH = sps.vs_SoilpH;
    this.vs_SoilMoistureOld_m3 = 0.25; // QUESTION - Warum wird hier mit 0.25 initialisiert?
    this.vs_SoilWaterFlux = 0;
    this.vs_Lambda = sps.vs_Lambda;
    this.vs_FieldCapacity = sps.vs_FieldCapacity;
    this.vs_Saturation = sps.vs_Saturation;
    this.vs_PermanentWiltingPoint = sps.vs_PermanentWiltingPoint;
    this.vs_SOM_Slow = 0;
    this.vs_SOM_Fast = 0;
    this.vs_SMB_Slow = 0;
    this.vs_SMB_Fast = 0;
    this.vs_SoilCarbamid = 0;
    this.vs_SoilNH4 = 0.0001;
    this.vs_SoilNO2 = 0.001;
    this.vs_SoilNO3 = 0.005;
    this.vs_SoilFrozen = false;
    this.centralParameterProvider = cpp;
    var _vs_SoilOrganicCarbon = sps.vs_SoilOrganicCarbon();
    var _vs_SoilOrganicMatter = sps.vs_SoilOrganicMatter();
    var _vs_SoilBulkDensity = sps.vs_SoilBulkDensity();
    var _vs_SoilMoisture_pF = 0;
    var vs_SoilMoisture_m3 = 0.25; // QUESTION - Warum wird hier mit 0.25 initialisiert?
    var vs_SoilTemperature = 0;
    this.vo_AOM_Pool = [];

    if (!((_vs_SoilOrganicCarbon - (_vs_SoilOrganicMatter * organicConstants.po_SOM_to_C)) < 0.00001))
      throw "_vs_SoilOrganicCarbon - (_vs_SoilOrganicMatter * organicConstants.po_SOM_to_C)) < 0.00001)";

    vs_SoilMoisture_m3 = this.vs_FieldCapacity * cpp.userInitValues.p_initPercentageFC;
    this.vs_SoilMoistureOld_m3 = this.vs_FieldCapacity * cpp.userInitValues.p_initPercentageFC;

    if (sps.vs_SoilAmmonium < 0.0)
      this.vs_SoilNH4 = cpp.userInitValues.p_initSoilAmmonium;
    else
      this.vs_SoilNH4 = sps.vs_SoilAmmonium; // kg m-3

    if (sps.vs_SoilNitrate < 0.0)
      this.vs_SoilNO3 = cpp.userInitValues.p_initSoilNitrate;
    else
      this.vs_SoilNO3 = sps.vs_SoilNitrate;  // kg m-3

  }

  /**
   * @brief Returns value for soil organic carbon.
   *
   * If value for soil organic matter is not defined, because DB does not
   * contain the according value, than the store value for organic carbon
   * is returned. If the soil organic matter parameter is defined,
   * than the value for soil organic carbon is calculated depending on
   * the soil organic matter.
   *
   * @return Value for soil organic carbon
   */
  var vs_SoilOrganicCarbon = function () {
    // if soil organic carbon is not defined, than calculate from soil organic
    // matter value [kg C kg-1]
    if(_vs_SoilOrganicCarbon >= 0.0) {
      return _vs_SoilOrganicCarbon;
    }
    // calculate soil organic carbon with soil organic matter parameter
    return _vs_SoilOrganicMatter * organicConstants.po_SOM_to_C;
  };

  /**
   * @brief Returns value for soil organic matter.
   *
   * If the value for soil organic carbon is not defined, because the DB does
   * not contain any value, than the stored value for organic matter
   * is returned. If the soil organic carbon parameter is defined,
   * than the value for soil organic matter is calculated depending on
   * the soil organic carbon.
   *
   * @return Value for soil organic matter
   * */
  var vs_SoilOrganicMatter = function () {
    // if soil organic matter is not defined, calculate from soil organic C
    if(_vs_SoilOrganicMatter >= 0.0) {
      return _vs_SoilOrganicMatter;
    }

    // ansonsten berechne den Wert aus dem C-Gehalt
    return (_vs_SoilOrganicCarbon / organicConstants.po_SOM_to_C); //[kg C kg-1]
  };

  /**
   * @brief Returns fraction of silt content of the layer.
   *
   * Calculates the silt particle size fraction in the layer in dependence
   * of its sand and clay content.
   *
   * @return Fraction of silt in the layer.
   */
  var vs_SoilSiltContent = function () {
    return (1 - that.vs_SoilSandContent - that.vs_SoilClayContent);
  };

  /**
   * Soil layer's moisture content, expressed as logarithm of
   * pressure head in cm water column. Algorithm of Van Genuchten is used.
   * Conversion of water saturation into soil-moisture tension.
   *
   * @todo Einheiten prüfen
   */
  var calc_vs_SoilMoisture_pF = function () {
    /** Derivation of Van Genuchten parameters (Vereecken at al. 1989) */
    //TODO Einheiten prüfen
    var vs_ThetaR;
    var vs_ThetaS;

    if (that.vs_PermanentWiltingPoint > 0.0){
      vs_ThetaR = that.vs_PermanentWiltingPoint;
    } else {
      vs_ThetaR = get_PermanentWiltingPoint();
    }

    if (that.vs_Saturation > 0.0){
      vs_ThetaS = that.vs_Saturation;
    } else {
      vs_ThetaS = get_Saturation();
    }

    var vs_VanGenuchtenAlpha = exp(-2.486 + (2.5 * that.vs_SoilSandContent)
                                      - (35.1 * vs_SoilOrganicCarbon())
                                      - (2.617 * (vs_SoilBulkDensity() / 1000.0))
              - (2.3 * that.vs_SoilClayContent));

    var vs_VanGenuchtenM = 1.0;

    var vs_VanGenuchtenN = exp(0.053
                                  - (0.9 * that.vs_SoilSandContent)
                                  - (1.3 * that.vs_SoilClayContent)
          + (0.015 * (pow(that.vs_SoilSandContent, 2.0))));  // JS! 1.0 -> 0.015


    /** Van Genuchten retention curve */
    var vs_MatricHead;

    if(get_Vs_SoilMoisture_m3() <= vs_ThetaR) {
      vs_MatricHead = 5.0E+7;
      //else  d_MatricHead = (1.0 / vo_VanGenuchtenAlpha) * (pow(((1 / (pow(((d_SoilMoisture_m3 - d_ThetaR) /
       //                     (d_ThetaS - d_ThetaR)), (1 / vo_VanGenuchtenM)))) - 1), (1 / vo_VanGenuchtenN)));
    }   else {
      vs_MatricHead = (1.0 / vs_VanGenuchtenAlpha)
        * (pow(
            (
                (pow(
                      (
                        (vs_ThetaS - vs_ThetaR) / (get_Vs_SoilMoisture_m3() - vs_ThetaR)
                      ),
                      (
                         1 / vs_VanGenuchtenM
                      )
                    )
                )
                - 1
             ),
             (1 / vs_VanGenuchtenN)
             )
        );
    }

    _vs_SoilMoisture_pF = log10(vs_MatricHead);

    /* set _vs_SoilMoisture_pF to "small" number in case of vs_Theta "close" to vs_ThetaS (vs_Psi < 1 -> log(vs_Psi) < 0) */
    _vs_SoilMoisture_pF = (_vs_SoilMoisture_pF < 0.0) ? 5.0E-7 : _vs_SoilMoisture_pF; 

  };

  /**
   * Soil layer's water content at field capacity (1.8 < pF < 2.1) [m3 m-3]
   *
   * This method applies only in the case when soil charcteristics have not
   * been set before.
   *
   * In german: "Maximaler Wassergehalt, der gegen die Wirkung der
   * Schwerkraft zurückgehalten wird"
   *
   * @todo Einheiten prüfen
   */
  var get_FieldCapacity = function () {

    //***** Derivation of Van Genuchten parameters (Vereecken at al. 1989) *****
    if (that.vs_SoilTexture == "") {
  //    cout << "Field capacity is calculated from van Genuchten parameters" << endl;
      var vs_ThetaR;
      var vs_ThetaS;

      if (that.vs_PermanentWiltingPoint > 0.0){
        vs_ThetaR = that.vs_PermanentWiltingPoint;
      } else {
        vs_ThetaR = get_PermanentWiltingPoint();
      }

      if (that.vs_Saturation > 0.0){
        vs_ThetaS = that.vs_Saturation;
      } else {
        vs_ThetaS = get_Saturation();
      }

      var vs_VanGenuchtenAlpha = exp(-2.486
                + 2.5 * that.vs_SoilSandContent
                - 35.1 * vs_SoilOrganicCarbon()
                - 2.617 * (vs_SoilBulkDensity() / 1000.0)
                - 2.3 * that.vs_SoilClayContent);

      var vs_VanGenuchtenM = 1.0;

      var vs_VanGenuchtenN = exp(0.053
            - 0.9 * that.vs_SoilSandContent
            - 1.3 * that.vs_SoilClayContent
            + 0.015 * (pow(that.vs_SoilSandContent, 2.0))); // JS! 1.5 -> 0.015

      //***** Van Genuchten retention curve to calculate volumetric water content at
      //***** moisture equivalent (Field capacity definition KA5)

      var vs_FieldCapacity_pF = 2.1;
      if ((that.vs_SoilSandContent > 0.48) && (that.vs_SoilSandContent <= 0.9) && (that.vs_SoilClayContent <= 0.12))
        vs_FieldCapacity_pF = 2.1 - (0.476 * (that.vs_SoilSandContent - 0.48));
      else if ((that.vs_SoilSandContent > 0.9) && (that.vs_SoilClayContent <= 0.05))
        vs_FieldCapacity_pF = 1.9;
      else if (that.vs_SoilClayContent > 0.45)
        vs_FieldCapacity_pF = 2.5;
      else if ((that.vs_SoilClayContent > 0.30) && (that.vs_SoilSandContent < 0.2))
        vs_FieldCapacity_pF = 2.4;
      else if (that.vs_SoilClayContent > 0.35)
        vs_FieldCapacity_pF = 2.3;
      else if ((that.vs_SoilClayContent > 0.25) && (that.vs_SoilSandContent < 0.1))
        vs_FieldCapacity_pF = 2.3;
      else if ((that.vs_SoilClayContent > 0.17) && (that.vs_SoilSandContent > 0.68))
        vs_FieldCapacity_pF = 2.2;
      else if ((that.vs_SoilClayContent > 0.17) && (that.vs_SoilSandContent < 0.33))
        vs_FieldCapacity_pF = 2.2;
      else if ((that.vs_SoilClayContent > 0.08) && (that.vs_SoilSandContent < 0.27))
        vs_FieldCapacity_pF = 2.2;
      else if ((that.vs_SoilClayContent > 0.25) && (that.vs_SoilSandContent < 0.25))
        vs_FieldCapacity_pF = 2.2;

      var vs_MatricHead = pow(10, vs_FieldCapacity_pF);

      that.vs_FieldCapacity = vs_ThetaR + ((vs_ThetaS - vs_ThetaR) /
              (pow((1.0 + pow((vs_VanGenuchtenAlpha * vs_MatricHead),
              vs_VanGenuchtenN)), vs_VanGenuchtenM)));

      that.vs_FieldCapacity *= (1.0 - that.vs_SoilStoneContent);
    }

    return that.vs_FieldCapacity;

  };

  /**
   * Soil layer's water content at full saturation (pF=0.0) [m3 m-3].
   * Uses empiric calculation of Van Genuchten. *
   *
   * In german:  Wassergehalt bei maximaler Füllung des Poren-Raums
   *
   * @return Water content at full saturation
   */
  var get_Saturation = function () {
    
    if (that.vs_SoilTexture == "") {
      that.vs_Saturation = 0.81 - 0.283 * (vs_SoilBulkDensity() / 1000.0) + 0.1 * that.vs_SoilClayContent;

      that.vs_Saturation *= (1.0 - that.vs_SoilStoneContent);
    }
    return that.vs_Saturation;
  };

  /**
   * Soil layer's water content at permanent wilting point (pF=4.2) [m3 m-3].
   * Uses empiric calculation of Van Genuchten.
   *
   * In german: Wassergehalt des Bodens am permanenten Welkepunkt.
   *
   * @return Water content at permanent wilting point
   */
  var get_PermanentWiltingPoint = function () {

    if (that.vs_SoilTexture == "") {
  //    cout << "Permanent Wilting Point is calculated from van Genuchten parameters" << endl;
      that.vs_PermanentWiltingPoint = 0.015 + 0.5 * that.vs_SoilClayContent + 1.4 * that.vs_SoilOrganicCarbon();

      that.vs_PermanentWiltingPoint *= (1.0 - that.vs_SoilStoneContent);
    }

    return that.vs_PermanentWiltingPoint;
  };

  /**
   * Returns bulk density of soil layer [kg m-3]
   * @return bulk density of soil layer [kg m-3]
   */
  var vs_SoilBulkDensity = function () {
    return _vs_SoilBulkDensity;
  };

  var set_SoilOrganicMatter =  function (som) {
    _vs_SoilOrganicMatter = som;
  };

  /**
   * Sets value for soil organic carbon.
   * @param soc New value for soil organic carbon.
   */
  var set_SoilOrganicCarbon =  function (soc) {
    _vs_SoilOrganicCarbon = soc;
  };


  /**
   * Returns pH value of soil layer
   * @return pH value of soil layer [ ]
   */
  var get_SoilpH =  function () {
    return that.vs_SoilpH;
  };

  /**
   * Returns soil water pressure head as common logarithm pF.
   * @return soil water pressure head [pF]
   */
  var vs_SoilMoisture_pF =  function () {
    calc_vs_SoilMoisture_pF();
    return _vs_SoilMoisture_pF;
  };

  /**
   * Returns soil ammonium content.
   * @return soil ammonium content [kg N m-3]
   */
  var get_SoilNH4 = function () { return this.vs_SoilNH4; };

  /**
   * Returns soil nitrite content.
   * @return soil nitrite content [kg N m-3]
   */
  var get_SoilNO2 = function () { return this.vs_SoilNO2; };

  /**
   * Returns soil nitrate content.
   * @return soil nitrate content [kg N m-3]
   */
  var get_SoilNO3 = function () { return this.vs_SoilNO3; };

  /**
   * Returns soil carbamide content.
   * @return soil carbamide content [kg m-3]
   */
  var get_SoilCarbamid = function () { return this.vs_SoilCarbamid; };

  /**
   * Returns soil mineral N content.
   * @return soil mineral N content [kg m-3]
   */
  var get_SoilNmin = function () { return this.vs_SoilNO3 + this.vs_SoilNO2 + this.vs_SoilNH4; };
  var get_Vs_SoilMoisture_m3 = function () { return vs_SoilMoisture_m3; };
  var set_Vs_SoilMoisture_m3 = function (ms) { /*debug('set_Vs_SoilMoisture_m3', ms);*/ vs_SoilMoisture_m3 = ms; };
  var get_Vs_SoilTemperature = function () { return vs_SoilTemperature; };
  var set_Vs_SoilTemperature = function (st) { vs_SoilTemperature = st; };
  var vs_SoilOrganicCarbon = function () { return _vs_SoilOrganicCarbon; }; /**< Soil layer's organic carbon content [kg C kg-1] */
  var vs_SoilOrganicMatter = function () { return _vs_SoilOrganicMatter; }; /**< Soil layer's organic matter content [kg OM kg-1] */
  var vs_SoilSiltContent = function () { return this.vs_SoilSiltContent; }; /**< Soil layer's silt content [kg kg-1] (Schluff) */

  return {
    // anorganische Stickstoff-Formen
    calc_vs_SoilMoisture_pF: calc_vs_SoilMoisture_pF,
    centralParameterProvider: this.centralParameterProvider,
    get_FieldCapacity: get_FieldCapacity,
    get_PermanentWiltingPoint: get_PermanentWiltingPoint,
    get_Saturation: get_Saturation,
    get_SoilCarbamid: get_SoilCarbamid,
    get_SoilNH4: get_SoilNH4,
    get_SoilNmin: get_SoilNmin,
    get_SoilNO2: get_SoilNO2,
    get_SoilNO3: get_SoilNO3,
    get_SoilpH: get_SoilpH,
    get_Vs_SoilMoisture_m3: get_Vs_SoilMoisture_m3,
    get_Vs_SoilTemperature: get_Vs_SoilTemperature,
    set_SoilOrganicCarbon: set_SoilOrganicCarbon,
    set_SoilOrganicMatter: set_SoilOrganicMatter,
    set_Vs_SoilMoisture_m3: set_Vs_SoilMoisture_m3,
    set_Vs_SoilTemperature: set_Vs_SoilTemperature,
    vo_AOM_Pool: this.vo_AOM_Pool, /**< List of different added organic matter pools in soil layer */
    vs_FieldCapacity: this.vs_FieldCapacity,
    vs_Lambda: this.vs_Lambda, /**< Soil water conductivity coefficient [] */
    vs_LayerThickness: this.vs_LayerThickness, /**< Soil layer's vertical extension [m] */
    vs_PermanentWiltingPoint: this.vs_PermanentWiltingPoint,
    vs_Saturation: this.vs_Saturation,
    vs_SMB_Fast: this.vs_SMB_Fast, /**< C content of soil microbial biomass fast pool size [kg C m-3] */
    vs_SMB_Slow: this.vs_SMB_Slow, /**< C content of soil microbial biomass slow pool size [kg C m-3] */
    vs_SoilBulkDensity: vs_SoilBulkDensity,
    vs_SoilCarbamid: this.vs_SoilCarbamid, /**< Soil layer's carbamide-N content [kg Carbamide-N m-3] */
    vs_SoilClayContent: this.vs_SoilClayContent, /**< Soil layer's clay content [kg kg-1] (Ton) */
    vs_SoilFrozen: this.vs_SoilFrozen,
    vs_SoilMoisture_pF: vs_SoilMoisture_pF,
    vs_SoilMoistureOld_m3: this.vs_SoilMoistureOld_m3, /**< Soil layer's moisture content of previous day [m3 m-3] */
    vs_SoilNH4: this.vs_SoilNH4, /**< Soil layer's NH4-N content [kg NH4-N m-3] */
    vs_SoilNO2: this.vs_SoilNO2, /**< Soil layer's NO2-N content [kg NO2-N m-3] */
    vs_SoilNO3: this.vs_SoilNO3, /**< Soil layer's NO3-N content [kg NO3-N m-3] */
    vs_SoilOrganicCarbon: vs_SoilOrganicCarbon,
    vs_SoilOrganicMatter: vs_SoilOrganicMatter,
    vs_SoilpH: this.vs_SoilpH, /**< Soil pH value [] */
    vs_SoilSandContent: this.vs_SoilSandContent, /**< Soil layer's sand content [kg kg-1] */
    vs_SoilSiltContent: vs_SoilSiltContent,
    vs_SoilStoneContent: this.vs_SoilStoneContent, /**< Soil layer's stone content in soil [kg kg-1] */
    vs_SoilTexture: this.vs_SoilTexture,
    vs_SoilWaterFlux: this.vs_SoilWaterFlux, /**< Water flux at the upper boundary of the soil layer [l m-2] */
    vs_SOM_Fast: this.vs_SOM_Fast, /**< C content of soil organic matter fast pool size [kg C m-3] */
    vs_SOM_Slow: this.vs_SOM_Slow /**< C content of soil organic matter slow pool [kg C m-3] */
  };

};



var SoilColumn = function (gps, sp, cpp) {

  // private properties
  var that = this;
  this.generalParams = gps;
  this.soilParams = sp;
  this.centralParameterProvider = cpp;
  this.cropGrowth = null;
  this._delayedNMinApplications = []; 
  this._vf_TopDressing = 0.0;
  this._vf_TopDressingDelay = 0;
  this._vs_NumberOfOrganicLayers = 0;


  var soilColumnArray = [];
  // public properties and methods
  soilColumnArray.vs_SurfaceWaterStorage = 0.0;
  soilColumnArray.vs_InterceptionStorage = 0.0;
  soilColumnArray.vm_GroundwaterTable = 0;
  soilColumnArray.vs_FluxAtLowerBoundary = 0.0;
  soilColumnArray.vq_CropNUptake = 0.0;
  soilColumnArray.vs_SoilLayers = [];

  console.log("Constructor: SoilColumn "  + sp.length);

  for (var i = 0; i < this.soilParams.length; i++) {
    var layer = new SoilLayer(gps.ps_LayerThickness[0], sp[i], cpp);
    soilColumnArray.vs_SoilLayers.push(layer);
    soilColumnArray[i] = layer;
  }

  soilColumnArray.applyMineralFertiliser = function (fp, amount) {

    // C++
    // [kg N ha-1 -> kg m-3]
    // soilLayer(0).vs_SoilNO3 += amount * fp.getNO3() / 10000.0 / soilLayer(0).vs_LayerThickness;
    // soilLayer(0).vs_SoilNH4 += amount * fp.getNH4() / 10000.0 / soilLayer(0).vs_LayerThickness;
    // soilLayer(0).vs_SoilCarbamid += amount * fp.getCarbamid() / 10000.0 / soilLayer(0).vs_LayerThickness;

    // JS
    // [kg N ha-1 -> kg m-3]
    this[0].vs_SoilNO3 += amount * fp.getNO3() / 10000.0 / this[0].vs_LayerThickness;
    this[0].vs_SoilNH4 += amount * fp.getNH4() / 10000.0 / this[0].vs_LayerThickness;
    this[0].vs_SoilCarbamid += amount * fp.getCarbamid() / 10000.0 / this[0].vs_LayerThickness;

    if (this[0].vs_SoilNH4 < 0)
      throw this[0].vs_SoilNH4;
  };

  // prüft ob top-dressing angewendet werden sollte, ansonsten wird
  // zeitspanne nur reduziert

  /**
   * Tests for every calculation step if a delayed fertilising should be applied.
   * If not, the delay time will be decremented. Otherwise the surplus fertiliser
   * stored in _vf_TopDressing is applied.
   *
   * @see ApplyFertiliser
   */
  soilColumnArray.applyPossibleTopDressing = function () {
    // do nothing if there is no active delay time
    if (that._vf_TopDressingDelay > 0) {
      // if there is a delay time, decrement this value for this time step
      that._vf_TopDressingDelay--;
      // test if now is the correct time for applying top dressing
      if (that._vf_TopDressingDelay == 0) {
        var amount = that._vf_TopDressing;
        this.applyMineralFertiliser(that._vf_TopDressingPartition, amount);
        that._vf_TopDressing = 0;
        return amount;
      }
    }
    return 0.0;
  };


  /**
   * Calls function for applying delayed fertilizer and
   * then removes the first fertilizer item in list.
   */
  soilColumnArray.applyPossibleDelayedFerilizer = function () {
    var delayedApps = that._delayedNMinApplications;
    var n_amount = 0.0;
    while(!delayedApps.length === 0) {
      n_amount += delayedApps[0].func.apply(this, delayedApps[0].args);
      delayedApps.shift();
      // JS: delayedApps === _delayedNMinApplications
      if (DEBUG && delayedApps != _delayedNMinApplications)
        throw delayedApps;
      // _delayedNMinApplications.shift();
    }
    return n_amount;
  };


  /**
   * Method for calculating fertilizer demand from crop demand and soil mineral
   * status (Nmin method).
   *
   * @param fp
   * @param vf_SamplingDepth
   * @param vf_CropNTarget N availability required by the crop down to rooting depth
   * @param vf_CropNTarget30 N availability required by the crop down to 30 cm
   * @param vf_FertiliserMaxApplication Maximal value of N that can be applied until the crop will be damaged
   * @param vf_FertiliserMinApplication Threshold value for economically reasonable fertilizer application
   * @param vf_TopDressingDelay Number of days for which the application of surplus fertilizer is delayed
   */
  soilColumnArray.applyMineralFertiliserViaNMinMethod = function (
    fp,
    vf_SamplingDepth,
    vf_CropNTarget,
    vf_CropNTarget30,
    vf_FertiliserMinApplication,
    vf_FertiliserMaxApplication,
    vf_TopDressingDelay 
  ) {

    // JS: soilLayer(x) === this[x]

    // Wassergehalt > Feldkapazität
    if(this[0].get_Vs_SoilMoisture_m3() > this[0].get_FieldCapacity()) {
      that._delayedNMinApplications.push({
        func: this.applyMineralFertiliserViaNMinMethod,
        args: [fp, vf_SamplingDepth, vf_CropNTarget, vf_CropNTarget30, vf_FertiliserMinApplication, vf_FertiliserMaxApplication, vf_TopDressingDelay]
      });
      console.log("Error: Soil too wet for fertilisation. Fertiliser event adjourned to next day.");
      return 0.0;
    }

    var vf_SoilNO3Sum = 0.0;
    var vf_SoilNO3Sum30 = 0.0;
    var vf_SoilNH4Sum = 0.0;
    var vf_SoilNH4Sum30 = 0.0;
    var vf_Layer30cm = this.getLayerNumberForDepth(0.3);

    // JS
    var i_Layers = ceil(vf_SamplingDepth / this[i_Layer].vs_LayerThickness);
    for (var i_Layer = 0; i_Layer < i_Layers; i_Layer++) {
      //vf_TargetLayer is in cm. We want number of layers
      vf_SoilNO3Sum += this[i_Layer].vs_SoilNO3; //! [kg N m-3]
      vf_SoilNH4Sum += this[i_Layer].vs_SoilNH4; //! [kg N m-3]
    }

    // Same calculation for a depth of 30 cm
    /** @todo Must be adapted when using variable layer depth. */
    for(var i_Layer = 0; i_Layer < vf_Layer30cm; i_Layer++) {
      vf_SoilNO3Sum30 += this[i_Layer].vs_SoilNO3; //! [kg N m-3]
      vf_SoilNH4Sum30 += this[i_Layer].vs_SoilNH4; //! [kg N m-3]
    }

    // Converts [kg N ha-1] to [kg N m-3]
    var vf_CropNTargetValue = vf_CropNTarget / 10000.0 / this[0].vs_LayerThickness;

    // Converts [kg N ha-1] to [kg N m-3]
    var vf_CropNTargetValue30 = vf_CropNTarget30 / 10000.0 / this[0].vs_LayerThickness;

    var vf_FertiliserDemandVol = vf_CropNTargetValue - (vf_SoilNO3Sum + vf_SoilNH4Sum);
    var vf_FertiliserDemandVol30 = vf_CropNTargetValue30 - (vf_SoilNO3Sum30 + vf_SoilNH4Sum30);

    // Converts fertiliser demand back from [kg N m-3] to [kg N ha-1]
    var vf_FertiliserDemand = vf_FertiliserDemandVol * 10000.0 * this[0].vs_LayerThickness;
    var vf_FertiliserDemand30 = vf_FertiliserDemandVol30 * 10000.0 * this[0].vs_LayerThickness;

    var vf_FertiliserRecommendation = max(vf_FertiliserDemand, vf_FertiliserDemand30);

    if (vf_FertiliserRecommendation < vf_FertiliserMinApplication) {
      // If the N demand of the crop is smaller than the user defined
      // minimum fertilisation then no need to fertilise
      vf_FertiliserRecommendation = 0.0;
      console.log("Error: Fertiliser demand below minimum application value. No fertiliser applied.");
    }

    if( vf_FertiliserRecommendation > vf_FertiliserMaxApplication) {
      // If the N demand of the crop is greater than the user defined
      // maximum fertilisation then need to split so surplus fertilizer can
      // be applied after a delay time
      that._vf_TopDressing = vf_FertiliserRecommendation - vf_FertiliserMaxApplication;
      that._vf_TopDressingPartition = fp;
      that._vf_TopDressingDelay = vf_TopDressingDelay;
      vf_FertiliserRecommendation = vf_FertiliserMaxApplication;
      console.log(
        "Error: Fertiliser demand above maximum application value. " +
        "A top dressing of " + _vf_TopDressing + " " + 
        "will be applied from now on day" + vf_TopDressingDelay + "."
       );
    }

    //Apply fertiliser
    this.applyMineralFertiliser(fp, vf_FertiliserRecommendation);

    console.log("SoilColumn::applyMineralFertiliserViaNMinMethod:\t" + vf_FertiliserRecommendation);

    //apply the callback to all of the fertiliser, even though some if it
    //(the top-dressing) will only be applied later
    //we simply assume it really will be applied, in the worst case
    //the delay is so long, that the crop is already harvested until
    //the top-dressing will be applied
     return vf_FertiliserRecommendation;// + _vf_TopDressing);
  };

  /**
   * Method for calculating irrigation demand from soil moisture status.
   * The trigger will be activated and deactivated according to crop parameters
   * (temperature sum)
   *
   * @param vi_IrrigationThreshold
   * @return could irrigation be applied
   */
  soilColumnArray.soilColumnArrayapplyIrrigationViaTrigger = function (
    vi_IrrigationThreshold,
    vi_IrrigationAmount,
    vi_IrrigationNConcentration
  ) {

    // JS: soilLayer(x) === this[x]


    //is actually only called from cropStep and thus there should always
    //be a crop
    if (that.cropGrowth === null)
      console.log("Error: crop is null");

    var s = that.cropGrowth.get_HeatSumIrrigationStart();
    var e = that.cropGrowth.get_HeatSumIrrigationEnd();
    var cts = that.cropGrowth.get_CurrentTemperatureSum();

    if (cts < s || cts > e) return false;

    var vi_CriticalMoistureDepth = that.centralParameterProvider.userSoilMoistureParameters.pm_CriticalMoistureDepth;

    // Initialisation
    var vi_ActualPlantAvailableWater = 0.0;
    var vi_MaxPlantAvailableWater = 0.0;
    var vi_PlantAvailableWaterFraction = 0.0;
    var vi_CriticalMoistureLayer = int(ceil(vi_CriticalMoistureDepth / that[0].vs_LayerThickness));

    for (var i_Layer = 0; i_Layer < vi_CriticalMoistureLayer; i_Layer++){
      vi_ActualPlantAvailableWater += (this[i_Layer].get_Vs_SoilMoisture_m3()
                                   - this[i_Layer].get_PermanentWiltingPoint())
                                   * this.vs_LayerThickness() * 1000.0; // [mm]
      vi_MaxPlantAvailableWater += (this[i_Layer].get_FieldCapacity()
                                   - this[i_Layer].get_PermanentWiltingPoint())
                                   * this.vs_LayerThickness() * 1000.0; // [mm]
      vi_PlantAvailableWaterFraction = vi_ActualPlantAvailableWater
                                         / vi_MaxPlantAvailableWater; // []
    }
    if (vi_PlantAvailableWaterFraction <= vi_IrrigationThreshold) {
      this.applyIrrigation(vi_IrrigationAmount, vi_IrrigationNConcentration);

      console.log(
        "applying automatic irrigation treshold: " + vi_IrrigationThreshold +
        " amount: " + vi_IrrigationAmount +
        " N concentration: " + vi_IrrigationNConcentration
      );

      return true;
    }

    return false;
  };

  /**
   * @brief Applies irrigation
   *
   * @author: Claas Nendel
   */
  soilColumnArray.applyIrrigation = function (vi_IrrigationAmount, vi_IrrigationNConcentration) {

    // JS: soilLayer(x) === this[x]

    var vi_NAddedViaIrrigation = 0.0; //[kg m-3]

    // Adding irrigation water amount to surface water storage
    this.vs_SurfaceWaterStorage += vi_IrrigationAmount; // [mm]

    vi_NAddedViaIrrigation = vi_IrrigationNConcentration * // [mg dm-3]
             vi_IrrigationAmount / //[dm3 m-2]
             this[0].vs_LayerThickness / 1000000.0; // [m]
             // [-> kg m-3]

    // Adding N from irrigation water to top soil nitrate pool
    this[0].vs_SoilNO3 += vi_NAddedViaIrrigation;
  };

  /**
   * @brief Checks and deletes AOM pool
   *
   * This method checks the content of each AOM Pool. In case the sum over all
   * layers of a respective pool is very low the pool will be deleted from the
   * list.
   *
   * @author: Claas Nendel
   */
  soilColumnArray.deleteAOMPool = function () {

    // JS: soilLayer(x) === this[x]

    for (var i_AOMPool = 0; i_AOMPool < this[0].vo_AOM_Pool.length;){

      var vo_SumAOM_Slow = 0.0;
      var vo_SumAOM_Fast = 0.0;

      for (var i_Layer = 0; i_Layer < that._vs_NumberOfOrganicLayers; i_Layer++) {
        vo_SumAOM_Slow += this[i_Layer].vo_AOM_Pool[i_AOMPool].vo_AOM_Slow;
        vo_SumAOM_Fast += this[i_Layer].vo_AOM_Pool[i_AOMPool].vo_AOM_Fast;
      }

      //cout << "Pool " << i_AOMPool << " -> Slow: " << vo_SumAOM_Slow << "; Fast: " << vo_SumAOM_Fast << endl;

      if ((vo_SumAOM_Slow + vo_SumAOM_Fast) < 0.00001) {
        for (var i_Layer = 0; i_Layer < that._vs_NumberOfOrganicLayers; i_Layer++){
          var it_AOMPool = 0; // TODO: Korrekt in JS? Konstruktion nicht klar
          it_AOMPool += i_AOMPool;
          this[i_Layer].vo_AOM_Pool.splice(it_AOMPool, 1);
        }
        //cout << "Habe Pool " << i_AOMPool << " gelöscht" << endl;
      } else {
        i_AOMPool++;
      }
    }

  };

  soilColumnArray.vs_NumberOfLayers = function () {
    return this.length;
  };

  /**
   * Applies tillage to effected layers. Parameters for effected soil layers
   * are averaged.
   * @param depth Depth of affected soil.
   */
  soilColumnArray.applyTillage = function (depth) {

    // JS: soilLayer(x) === this[x]

    var layer_index = this.getLayerNumberForDepth(depth) + 1;

    var soil_organic_carbon = 0.0;
    var soil_organic_matter = 0.0;
    var soil_temperature = 0.0;
    var soil_moisture = 0.0;
    var soil_moistureOld = 0.0;
    var som_slow = 0.0;
    var som_fast = 0.0;
    var smb_slow = 0.0;
    var smb_fast = 0.0;
    var carbamid = 0.0;
    var nh4 = 0.0;
    var no2 = 0.0;
    var no3 = 0.0;

    // add up all parameters that are affected by tillage
    for (var i = 0; i < layer_index; i++) {
      // debug('SoilColumn::applyTillage layer i:', i);
      soil_organic_carbon += this[i].vs_SoilOrganicCarbon();
      soil_organic_matter += this[i].vs_SoilOrganicMatter();
      soil_temperature += this[i].get_Vs_SoilTemperature();
      soil_moisture += this[i].get_Vs_SoilMoisture_m3();
      soil_moistureOld += this[i].vs_SoilMoistureOld_m3;
      som_slow += this[i].vs_SOM_Slow;
      som_fast += this[i].vs_SOM_Fast;
      smb_slow += this[i].vs_SMB_Slow;
      smb_fast += this[i].vs_SMB_Fast;
      carbamid += this[i].vs_SoilCarbamid;
      nh4 += this[i].vs_SoilNH4;
      no2 += this[i].vs_SoilNO2;
      no3 += this[i].vs_SoilNO3;
    }

    if (this[0].vs_SoilNH4 < 0)
      throw this[0].vs_SoilNH4;
    if (this[0].vs_SoilNO2 < 0)
      throw this[0].vs_SoilNO2;
    if (this[0].vs_SoilNO3 < 0)
      throw this[0].vs_SoilNO3;

    // calculate mean value of accumulated soil paramters
    soil_organic_carbon = soil_organic_carbon / layer_index;
    soil_organic_matter = soil_organic_matter / layer_index;
    soil_temperature = soil_temperature / layer_index;
    soil_moisture = soil_moisture / layer_index;
    soil_moistureOld = soil_moistureOld / layer_index;
    som_slow = som_slow / layer_index;
    som_fast = som_fast / layer_index;
    smb_slow = smb_slow / layer_index;
    smb_fast = smb_fast / layer_index;
    carbamid = carbamid / layer_index;
    nh4 = nh4 / layer_index;
    no2 = no2 / layer_index;
    no3 = no3 / layer_index;

    // debug('SoilColumn::layer_index', layer_index);

    // use calculated mean values for all affected layers
    for (var i = 0; i < layer_index; i++) {

      //assert((soil_organic_carbon - (soil_organic_matter * organicConstants.po_SOM_to_C)) < 0.00001);
      this[i].set_SoilOrganicCarbon(soil_organic_carbon);
      this[i].set_SoilOrganicMatter(soil_organic_matter);
      this[i].set_Vs_SoilTemperature(soil_temperature);
      // debug('call: SoilColumn::this[i].set_Vs_SoilMoisture_m3(soil_moisture) i=' + i);
      this[i].set_Vs_SoilMoisture_m3(soil_moisture);
      this[i].vs_SoilMoistureOld_m3 = soil_moistureOld;
      this[i].vs_SOM_Slow = som_slow;
      this[i].vs_SOM_Fast = som_fast;
      this[i].vs_SMB_Slow = smb_slow;
      this[i].vs_SMB_Fast = smb_fast;
      this[i].vs_SoilCarbamid = carbamid;
      this[i].vs_SoilNH4 = nh4;
      this[i].vs_SoilNO2 = no2;
      this[i].vs_SoilNO3 = no3;
      
      if (this[i].vs_SoilNH4 < 0)
        throw this[i].vs_SoilNH4;
      if (this[i].vs_SoilNO2 < 0)
        throw this[i].vs_SoilNO2;
      if (this[i].vs_SoilNO3 < 0)
        throw this[i].vs_SoilNO3;

    }

    // merge aom pool
    var aom_pool_count = this[0].vo_AOM_Pool.length;

    if (aom_pool_count > 0) {
      var aom_slow = new Array(aom_pool_count);
      var aom_fast = new Array(aom_pool_count);

      // initialization of aom pool accumulator
      for (var pool_index = 0; pool_index < aom_pool_count; pool_index++) {
        aom_slow[pool_index] = 0.0;
        aom_fast[pool_index] = 0.0;
      }

      layer_index = min(layer_index, this.vs_NumberOfOrganicLayers());

      //cout << "Soil parameters before applying tillage for the first "<< layer_index+1 << " layers: " << endl;

      // add up pools for affected layer with same index
      for (var j = 0; j < layer_index; j++) {
        //cout << "Layer " << j << endl << endl;

        var layer = this[j];
        var pool_index = 0;
        layer.vo_AOM_Pool.forEach(function (it_AOM_Pool) {

          aom_slow[pool_index] += it_AOM_Pool.vo_AOM_Slow;
          aom_fast[pool_index] += it_AOM_Pool.vo_AOM_Fast;

          //cout << "AOMPool " << pool_index << endl;
          //cout << "vo_AOM_Slow:\t"<< it_AOM_Pool.vo_AOM_Slow << endl;
          //cout << "vo_AOM_Fast:\t"<< it_AOM_Pool.vo_AOM_Fast << endl;

          pool_index++;
        });
      }

      //
      for (var pool_index = 0; pool_index < aom_pool_count; pool_index++) {
        aom_slow[pool_index] = aom_slow[pool_index] / (layer_index);
        aom_fast[pool_index] = aom_fast[pool_index] / (layer_index);
      }

      //cout << "Soil parameters after applying tillage for the first "<< layer_index+1 << " layers: " << endl;

      // rewrite parameters of aom pool with mean values
      for (var j = 0; j < layer_index; j++) {
        layer = this[j];
        //cout << "Layer " << j << endl << endl;
        var pool_index = 0;
        layer.vo_AOM_Pool.forEach(function (it_AOM_Pool) {

          it_AOM_Pool.vo_AOM_Slow = aom_slow[pool_index];
          it_AOM_Pool.vo_AOM_Fast = aom_fast[pool_index];

          //cout << "AOMPool " << pool_index << endl;
          //cout << "vo_AOM_Slow:\t"<< it_AOM_Pool.vo_AOM_Slow << endl;
          //cout << "vo_AOM_Fast:\t"<< it_AOM_Pool.vo_AOM_Fast << endl;

          pool_index++;
        });
      }
    }

    //cout << "soil_organic_carbon: " << soil_organic_carbon << endl;
    //cout << "soil_organic_matter: " << soil_organic_matter << endl;
    //cout << "soil_temperature: " << soil_temperature << endl;
    //cout << "soil_moisture: " << soil_moisture << endl;
    //cout << "soil_moistureOld: " << soil_moistureOld << endl;
    //cout << "som_slow: " << som_slow << endl;
    //cout << "som_fast: " << som_fast << endl;
    //cout << "smb_slow: " << smb_slow << endl;
    //cout << "smb_fast: " << smb_fast << endl;
    //cout << "carbamid: " << carbamid << endl;
    //cout << "nh4: " << nh4 << endl;
    //cout << "no3: " << no3 << endl << endl;
  };

  /**
   * Returns number of organic layers. Usually the number
   * of layers in the first 30 cm depth of soil.
   * @return Number of organic layers
   */
  soilColumnArray.vs_NumberOfOrganicLayers = function () {
    return that._vs_NumberOfOrganicLayers;
  };


  /**
   * Returns a soil layer at given Index.
   * @return Reference to a soil layer
   */
  soilColumnArray.soilLayer = function (i_Layer) {
    return this[i_Layer];
  };

  /**
   * Returns the thickness of a layer.
   * Right now by definition all layers have the same size,
   * therefor only the thickness of first layer is returned.
   *
   * @return Size of a layer
   *
   * @todo Need to be changed if different layer sizes are used.
   */
  soilColumnArray.vs_LayerThickness = function () {
    return this[0].vs_LayerThickness;
  };

  /**
   * @brief Returns daily crop N uptake [kg N ha-1 d-1]
   * @return Daily crop N uptake
   */
  soilColumnArray.get_DailyCropNUptake = function () {
    return this.vq_CropNUptake * 10000.0;
  };

  /**
   * @brief Returns index of layer that lays in the given depth.
   * @param depth Depth in meters
   * @return Index of layer
   */
  soilColumnArray.getLayerNumberForDepth = function (depth) {

    var layer = 0;
    var size= this.length;
    var accu_depth = 0;
    var layer_thickness= this[0].vs_LayerThickness;

    // find number of layer that lay between the given depth
    for (var i = 0; i < size; i++) {
      accu_depth += layer_thickness;
      if (depth <= accu_depth)
        break;
      layer++;
    }

    return layer;
  };

  /**
   * @brief Makes crop information available when needed.
   *
   * @return crop object
   */
  soilColumnArray.put_Crop = function (c) {
      that.cropGrowth = c;
  };

  /**
   * @brief Deletes crop object when not needed anymore.
   *
   * @return crop object is NULL
   */
  soilColumnArray.remove_Crop = function () {
      that.cropGrowth = null;
  };

  /**
   * Returns sum of soiltemperature for several soil layers.
   * @param layers Number of layers that are of interest
   * @return Temperature sum
   */
  soilColumnArray.sumSoilTemperature = function (layers) {
    var accu = 0.0;
    for (var i = 0; i < layers; i++)
      accu += this[i].get_Vs_SoilTemperature();
    return accu;
  };

  soilColumnArray.vs_NumberOfLayers = function () {
      return this.length;
  };



  // end soilColumnArray

  // private methods

  /**
   * @brief Calculates number of organic layers.
   *
   * Calculates number of organic layers in in in dependency on
   * the layer depth and the ps_MaxMineralisationDepth. Result is saved
   * in private member variable _vs_NumberOfOrganicLayers.
   */
  var set_vs_NumberOfOrganicLayers = function () {
    var lsum = 0;
    var count = 0;
    for (var i = 0; i < soilColumnArray.vs_NumberOfLayers(); i++) {
      count++;
      lsum += soilColumnArray.vs_SoilLayers[i].vs_LayerThickness;
      if (lsum >= that.generalParams.ps_MaxMineralisationDepth)
        break;
    }
    that._vs_NumberOfOrganicLayers = count;
  };

  // apply set_vs_NumberOfOrganicLayers
  set_vs_NumberOfOrganicLayers();

  return soilColumnArray;

};


var SoilOrganic = function (sc, gps, stps, cpp) {

  var soilColumn = sc,
      generalParams = gps,
      siteParams = stps,
      centralParameterProvider = cpp,
      vs_NumberOfLayers = sc.vs_NumberOfLayers(),
      vs_NumberOfOrganicLayers = sc.vs_NumberOfOrganicLayers(),
      addedOrganicMatter = false,
      irrigationAmount = 0,
      vo_ActDenitrificationRate = new Float64Array(sc.vs_NumberOfOrganicLayers()),  //[kg N m-3 d-1]
      vo_AOM_FastDeltaSum =  new Float64Array(sc.vs_NumberOfOrganicLayers()),
      vo_AOM_FastInput = 0,
      vo_AOM_FastSum =  new Float64Array(sc.vs_NumberOfOrganicLayers()),
      vo_AOM_SlowDeltaSum =  new Float64Array(sc.vs_NumberOfOrganicLayers()),
      vo_AOM_SlowInput = 0,
      vo_AOM_SlowSum =  new Float64Array(sc.vs_NumberOfOrganicLayers()),
      vo_CBalance =  new Float64Array(sc.vs_NumberOfOrganicLayers()),
      vo_DecomposerRespiration = 0.0,
      vo_InertSoilOrganicC =  new Float64Array(sc.vs_NumberOfOrganicLayers()),
      vo_N2O_Produced = 0.0,
      vo_NetEcosystemExchange = 0.0,
      vo_NetEcosystemProduction = 0.0,
      vo_NetNMineralisation = 0.0,
      vo_NetNMineralisationRate =  new Float64Array(sc.vs_NumberOfOrganicLayers()),
      vo_Total_NH3_Volatilised = 0.0,
      vo_NH3_Volatilised = 0.0,
      vo_SMB_CO2EvolutionRate =  new Float64Array(sc.vs_NumberOfOrganicLayers()),
      vo_SMB_FastDelta =  new Float64Array(sc.vs_NumberOfOrganicLayers()),
      vo_SMB_SlowDelta =  new Float64Array(sc.vs_NumberOfOrganicLayers()),
      vo_SoilOrganicC =  new Float64Array(sc.vs_NumberOfOrganicLayers()),
      vo_SOM_FastDelta =  new Float64Array(sc.vs_NumberOfOrganicLayers()),
      vo_SOM_FastInput = 0,
      vo_SOM_SlowDelta =  new Float64Array(sc.vs_NumberOfOrganicLayers()),
      vo_SumDenitrification = 0.0,
      vo_SumNetNMineralisation = 0.0,
      vo_SumN2O_Produced = 0.0,
      vo_SumNH3_Volatilised = 0.0,
      vo_TotalDenitrification = 0.0,
      incorporation = false,
      crop = null;

      // JS! unused in cpp
      // vs_SoilMineralNContent = new Float64Array(sc.vs_NumberOfOrganicLayers()),


  // Subroutine Pool initialisation
  var po_SOM_SlowUtilizationEfficiency = centralParameterProvider.userSoilOrganicParameters.po_SOM_SlowUtilizationEfficiency;
  var po_PartSOM_to_SMB_Slow = centralParameterProvider.userSoilOrganicParameters.po_PartSOM_to_SMB_Slow;
  var po_SOM_FastUtilizationEfficiency = centralParameterProvider.userSoilOrganicParameters.po_SOM_FastUtilizationEfficiency;
  var po_PartSOM_to_SMB_Fast = centralParameterProvider.userSoilOrganicParameters.po_PartSOM_to_SMB_Fast;
  var po_SOM_SlowDecCoeffStandard = centralParameterProvider.userSoilOrganicParameters.po_SOM_SlowDecCoeffStandard;
  var po_SOM_FastDecCoeffStandard = centralParameterProvider.userSoilOrganicParameters.po_SOM_FastDecCoeffStandard;
  var po_PartSOM_Fast_to_SOM_Slow = centralParameterProvider.userSoilOrganicParameters.po_PartSOM_Fast_to_SOM_Slow;

  //Conversion of soil organic carbon weight fraction to volume unit
  for(var i_Layer = 0; i_Layer < vs_NumberOfOrganicLayers; i_Layer++) {

    vo_SoilOrganicC[i_Layer] = soilColumn[i_Layer].vs_SoilOrganicCarbon() * soilColumn[i_Layer].vs_SoilBulkDensity(); //[kg C kg-1] * [kg m-3] --> [kg C m-3]

    // Falloon et al. (1998): Estimating the size of the inert organic matter pool
    // from total soil oragnic carbon content for use in the Rothamsted Carbon model.
    // Soil Biol. Biochem. 30 (8/9), 1207-1211. for values in t C ha-1.
  // vo_InertSoilOrganicC is calculated back to [kg C m-3].
    vo_InertSoilOrganicC[i_Layer] = (0.049 * pow((vo_SoilOrganicC[i_Layer] // [kg C m-3]
            * soilColumn[i_Layer].vs_LayerThickness // [kg C m-2]
            / 1000 * 10000.0), 1.139)) // [t C ha-1]
          / 10000.0 * 1000.0 // [kg C m-2]
          / soilColumn[i_Layer].vs_LayerThickness; // [kg C m-3]

    vo_SoilOrganicC[i_Layer] -= vo_InertSoilOrganicC[i_Layer]; // [kg C m-3]

    // Initialisation of pool SMB_Slow [kg C m-3]
    soilColumn[i_Layer].vs_SMB_Slow = po_SOM_SlowUtilizationEfficiency
         * po_PartSOM_to_SMB_Slow * vo_SoilOrganicC[i_Layer];

    // Initialisation of pool SMB_Fast [kg C m-3]
    soilColumn[i_Layer].vs_SMB_Fast = po_SOM_FastUtilizationEfficiency
              * po_PartSOM_to_SMB_Fast * vo_SoilOrganicC[i_Layer];

    // Initialisation of pool SOM_Slow [kg C m-3]
    soilColumn[i_Layer].vs_SOM_Slow = vo_SoilOrganicC[i_Layer] / (1.0 + po_SOM_SlowDecCoeffStandard
              / (po_SOM_FastDecCoeffStandard * po_PartSOM_Fast_to_SOM_Slow));

    // Initialisation of pool SOM_Fast [kg C m-3]
    soilColumn[i_Layer].vs_SOM_Fast = vo_SoilOrganicC[i_Layer] - soilColumn[i_Layer].vs_SOM_Slow;

    // Soil Organic Matter pool update [kg C m-3]
    vo_SoilOrganicC[i_Layer] -= soilColumn[i_Layer].vs_SMB_Slow + soilColumn[i_Layer].vs_SMB_Fast;

    soilColumn[i_Layer].set_SoilOrganicCarbon((vo_SoilOrganicC[i_Layer] + vo_InertSoilOrganicC[i_Layer]) / soilColumn[i_Layer].vs_SoilBulkDensity()); // [kg C m-3] / [kg m-3] --> [kg C kg-1]

  soilColumn[i_Layer].set_SoilOrganicMatter((vo_SoilOrganicC[i_Layer] + vo_InertSoilOrganicC[i_Layer]) / organicConstants.po_SOM_to_C
              / soilColumn[i_Layer].vs_SoilBulkDensity());  // [kg C m-3] / [kg m-3] --> [kg C kg-1]


    vo_ActDenitrificationRate[i_Layer] = 0.0;
  } // for

  var step = function (
    vw_MeanAirTemperature,
    vw_Precipitation,
    vw_WindSpeed
    ) 
  {

    var vc_NetPrimaryProduction = 0.0;
    vc_NetPrimaryProduction = crop ? crop.get_NetPrimaryProduction() : 0;

    debug("vc_NetPrimaryProduction: " + vc_NetPrimaryProduction);
    debug("crop: " + crop);

    //fo_OM_Input(vo_AOM_Addition);
    fo_Urea(vw_Precipitation + irrigationAmount);
    // Mineralisation Immobilisitation Turn-Over
    fo_MIT();
    fo_Volatilisation(addedOrganicMatter, vw_MeanAirTemperature, vw_WindSpeed);
    fo_Nitrification();
    fo_Denitrification();
    fo_N2OProduction();
    fo_PoolUpdate();

    vo_NetEcosystemProduction =
            fo_NetEcosystemProduction(vc_NetPrimaryProduction, vo_DecomposerRespiration);
    vo_NetEcosystemExchange =
            fo_NetEcosystemExchange(vc_NetPrimaryProduction, vo_DecomposerRespiration);

    vo_SumNH3_Volatilised += vo_NH3_Volatilised;

    vo_SumN2O_Produced += vo_N2O_Produced;

    //clear everything for next step
    //thus in order apply irrigation water or fertiliser, this has to be
    //done before the stepping method
    irrigationAmount = 0.0;
    vo_AOM_SlowInput = 0.0;
    vo_AOM_FastInput = 0.0;
    vo_SOM_FastInput = 0.0;
    addedOrganicMatter = false;
  };

  var addOrganicMatter = function (
    params,
    amount,
    nConcentration
    )
  {
    debug("SoilOrganic: addOrganicMatter: " + params.toString());
    var vo_AddedOrganicMatterAmount = amount;
    // TODO: nConcentration is immer 0. Warum?
    var vo_AddedOrganicMatterNConcentration = nConcentration;


    var vo_AOM_DryMatterContent = params.vo_AOM_DryMatterContent;
    var vo_AOM_NH4Content = params.vo_AOM_NH4Content;
    var vo_AOM_NO3Content = params.vo_AOM_NO3Content;
    var vo_AOM_CarbamidContent = params.vo_AOM_CarbamidContent;
    var vo_PartAOM_to_AOM_Slow = params.vo_PartAOM_to_AOM_Slow;
    var vo_PartAOM_to_AOM_Fast = params.vo_PartAOM_to_AOM_Fast;
    var vo_CN_Ratio_AOM_Slow = params.vo_CN_Ratio_AOM_Slow;
    var vo_CN_Ratio_AOM_Fast = params.vo_CN_Ratio_AOM_Fast;

    var po_AOM_FastMaxC_to_N = centralParameterProvider.userSoilOrganicParameters.po_AOM_FastMaxC_to_N;

    //urea
    if(soilColumn.vs_NumberOfOrganicLayers() > 0) {
      // kg N m-3 soil
      soilColumn[0].vs_SoilCarbamid += vo_AddedOrganicMatterAmount
               * vo_AOM_DryMatterContent * vo_AOM_CarbamidContent
               / 10000.0 / soilColumn[0].vs_LayerThickness;
    }

    var vo_AddedOrganicCarbonAmount = 0.0;
    var vo_AddedOrganicNitrogenAmount = 0.0;

    //MIT
    var nools = soilColumn.vs_NumberOfOrganicLayers();
    
    for(var i_Layer = 0; i_Layer < nools; i_Layer++) {
      //New AOM pool
      if(i_Layer == 0) {
        var aom_pool = new AOM_Properties();

        aom_pool.vo_DaysAfterApplication = 0;
        aom_pool.vo_AOM_DryMatterContent = vo_AOM_DryMatterContent;
        aom_pool.vo_AOM_NH4Content = vo_AOM_NH4Content;
        aom_pool.vo_AOM_Slow = 0.0;
        aom_pool.vo_AOM_Fast = 0.0;
        aom_pool.vo_AOM_SlowDecCoeffStandard = params.vo_AOM_SlowDecCoeffStandard;
        aom_pool.vo_AOM_FastDecCoeffStandard = params.vo_AOM_FastDecCoeffStandard;
        aom_pool.vo_CN_Ratio_AOM_Slow = vo_CN_Ratio_AOM_Slow;
        aom_pool.incorporation = incorporation;

        // Converting AOM from kg FM OM ha-1 to kg C m-3
        vo_AddedOrganicCarbonAmount = vo_AddedOrganicMatterAmount * vo_AOM_DryMatterContent * organicConstants.po_AOM_to_C
              / 10000.0 / soilColumn[0].vs_LayerThickness;

        if(vo_CN_Ratio_AOM_Fast <= 1.0E-7) {
          // Wenn in der Datenbank hier Null steht, handelt es sich um einen
          // Pflanzenrückstand. Dann erfolgt eine dynamische Berechnung des
          // C/N-Verhältnisses. Für Wirtschafstdünger ist dieser Wert
          // parametrisiert.

          // Converting AOM N content from kg N kg DM-1 to kg N m-3
          vo_AddedOrganicNitrogenAmount = vo_AddedOrganicMatterAmount * vo_AOM_DryMatterContent
          * vo_AddedOrganicMatterNConcentration / 10000.0 / soilColumn[0].vs_LayerThickness;

          debug("Added organic matter N amount: " + vo_AddedOrganicNitrogenAmount);
          if(vo_AddedOrganicMatterNConcentration <= 0.0) {
            vo_AddedOrganicNitrogenAmount = 0.01;
          }

          // Assigning the dynamic C/N ratio to the AOM_Fast pool
          if((vo_AddedOrganicCarbonAmount * vo_PartAOM_to_AOM_Slow / vo_CN_Ratio_AOM_Slow)
              < vo_AddedOrganicNitrogenAmount) {

            vo_CN_Ratio_AOM_Fast = (vo_AddedOrganicCarbonAmount * vo_PartAOM_to_AOM_Fast)
              / (vo_AddedOrganicNitrogenAmount
              - (vo_AddedOrganicCarbonAmount * vo_PartAOM_to_AOM_Slow
              / vo_CN_Ratio_AOM_Slow));
          } else {

            vo_CN_Ratio_AOM_Fast = po_AOM_FastMaxC_to_N;
          }

          if(vo_CN_Ratio_AOM_Fast > po_AOM_FastMaxC_to_N) {
            vo_CN_Ratio_AOM_Fast = po_AOM_FastMaxC_to_N;
          }

          aom_pool.vo_CN_Ratio_AOM_Fast = vo_CN_Ratio_AOM_Fast;

        } else {
          aom_pool.vo_CN_Ratio_AOM_Fast = params.vo_CN_Ratio_AOM_Fast;
        }

        aom_pool.vo_PartAOM_Slow_to_SMB_Slow = params.vo_PartAOM_Slow_to_SMB_Slow;
        aom_pool.vo_PartAOM_Slow_to_SMB_Fast = params.vo_PartAOM_Slow_to_SMB_Fast;

        soilColumn[0].vo_AOM_Pool.push(aom_pool);
        //cout << "poolsize: " << soilColumn[0].vo_AOM_Pool.length << endl;

      } else {//if (i_Layer == 0)

        var aom_pool = new AOM_Properties();

        aom_pool.vo_DaysAfterApplication = 0;
        aom_pool.vo_AOM_DryMatterContent = 0.0;
        aom_pool.vo_AOM_NH4Content = 0.0;
        aom_pool.vo_AOM_Slow = 0.0;
        aom_pool.vo_AOM_Fast = 0.0;
        aom_pool.vo_AOM_SlowDecCoeffStandard = params.vo_AOM_SlowDecCoeffStandard;
        aom_pool.vo_AOM_FastDecCoeffStandard = params.vo_AOM_FastDecCoeffStandard;
        aom_pool.vo_CN_Ratio_AOM_Slow = vo_CN_Ratio_AOM_Slow;
        if(!soilColumn[0].vo_AOM_Pool.length === 0) {
          aom_pool.vo_CN_Ratio_AOM_Fast = soilColumn[0].vo_AOM_Pool[soilColumn[0].vo_AOM_Pool.length - 1].vo_CN_Ratio_AOM_Fast;
        } else {
          aom_pool.vo_CN_Ratio_AOM_Fast = vo_CN_Ratio_AOM_Fast;
        }
        aom_pool.vo_PartAOM_Slow_to_SMB_Slow = params.vo_PartAOM_Slow_to_SMB_Slow;
        aom_pool.vo_PartAOM_Slow_to_SMB_Fast = params.vo_PartAOM_Slow_to_SMB_Fast;
        aom_pool.incorporation = incorporation;

        soilColumn[i_Layer].vo_AOM_Pool.push(aom_pool);

      } //else
    } // for i_Layer

    var AOM_SlowInput = vo_PartAOM_to_AOM_Slow * vo_AddedOrganicCarbonAmount;
    var AOM_FastInput = vo_PartAOM_to_AOM_Fast * vo_AddedOrganicCarbonAmount;

    var vo_SoilNH4Input = vo_AOM_NH4Content * vo_AddedOrganicMatterAmount
             * vo_AOM_DryMatterContent / 10000.0 / soilColumn[0].vs_LayerThickness;

    var vo_SoilNO3Input = vo_AOM_NO3Content * vo_AddedOrganicMatterAmount
             * vo_AOM_DryMatterContent / 10000.0 / soilColumn[0].vs_LayerThickness;

    var SOM_FastInput = (1.0 - (vo_PartAOM_to_AOM_Slow
           + vo_PartAOM_to_AOM_Fast)) * vo_AddedOrganicCarbonAmount;
    // Immediate top layer pool update
    soilColumn[0].vo_AOM_Pool[soilColumn[0].vo_AOM_Pool.length - 1].vo_AOM_Slow += AOM_SlowInput;
    soilColumn[0].vo_AOM_Pool[soilColumn[0].vo_AOM_Pool.length - 1].vo_AOM_Fast += AOM_FastInput;
    soilColumn[0].vs_SoilNH4 += vo_SoilNH4Input;
    soilColumn[0].vs_SoilNO3 += vo_SoilNO3Input;
    soilColumn[0].vs_SOM_Fast += SOM_FastInput;

    // JS!
    if (soilColumn[0].vs_SoilNO3 < 0 || soilColumn[0].vs_SoilNH4 < 0) {
      debug('vo_AddedOrganicCarbonAmount', vo_AddedOrganicCarbonAmount);
      debug('vo_AOM_NO3Content', vo_AOM_NO3Content);
      debug('vo_PartAOM_to_AOM_Slow', vo_PartAOM_to_AOM_Slow);
      debug('vo_PartAOM_to_AOM_Fast', vo_PartAOM_to_AOM_Fast);
      debug('vo_AOM_DryMatterContent', vo_AOM_DryMatterContent);
      debug('vo_AddedOrganicMatterAmount', vo_AddedOrganicMatterAmount);
      debug('vs_LayerThickness', soilColumn[0].vs_LayerThickness);
      debug('oilColumn.that[0].vs_SoilNO3', oilColumn.that[0].vs_SoilNO3);
      debug('soilColumn[0].vs_SoilNH4', soilColumn[0].vs_SoilNH4);
      throw 'N < 0';
    }

    //store for further use
    vo_AOM_SlowInput += AOM_SlowInput;
    vo_AOM_FastInput += AOM_FastInput;
    vo_SOM_FastInput += SOM_FastInput;

    addedOrganicMatter = true;
  };

  var addIrrigationWater = function (amount) {
    irrigationAmount += amount;
  };

  var fo_Urea = function (vo_RainIrrigation ) {

    var nools = soilColumn.vs_NumberOfOrganicLayers();
    var vo_SoilCarbamid_solid = []; // Solid carbamide concentration in soil solution [kmol urea m-3]
    var vo_SoilCarbamid_aq = []; // Dissolved carbamide concetzration in soil solution [kmol urea m-3]
    var vo_HydrolysisRate1 = []; // [kg N d-1]
    var vo_HydrolysisRate2 = []; // [kg N d-1]
    var vo_HydrolysisRateMax = []; // [kg N d-1]
    var vo_Hydrolysis_pH_Effect = [];// []
    var vo_HydrolysisRate = []; // [kg N d-1]
    var vo_H3OIonConcentration = 0.0; // Oxonium ion concentration in soil solution [kmol m-3]
    var vo_NH3aq_EquilibriumConst = 0.0; // []
    var vo_NH3_EquilibriumConst   = 0.0; // []
    var vs_SoilNH4aq = 0.0; // ammonium ion concentration in soil solution [kmol m-3}
    var vo_NH3aq = 0.0;
    var vo_NH3gas = 0.0;
    var vo_NH3_Volatilising = 0.0;

    var po_HydrolysisKM = centralParameterProvider.userSoilOrganicParameters.po_HydrolysisKM;
    var po_HydrolysisP1 = centralParameterProvider.userSoilOrganicParameters.po_HydrolysisP1;
    var po_HydrolysisP2 = centralParameterProvider.userSoilOrganicParameters.po_HydrolysisP2;
    var po_ActivationEnergy = centralParameterProvider.userSoilOrganicParameters.po_ActivationEnergy;

    vo_NH3_Volatilised = 0.0;

    for (var i_Layer = 0; i_Layer < soilColumn.vs_NumberOfOrganicLayers(); i_Layer++) {

      // kmol urea m-3 soil
      vo_SoilCarbamid_solid[i_Layer] = soilColumn[i_Layer].vs_SoilCarbamid /
               organicConstants.po_UreaMolecularWeight /
               organicConstants.po_Urea_to_N / 1000.0;

      // mol urea kg Solution-1
      vo_SoilCarbamid_aq[i_Layer] = (-1258.9 + 13.2843 * (soilColumn[i_Layer].get_Vs_SoilTemperature() + 273.15) -
             0.047381 * ((soilColumn[i_Layer].get_Vs_SoilTemperature() + 273.15) *
                 (soilColumn[i_Layer].get_Vs_SoilTemperature() + 273.15)) +
             5.77264e-5 * (pow((soilColumn[i_Layer].get_Vs_SoilTemperature() + 273.15), 3.0)));

      // kmol urea m-3 soil
      vo_SoilCarbamid_aq[i_Layer] = (vo_SoilCarbamid_aq[i_Layer] / (1.0 +
                    (vo_SoilCarbamid_aq[i_Layer] * 0.0453))) *
          soilColumn[i_Layer].get_Vs_SoilMoisture_m3();

      if (vo_SoilCarbamid_aq[i_Layer] >= vo_SoilCarbamid_solid[i_Layer]) {

        vo_SoilCarbamid_aq[i_Layer] = vo_SoilCarbamid_solid[i_Layer];
        vo_SoilCarbamid_solid[i_Layer] = 0.0;

      } else {
        vo_SoilCarbamid_solid[i_Layer] -= vo_SoilCarbamid_aq[i_Layer];
      }

      // Calculate urea hydrolysis

      vo_HydrolysisRate1[i_Layer] = (po_HydrolysisP1 *
                                    (soilColumn[i_Layer].vs_SoilOrganicMatter() * 100.0) *
                                    organicConstants.po_SOM_to_C + po_HydrolysisP2) /
                                    organicConstants.po_UreaMolecularWeight;

      vo_HydrolysisRate2[i_Layer] = vo_HydrolysisRate1[i_Layer] /
                                    (exp(-po_ActivationEnergy /
                                    (8.314 * 310.0)));

      vo_HydrolysisRateMax[i_Layer] = vo_HydrolysisRate2[i_Layer] * exp(-po_ActivationEnergy /
                                     (8.314 * (soilColumn[i_Layer].get_Vs_SoilTemperature() + 273.15)));

      vo_Hydrolysis_pH_Effect[i_Layer] = exp(-0.064 *
                                         ((soilColumn[i_Layer].vs_SoilpH - 6.5) *
                                         (soilColumn[i_Layer].vs_SoilpH - 6.5)));

      // debug(soilColumn[i_Layer].vs_SoilMoisture_pF(), 'soilColumn[i_Layer].vs_SoilMoisture_pF()');

      // kmol urea kg soil-1 s-1
      vo_HydrolysisRate[i_Layer] = vo_HydrolysisRateMax[i_Layer] *
                                   fo_MoistOnHydrolysis(soilColumn[i_Layer].vs_SoilMoisture_pF()) *
                                   vo_Hydrolysis_pH_Effect[i_Layer] * vo_SoilCarbamid_aq[i_Layer] /
                                   (po_HydrolysisKM + vo_SoilCarbamid_aq[i_Layer]);

      // kmol urea m soil-3 d-1
      vo_HydrolysisRate[i_Layer] = vo_HydrolysisRate[i_Layer] * 86400.0 *
                                   soilColumn[i_Layer].vs_SoilBulkDensity();

      if (vo_HydrolysisRate[i_Layer] >= vo_SoilCarbamid_aq[i_Layer]) {

        soilColumn[i_Layer].vs_SoilNH4 += soilColumn[i_Layer].vs_SoilCarbamid;
        soilColumn[i_Layer].vs_SoilCarbamid = 0.0;

      } else {

        // kg N m soil-3
        soilColumn[i_Layer].vs_SoilCarbamid -= vo_HydrolysisRate[i_Layer] *
               organicConstants.po_UreaMolecularWeight *
               organicConstants.po_Urea_to_N * 1000.0;

        // kg N m soil-3
        soilColumn[i_Layer].vs_SoilNH4 += vo_HydrolysisRate[i_Layer] *
          organicConstants.po_UreaMolecularWeight *
          organicConstants.po_Urea_to_N * 1000.0;
      }

      // Calculate general volatilisation from NH4-Pool in top layer

      if (i_Layer == 0) {

        vo_H3OIonConcentration = pow(10.0, (-soilColumn[0].vs_SoilpH)); // kmol m-3
        vo_NH3aq_EquilibriumConst = pow(10.0, ((-2728.3 /
                                    (soilColumn[0].get_Vs_SoilTemperature() + 273.15)) - 0.094219)); // K2 in Sadeghi's program

        vo_NH3_EquilibriumConst = pow(10.0, ((1630.5 /
                                  (soilColumn[0].get_Vs_SoilTemperature() + 273.15)) - 2.301));  // K1 in Sadeghi's program

        // kmol m-3, assuming that all NH4 is solved
        vs_SoilNH4aq = soilColumn[0].vs_SoilNH4 / (organicConstants.po_NH4MolecularWeight * 1000.0);


        // kmol m-3
        vo_NH3aq = vs_SoilNH4aq / (1.0 + (vo_H3OIonConcentration / vo_NH3aq_EquilibriumConst));


         vo_NH3gas = vo_NH3aq;
        //  vo_NH3gas = vo_NH3aq / vo_NH3_EquilibriumConst;

        // kg N m-3 d-1
         vo_NH3_Volatilising = vo_NH3gas * organicConstants.po_NH3MolecularWeight * 1000.0;


        if (vo_NH3_Volatilising >= soilColumn[0].vs_SoilNH4) {

          vo_NH3_Volatilising = soilColumn[0].vs_SoilNH4;
          soilColumn[0].vs_SoilNH4 = 0.0;

        } else {
          soilColumn[0].vs_SoilNH4 -= vo_NH3_Volatilising;
        }

        // kg N m-2 d-1
        vo_NH3_Volatilised = vo_NH3_Volatilising * soilColumn[0].vs_LayerThickness;

        if (soilColumn[0].vs_SoilNH4 < 0)
          throw soilColumn[0].vs_SoilNH4;

      } // if (i_Layer == 0) {
    } // for

    // set incorporation to false, if carbamid part is falling below a treshold
    // only, if organic matter was not recently added
    if (vo_SoilCarbamid_aq[0] < 0.001 && !addedOrganicMatter) {
      incorporation = false;
    }

  };

  var fo_MIT = function () {

    var nools = soilColumn.vs_NumberOfOrganicLayers();
    var po_SOM_SlowDecCoeffStandard = centralParameterProvider.userSoilOrganicParameters.po_SOM_SlowDecCoeffStandard;
    var po_SOM_FastDecCoeffStandard = centralParameterProvider.userSoilOrganicParameters.po_SOM_FastDecCoeffStandard;
    var po_SMB_SlowDeathRateStandard = centralParameterProvider.userSoilOrganicParameters.po_SMB_SlowDeathRateStandard;
    var po_SMB_SlowMaintRateStandard = centralParameterProvider.userSoilOrganicParameters.po_SMB_SlowMaintRateStandard;
    var po_SMB_FastDeathRateStandard = centralParameterProvider.userSoilOrganicParameters.po_SMB_FastDeathRateStandard;
    var po_SMB_FastMaintRateStandard = centralParameterProvider.userSoilOrganicParameters.po_SMB_FastMaintRateStandard;
    var po_LimitClayEffect = centralParameterProvider.userSoilOrganicParameters.po_LimitClayEffect;
    var po_SOM_SlowUtilizationEfficiency = centralParameterProvider.userSoilOrganicParameters.po_SOM_SlowUtilizationEfficiency;
    var po_SOM_FastUtilizationEfficiency = centralParameterProvider.userSoilOrganicParameters.po_SOM_FastUtilizationEfficiency;
    var po_PartSOM_Fast_to_SOM_Slow = centralParameterProvider.userSoilOrganicParameters.po_PartSOM_Fast_to_SOM_Slow;
    var po_PartSMB_Slow_to_SOM_Fast = centralParameterProvider.userSoilOrganicParameters.po_PartSMB_Slow_to_SOM_Fast;
    var po_SMB_UtilizationEfficiency = centralParameterProvider.userSoilOrganicParameters.po_SMB_UtilizationEfficiency;
    var po_CN_Ratio_SMB = centralParameterProvider.userSoilOrganicParameters.po_CN_Ratio_SMB;
    var po_AOM_SlowUtilizationEfficiency = centralParameterProvider.userSoilOrganicParameters.po_AOM_SlowUtilizationEfficiency;
    var po_AOM_FastUtilizationEfficiency = centralParameterProvider.userSoilOrganicParameters.po_AOM_FastUtilizationEfficiency;
    var po_ImmobilisationRateCoeffNH4 = centralParameterProvider.userSoilOrganicParameters.po_ImmobilisationRateCoeffNH4;
    var po_ImmobilisationRateCoeffNO3 = centralParameterProvider.userSoilOrganicParameters.po_ImmobilisationRateCoeffNO3;

    // Sum of decomposition rates for fast added organic matter pools
    var vo_AOM_FastDecRateSum = [];

    //Added organic matter fast pool change by decomposition [kg C m-3]
    //var vo_AOM_FastDelta = [];

    //Sum of all changes to added organic matter fast pool [kg C m-3]
    var vo_AOM_FastDeltaSum = [];

    //Added organic matter fast pool change by input [kg C m-3]
    //double vo_AOM_FastInput = 0.0;

    // Sum of decomposition rates for slow added organic matter pools
    var vo_AOM_SlowDecRateSum = [];

    // Added organic matter slow pool change by decomposition [kg C m-3]
    //var vo_AOM_SlowDelta = [];

    // Sum of all changes to added organic matter slow pool [kg C m-3]
    var vo_AOM_SlowDeltaSum = [];
    
    // [kg m-3]
    //fill(vo_CBalance.begin(), vo_CBalance.end(), 0.0);
    for (var i = 0, is = vo_CBalance.length; i < is; i++)
      vo_CBalance[i] = 0.0;

    // C to N ratio of slowly decomposing soil organic matter []
    var vo_CN_Ratio_SOM_Slow;

    // C to N ratio of rapidly decomposing soil organic matter []
    var vo_CN_Ratio_SOM_Fast;

    // N balance of each layer [kg N m-3]
    var vo_NBalance = [];

    // CO2 preduced from fast fraction of soil microbial biomass [kg C m-3 d-1]
    var vo_SMB_FastCO2EvolutionRate = [];

    // Fast fraction of soil microbial biomass death rate [d-1]
    var vo_SMB_FastDeathRate = [];

    // Fast fraction of soil microbial biomass death rate coefficient [d-1]
    var vo_SMB_FastDeathRateCoeff = [];

    // Fast fraction of soil microbial biomass decomposition rate [d-1]
    var vo_SMB_FastDecCoeff = [];

    // Soil microbial biomass fast pool change [kg C m-3]
    //fill(vo_SMB_FastDelta.begin(), vo_SMB_FastDelta.end(), 0.0);
    for (var i = 0, is = vo_SMB_FastDelta.length; i < is; i++)
      vo_SMB_FastDelta[i] = 0.0;

    // CO2 preduced from slow fraction of soil microbial biomass [kg C m-3 d-1]
    var vo_SMB_SlowCO2EvolutionRate = [];

    // Slow fraction of soil microbial biomass death rate [d-1]
    var vo_SMB_SlowDeathRate = [];

    // Slow fraction of soil microbial biomass death rate coefficient [d-1]
    var vo_SMB_SlowDeathRateCoeff = [];

    // Slow fraction of soil microbial biomass decomposition rate [d-1]
    var vo_SMB_SlowDecCoeff = [];

    // Soil microbial biomass slow pool change [kg C m-3]
    //fill(vo_SMB_SlowDelta.begin(), vo_SMB_SlowDelta.end(), 0.0);
    for (var i = 0, is = vo_SMB_SlowDelta.length; i < is; i++)
      vo_SMB_SlowDelta[i] = 0.0;

    // Decomposition coefficient for rapidly decomposing soil organic matter [d-1]
    var vo_SOM_FastDecCoeff = [];

    // Soil organic matter fast pool change [kg C m-3]
    //fill(vo_SOM_FastDelta.begin(), vo_SOM_FastDelta.end(), 0.0);
    for (var i = 0, is = vo_SOM_FastDelta.length; i < is; i++)
      vo_SOM_FastDelta[i] = 0.0;

    // Sum of all changes to soil organic matter fast pool [kg C m-3]
    //var vo_SOM_FastDeltaSum = [];

    // Decomposition coefficient for slowly decomposing soil organic matter [d-1]
    var vo_SOM_SlowDecCoeff = [];

    // Soil organic matter slow pool change, unit [kg C m-3]
    //fill(vo_SOM_SlowDelta.begin(), vo_SOM_SlowDelta.end(), 0.0);
    for (var i = 0, is = vo_SOM_SlowDelta.length; i < is; i++)
      vo_SOM_SlowDelta[i] = 0.0;

    // Sum of all changes to soil organic matter slow pool [kg C m-3]
    //std::vector<double> vo_SOM_SlowDeltaSum = new Array(nools);

    // Calculation of decay rate coefficients

    var AOM_Pool, it_AOM_Pool; // JS! it's the same var! forEach is slower

    for (var i_Layer = 0; i_Layer < nools; i_Layer++) {

      var tod = fo_TempOnDecompostion(soilColumn[i_Layer].get_Vs_SoilTemperature());
      var mod = fo_MoistOnDecompostion(soilColumn[i_Layer].vs_SoilMoisture_pF());
  //    cout << "SO-5\t" << mod << endl;

      vo_SOM_SlowDecCoeff[i_Layer] = po_SOM_SlowDecCoeffStandard * tod * mod;
      vo_SOM_FastDecCoeff[i_Layer] = po_SOM_FastDecCoeffStandard * tod * mod;

      vo_SMB_SlowDecCoeff[i_Layer] = (po_SMB_SlowDeathRateStandard
             + po_SMB_SlowMaintRateStandard)
             * fo_ClayOnDecompostion(soilColumn[i_Layer].vs_SoilClayContent,
               po_LimitClayEffect) * tod * mod;

      vo_SMB_FastDecCoeff[i_Layer] = (po_SMB_FastDeathRateStandard
              + po_SMB_FastMaintRateStandard) * tod * mod;

      vo_SMB_SlowDeathRateCoeff[i_Layer] = po_SMB_SlowDeathRateStandard * tod * mod;
      vo_SMB_FastDeathRateCoeff[i_Layer] = po_SMB_FastDeathRateStandard * tod * mod;
      vo_SMB_SlowDeathRate[i_Layer] = vo_SMB_SlowDeathRateCoeff[i_Layer] * soilColumn[i_Layer].vs_SMB_Slow;
      vo_SMB_FastDeathRate[i_Layer] = vo_SMB_FastDeathRateCoeff[i_Layer] * soilColumn[i_Layer].vs_SMB_Fast;

      for (var i_Pool = 0, i_Pools = soilColumn[i_Layer].vo_AOM_Pool.length; i_Pool < i_Pools; i_Pool++) {
        /*var*/ AOM_Pool = soilColumn[i_Layer].vo_AOM_Pool[i_Pool];
        AOM_Pool.vo_AOM_SlowDecCoeff = AOM_Pool.vo_AOM_SlowDecCoeffStandard * tod * mod;
        AOM_Pool.vo_AOM_FastDecCoeff = AOM_Pool.vo_AOM_FastDecCoeffStandard * tod * mod;      
      }
    } // for

    // Calculation of pool changes by decomposition
    for (var i_Layer = 0; i_Layer < nools; i_Layer++) {

      for (var i_Pool = 0, i_Pools = soilColumn[i_Layer].vo_AOM_Pool.length; i_Pool < i_Pools; i_Pool++) {
        /*var*/ AOM_Pool = soilColumn[i_Layer].vo_AOM_Pool[i_Pool];

        // Eq.6-5 and 6-6 in the DAISY manual
        AOM_Pool.vo_AOM_SlowDelta = -(AOM_Pool.vo_AOM_SlowDecCoeff * AOM_Pool.vo_AOM_Slow);

        if(-AOM_Pool.vo_AOM_SlowDelta > AOM_Pool.vo_AOM_Slow) {
          AOM_Pool.vo_AOM_SlowDelta = (-AOM_Pool.vo_AOM_Slow);
        }

        AOM_Pool.vo_AOM_FastDelta = -(AOM_Pool.vo_AOM_FastDecCoeff * AOM_Pool.vo_AOM_Fast);

        if(-AOM_Pool.vo_AOM_FastDelta > AOM_Pool.vo_AOM_Fast) {
          AOM_Pool.vo_AOM_FastDelta = (-AOM_Pool.vo_AOM_Fast);
        }
      }

      // soilColumn[i_Layer].vo_AOM_Pool.forEach(function (AOM_Pool) {
      //   // Eq.6-5 and 6-6 in the DAISY manual
      //   AOM_Pool.vo_AOM_SlowDelta = -(AOM_Pool.vo_AOM_SlowDecCoeff * AOM_Pool.vo_AOM_Slow);

      //   if(-AOM_Pool.vo_AOM_SlowDelta > AOM_Pool.vo_AOM_Slow) {
      //     AOM_Pool.vo_AOM_SlowDelta = (-AOM_Pool.vo_AOM_Slow);
      //   }

      //   AOM_Pool.vo_AOM_FastDelta = -(AOM_Pool.vo_AOM_FastDecCoeff * AOM_Pool.vo_AOM_Fast);

      //   if(-AOM_Pool.vo_AOM_FastDelta > AOM_Pool.vo_AOM_Fast) {
      //     AOM_Pool.vo_AOM_FastDelta = (-AOM_Pool.vo_AOM_Fast);
      //   }
      // });

      // Eq.6-7 in the DAISY manual
      vo_AOM_SlowDecRateSum[i_Layer] = 0.0;

      for (var i_Pool = 0, i_Pools = soilColumn[i_Layer].vo_AOM_Pool.length; i_Pool < i_Pools; i_Pool++) {
        /*var*/ AOM_Pool = soilColumn[i_Layer].vo_AOM_Pool[i_Pool];
        AOM_Pool.vo_AOM_SlowDecRate = AOM_Pool.vo_AOM_SlowDecCoeff * AOM_Pool.vo_AOM_Slow;
        vo_AOM_SlowDecRateSum[i_Layer] += AOM_Pool.vo_AOM_SlowDecRate;
      }

      // soilColumn[i_Layer].vo_AOM_Pool.forEach(function (AOM_Pool) {
      //   AOM_Pool.vo_AOM_SlowDecRate = AOM_Pool.vo_AOM_SlowDecCoeff * AOM_Pool.vo_AOM_Slow;
      //   vo_AOM_SlowDecRateSum[i_Layer] += AOM_Pool.vo_AOM_SlowDecRate;
      // });

      vo_SMB_SlowDelta[i_Layer] = (po_SOM_SlowUtilizationEfficiency * vo_SOM_SlowDecCoeff[i_Layer]
          * soilColumn[i_Layer].vs_SOM_Slow)
          + (po_SOM_FastUtilizationEfficiency * (1.0
          - po_PartSOM_Fast_to_SOM_Slow)
          * vo_SOM_FastDecCoeff[i_Layer] * soilColumn[i_Layer].vs_SOM_Fast)
          + (po_AOM_SlowUtilizationEfficiency
          * vo_AOM_SlowDecRateSum[i_Layer])
          - (vo_SMB_SlowDecCoeff[i_Layer] * soilColumn[i_Layer].vs_SMB_Slow
          + vo_SMB_SlowDeathRate[i_Layer]);

      // Eq.6-8 in the DAISY manual
      vo_AOM_FastDecRateSum[i_Layer] = 0.0;

      for (var i_Pool = 0, i_Pools = soilColumn[i_Layer].vo_AOM_Pool.length; i_Pool < i_Pools; i_Pool++) {
        /*var*/ AOM_Pool = soilColumn[i_Layer].vo_AOM_Pool[i_Pool];
        AOM_Pool.vo_AOM_FastDecRate = AOM_Pool.vo_AOM_FastDecCoeff * AOM_Pool.vo_AOM_Fast;
        vo_AOM_FastDecRateSum[i_Layer] += AOM_Pool.vo_AOM_FastDecRate;
      }

      // soilColumn[i_Layer].vo_AOM_Pool.forEach(function (AOM_Pool) {
      //   AOM_Pool.vo_AOM_FastDecRate = AOM_Pool.vo_AOM_FastDecCoeff * AOM_Pool.vo_AOM_Fast;
      //   vo_AOM_FastDecRateSum[i_Layer] += AOM_Pool.vo_AOM_FastDecRate;
      // });

      vo_SMB_FastDelta[i_Layer] = (po_SMB_UtilizationEfficiency * (1.0
          - po_PartSMB_Slow_to_SOM_Fast)
          * (vo_SMB_SlowDeathRate[i_Layer]
          + vo_SMB_FastDeathRate[i_Layer]))
          + (po_AOM_FastUtilizationEfficiency
          * vo_AOM_FastDecRateSum[i_Layer])
          - ((vo_SMB_FastDecCoeff[i_Layer]
          * soilColumn[i_Layer].vs_SMB_Fast)
          + vo_SMB_FastDeathRate[i_Layer]);

      //!Eq.6-9 in the DAISY manual
      vo_SOM_SlowDelta[i_Layer] = po_PartSOM_Fast_to_SOM_Slow * vo_SOM_FastDecCoeff[i_Layer]
          * soilColumn[i_Layer].vs_SOM_Fast - vo_SOM_SlowDecCoeff[i_Layer]
          * soilColumn[i_Layer].vs_SOM_Slow;

      // Eq.6-10 in the DAISY manual
      vo_SOM_FastDelta[i_Layer] = po_PartSMB_Slow_to_SOM_Fast * (vo_SMB_SlowDeathRate[i_Layer]
          + vo_SMB_FastDeathRate[i_Layer]) - vo_SOM_FastDecCoeff[i_Layer]
          * soilColumn[i_Layer].vs_SOM_Fast;

      vo_AOM_SlowDeltaSum[i_Layer] = 0.0;
      vo_AOM_FastDeltaSum[i_Layer] = 0.0;

      for (var i_Pool = 0, i_Pools = soilColumn[i_Layer].vo_AOM_Pool.length; i_Pool < i_Pools; i_Pool++) {
        /*var*/ AOM_Pool = soilColumn[i_Layer].vo_AOM_Pool[i_Pool];
        vo_AOM_SlowDeltaSum[i_Layer] += AOM_Pool.vo_AOM_SlowDelta;
        vo_AOM_FastDeltaSum[i_Layer] += AOM_Pool.vo_AOM_FastDelta;
      }

      // soilColumn[i_Layer].vo_AOM_Pool.forEach(function (AOM_Pool) {
      //   vo_AOM_SlowDeltaSum[i_Layer] += AOM_Pool.vo_AOM_SlowDelta;
      //   vo_AOM_FastDeltaSum[i_Layer] += AOM_Pool.vo_AOM_FastDelta;
      // });

    } // for i_Layer

    vo_DecomposerRespiration = 0.0;

    // Calculation of CO2 evolution
    for (var i_Layer = 0; i_Layer < nools; i_Layer++) {

      vo_SMB_SlowCO2EvolutionRate[i_Layer] = ((1.0 - po_SOM_SlowUtilizationEfficiency)
              * vo_SOM_SlowDecCoeff[i_Layer] * soilColumn[i_Layer].vs_SOM_Slow) + ((1.0
              - po_SOM_FastUtilizationEfficiency) * (1.0 - po_PartSOM_Fast_to_SOM_Slow)
              * vo_SOM_FastDecCoeff[i_Layer] * soilColumn[i_Layer].vs_SOM_Fast) + ((1.0
              - po_AOM_SlowUtilizationEfficiency) * vo_AOM_SlowDecRateSum[i_Layer])
              + (po_SMB_UtilizationEfficiency
              * (vo_SMB_SlowDecCoeff[i_Layer] * soilColumn[i_Layer].vs_SMB_Slow));

      vo_SMB_FastCO2EvolutionRate[i_Layer] = ((1.0 - po_SMB_UtilizationEfficiency) * (1.0
             - po_PartSMB_Slow_to_SOM_Fast) * (vo_SMB_SlowDeathRate[i_Layer] + vo_SMB_FastDeathRate[i_Layer]))
             + ((1.0 - po_AOM_FastUtilizationEfficiency) * vo_AOM_FastDecRateSum[i_Layer])
             + ((vo_SMB_FastDecCoeff[i_Layer] * soilColumn[i_Layer].vs_SMB_Fast));

      vo_SMB_CO2EvolutionRate[i_Layer] = vo_SMB_SlowCO2EvolutionRate[i_Layer] + vo_SMB_FastCO2EvolutionRate[i_Layer];

      vo_DecomposerRespiration += vo_SMB_CO2EvolutionRate[i_Layer] * soilColumn[i_Layer].vs_LayerThickness; // [kg C m-3] -> [kg C m-2]

    } // for i_Layer

    // Calculation of N balance
    vo_CN_Ratio_SOM_Slow = siteParams.vs_Soil_CN_Ratio;
    vo_CN_Ratio_SOM_Fast = siteParams.vs_Soil_CN_Ratio;

    for (var i_Layer = 0; i_Layer < nools; i_Layer++) {

      vo_NBalance[i_Layer] = -(vo_SMB_SlowDelta[i_Layer] / po_CN_Ratio_SMB)
          - (vo_SMB_FastDelta[i_Layer] / po_CN_Ratio_SMB)
          - (vo_SOM_SlowDelta[i_Layer] / vo_CN_Ratio_SOM_Slow)
          - (vo_SOM_FastDelta[i_Layer] / vo_CN_Ratio_SOM_Fast);

      /*var*/ AOM_Pool = soilColumn[i_Layer].vo_AOM_Pool;

      for (var i_Pool = 0, i_Pools = AOM_Pool.length; i_Pool < i_Pools; i_Pool++) {
        it_AOM_Pool = AOM_Pool[i_Pool];
        if (abs(it_AOM_Pool.vo_CN_Ratio_AOM_Fast) >= 1.0E-7) {
          vo_NBalance[i_Layer] -= (it_AOM_Pool.vo_AOM_FastDelta / it_AOM_Pool.vo_CN_Ratio_AOM_Fast);
        } // if

        if (abs(it_AOM_Pool.vo_CN_Ratio_AOM_Slow) >= 1.0E-7) {
          vo_NBalance[i_Layer] -= (it_AOM_Pool.vo_AOM_SlowDelta / it_AOM_Pool.vo_CN_Ratio_AOM_Slow);
        } // if
      } // for it_AOM_Pool

      // AOM_Pool.forEach(function (it_AOM_Pool) {

      //   if (abs(it_AOM_Pool.vo_CN_Ratio_AOM_Fast) >= 1.0E-7) {
      //     vo_NBalance[i_Layer] -= (it_AOM_Pool.vo_AOM_FastDelta / it_AOM_Pool.vo_CN_Ratio_AOM_Fast);
      //   } // if

      //   if (abs(it_AOM_Pool.vo_CN_Ratio_AOM_Slow) >= 1.0E-7) {
      //     vo_NBalance[i_Layer] -= (it_AOM_Pool.vo_AOM_SlowDelta / it_AOM_Pool.vo_CN_Ratio_AOM_Slow);
      //   } // if
      // }); // for it_AOM_Pool
    } // for i_Layer

    // Check for Nmin availablity in case of immobilisation

    vo_NetNMineralisation = 0.0;

    for (var i_Layer = 0; i_Layer < nools; i_Layer++) {

      if (vo_NBalance[i_Layer] < 0.0) {

        if (abs(vo_NBalance[i_Layer]) >= ((soilColumn[i_Layer].vs_SoilNH4 * po_ImmobilisationRateCoeffNH4)
          + (soilColumn[i_Layer].vs_SoilNO3 * po_ImmobilisationRateCoeffNO3))) {
          vo_AOM_SlowDeltaSum[i_Layer] = 0.0;
          vo_AOM_FastDeltaSum[i_Layer] = 0.0;

          AOM_Pool = soilColumn[i_Layer].vo_AOM_Pool;

          for (var i_Pool = 0, i_Pools = AOM_Pool.length; i_Pool < i_Pools; i_Pool++) {
            it_AOM_Pool = AOM_Pool[i_Pool];

            if (it_AOM_Pool.vo_CN_Ratio_AOM_Slow >= (po_CN_Ratio_SMB
                 / po_AOM_SlowUtilizationEfficiency)) {

              it_AOM_Pool.vo_AOM_SlowDelta = 0.0;
            } // if

            if (it_AOM_Pool.vo_CN_Ratio_AOM_Fast >= (po_CN_Ratio_SMB
                 / po_AOM_FastUtilizationEfficiency)) {

              it_AOM_Pool.vo_AOM_FastDelta = 0.0;
            } // if

            vo_AOM_SlowDeltaSum[i_Layer] += it_AOM_Pool.vo_AOM_SlowDelta;
            vo_AOM_FastDeltaSum[i_Layer] += it_AOM_Pool.vo_AOM_FastDelta;

          } // for

          // AOM_Pool.forEach(function (it_AOM_Pool) {

          //   if (it_AOM_Pool.vo_CN_Ratio_AOM_Slow >= (po_CN_Ratio_SMB
          //        / po_AOM_SlowUtilizationEfficiency)) {

          //     it_AOM_Pool.vo_AOM_SlowDelta = 0.0;
          //   } // if

          //   if (it_AOM_Pool.vo_CN_Ratio_AOM_Fast >= (po_CN_Ratio_SMB
          //        / po_AOM_FastUtilizationEfficiency)) {

          //     it_AOM_Pool.vo_AOM_FastDelta = 0.0;
          //   } // if

          //   vo_AOM_SlowDeltaSum[i_Layer] += it_AOM_Pool.vo_AOM_SlowDelta;
          //   vo_AOM_FastDeltaSum[i_Layer] += it_AOM_Pool.vo_AOM_FastDelta;

          // }); // for

          if (vo_CN_Ratio_SOM_Slow >= (po_CN_Ratio_SMB / po_SOM_SlowUtilizationEfficiency)) {

            vo_SOM_SlowDelta[i_Layer] = 0.0;
          } // if

          if (vo_CN_Ratio_SOM_Fast >= (po_CN_Ratio_SMB / po_SOM_FastUtilizationEfficiency)) {

            vo_SOM_FastDelta[i_Layer] = 0.0;
          } // if

          // Recalculation of SMB pool changes

          /** @todo <b>Claas: </b> Folgende Algorithmen prüfen: Was verändert sich? */
          vo_SMB_SlowDelta[i_Layer] = (po_SOM_SlowUtilizationEfficiency * vo_SOM_SlowDecCoeff[i_Layer]
               * soilColumn[i_Layer].vs_SOM_Slow) + (po_SOM_FastUtilizationEfficiency * (1.0
               - po_PartSOM_Fast_to_SOM_Slow) * vo_SOM_FastDecCoeff[i_Layer]
               * soilColumn[i_Layer].vs_SOM_Fast) + (po_AOM_SlowUtilizationEfficiency
               * (-vo_AOM_SlowDeltaSum[i_Layer])) - (vo_SMB_SlowDecCoeff[i_Layer] * soilColumn[i_Layer].vs_SMB_Slow
               + vo_SMB_SlowDeathRate[i_Layer]);

          vo_SMB_FastDelta[i_Layer] = (po_SMB_UtilizationEfficiency * (1.0
              - po_PartSMB_Slow_to_SOM_Fast) * (vo_SMB_SlowDeathRate[i_Layer]
              + vo_SMB_FastDeathRate[i_Layer])) + (po_AOM_FastUtilizationEfficiency
              * (-vo_AOM_FastDeltaSum[i_Layer])) - ((vo_SMB_FastDecCoeff[i_Layer] * soilColumn[i_Layer].vs_SMB_Fast)
              + vo_SMB_FastDeathRate[i_Layer]);

          // Recalculation of N balance under conditions of immobilisation
          vo_NBalance[i_Layer] = -(vo_SMB_SlowDelta[i_Layer] / po_CN_Ratio_SMB)
               - (vo_SMB_FastDelta[i_Layer] / po_CN_Ratio_SMB) - (vo_SOM_SlowDelta[i_Layer]
               / vo_CN_Ratio_SOM_Slow) - (vo_SOM_FastDelta[i_Layer] / vo_CN_Ratio_SOM_Fast);

          for (var i_Pool = 0, i_Pools = AOM_Pool.length; i_Pool < i_Pools; i_Pool++) {

            it_AOM_Pool = AOM_Pool[i_Pool];
            
            if (abs(it_AOM_Pool.vo_CN_Ratio_AOM_Fast) >= 1.0E-7) {

              vo_NBalance[i_Layer] -= (it_AOM_Pool.vo_AOM_FastDelta
                                       / it_AOM_Pool.vo_CN_Ratio_AOM_Fast);
            } // if

            if (abs(it_AOM_Pool.vo_CN_Ratio_AOM_Slow) >= 1.0E-7) {

              vo_NBalance[i_Layer] -= (it_AOM_Pool.vo_AOM_SlowDelta
                                       / it_AOM_Pool.vo_CN_Ratio_AOM_Slow);
            } // if

          } // for

          // AOM_Pool.forEach(function (it_AOM_Pool) {

          //   if (abs(it_AOM_Pool.vo_CN_Ratio_AOM_Fast) >= 1.0E-7) {

          //     vo_NBalance[i_Layer] -= (it_AOM_Pool.vo_AOM_FastDelta
          //                              / it_AOM_Pool.vo_CN_Ratio_AOM_Fast);
          //   } // if

          //   if (abs(it_AOM_Pool.vo_CN_Ratio_AOM_Slow) >= 1.0E-7) {

          //     vo_NBalance[i_Layer] -= (it_AOM_Pool.vo_AOM_SlowDelta
          //                              / it_AOM_Pool.vo_CN_Ratio_AOM_Slow);
          //   } // if
          // }); // for

          // Update of Soil NH4 after recalculated N balance
          soilColumn[i_Layer].vs_SoilNH4 += abs(vo_NBalance[i_Layer]);


        } else { //if
          // Bedarf kann durch Ammonium-Pool nicht gedeckt werden --> Nitrat wird verwendet
          if (abs(vo_NBalance[i_Layer]) >= (soilColumn[i_Layer].vs_SoilNH4
               * po_ImmobilisationRateCoeffNH4)) {

            soilColumn[i_Layer].vs_SoilNO3 -= abs(vo_NBalance[i_Layer])
                 - (soilColumn[i_Layer].vs_SoilNH4
                 * po_ImmobilisationRateCoeffNH4);

            soilColumn[i_Layer].vs_SoilNH4 -= soilColumn[i_Layer].vs_SoilNH4
                 * po_ImmobilisationRateCoeffNH4;

          } else { // if

            soilColumn[i_Layer].vs_SoilNH4 -= abs(vo_NBalance[i_Layer]);
            if (soilColumn[i_Layer].vs_SoilNH4 < 0)
              throw soilColumn[i_Layer].vs_SoilNH4;
          } //else
        } //else

      } else { //if (N_Balance[i_Layer]) < 0.0

        soilColumn[i_Layer].vs_SoilNH4 += abs(vo_NBalance[i_Layer]);
      }

    vo_NetNMineralisationRate[i_Layer] = abs(vo_NBalance[i_Layer])
        * soilColumn[0].vs_LayerThickness; // [kg m-3] --> [kg m-2]
    vo_NetNMineralisation += abs(vo_NBalance[i_Layer])
        * soilColumn[0].vs_LayerThickness; // [kg m-3] --> [kg m-2]
    vo_SumNetNMineralisation += abs(vo_NBalance[i_Layer])
          * soilColumn[0].vs_LayerThickness; // [kg m-3] --> [kg m-2]

    }
  };

  var fo_Volatilisation = function (
    vo_AOM_Addition,
    vw_MeanAirTemperature,
    vw_WindSpeed
    ) {
    
    var vo_SoilWet;
    var vo_AOM_TAN_Content; // added organic matter total ammonium content [g N kg FM OM-1]
    var vo_MaxVolatilisation; // Maximum volatilisation [kg N ha-1 (kg N ha-1)-1]
    var vo_VolatilisationHalfLife; // [d]
    var vo_VolatilisationRate; // [kg N ha-1 (kg N ha-1)-1 d-1]
    var vo_N_PotVolatilised; // Potential volatilisation [kg N m-2]
    var vo_N_PotVolatilisedSum = 0.0; // Sums up potential volatilisation of all AOM pools [kg N m-2]
    var vo_N_ActVolatilised = 0.0; // Actual volatilisation [kg N m-2]

    var vo_DaysAfterApplicationSum = 0;

    if (soilColumn[0].vs_SoilMoisture_pF() > 2.5) {
      vo_SoilWet = 0.0;
    } else {
      vo_SoilWet = 1.0;
    }

    var AOM_Pool = soilColumn[0].vo_AOM_Pool;

    AOM_Pool.forEach(function (it_AOM_Pool) {

      vo_DaysAfterApplicationSum += it_AOM_Pool.vo_DaysAfterApplication;
    });

    if (vo_DaysAfterApplicationSum > 0 || vo_AOM_Addition) {

      /** @todo <b>Claas: </b> if (vo_AOM_Addition == true)
       vo_DaysAfterApplication[vo_AOM_PoolAllocator]= 1; */

      vo_N_PotVolatilisedSum = 0.0;

      AOM_Pool.forEach(function (it_AOM_Pool) {

        vo_AOM_TAN_Content = 0.0;
        vo_MaxVolatilisation = 0.0;
        vo_VolatilisationHalfLife = 0.0;
        vo_VolatilisationRate = 0.0;
        vo_N_PotVolatilised = 0.0;

        vo_AOM_TAN_Content = it_AOM_Pool.vo_AOM_NH4Content * 1000.0 * it_AOM_Pool.vo_AOM_DryMatterContent;

        vo_MaxVolatilisation = 0.0495 * pow(1.1020, vo_SoilWet) * pow(1.0223, vw_MeanAirTemperature) * pow(1.0417,
                           vw_WindSpeed) * pow(1.1080, it_AOM_Pool.vo_AOM_DryMatterContent) * pow(0.8280, vo_AOM_TAN_Content) * pow(
                               11.300, Number(it_AOM_Pool.incorporation));

        vo_VolatilisationHalfLife = 1.0380 * pow(1.1020, vo_SoilWet) * pow(0.9600, vw_MeanAirTemperature) * pow(0.9500,
                        vw_WindSpeed) * pow(1.1750, it_AOM_Pool.vo_AOM_DryMatterContent) * pow(1.1060, vo_AOM_TAN_Content) * pow(
                                                  1.0000, Number(it_AOM_Pool.incorporation)) * (18869.3 * exp(-soilColumn[0].vs_SoilpH / 0.63321) + 0.70165);

        // ******************************************************************************************
        // *** Based on He et al. (1999): Soil Sci. 164 (10), 750-758. The curves on p. 755 were  ***
        // *** digitised and fit to Michaelis-Menten. The pH - Nhalf relation was normalised (pH  ***
        // *** 7.0 = 1; average soil pH of the ALFAM experiments) and fit to a decay function.    ***
        // *** The resulting factor was added to the Half Life calculation.                       ***
        // ******************************************************************************************

        vo_VolatilisationRate = vo_MaxVolatilisation * (vo_VolatilisationHalfLife / (pow((it_AOM_Pool.vo_DaysAfterApplication + vo_VolatilisationHalfLife), 2.0)));

        vo_N_PotVolatilised = vo_VolatilisationRate * vo_AOM_TAN_Content * (it_AOM_Pool.vo_AOM_Slow
                    + it_AOM_Pool.vo_AOM_Fast) / 10000.0 / 1000.0;

        vo_N_PotVolatilisedSum += vo_N_PotVolatilised;

        // debug('vo_VolatilisationRate', vo_VolatilisationRate);
        // debug('vo_SoilWet', vo_SoilWet);
        // debug('vw_MeanAirTemperature', vw_MeanAirTemperature);
        // debug('vw_WindSpeed', vw_WindSpeed);
        // debug('it_AOM_Pool.vo_AOM_DryMatterContent', it_AOM_Pool.vo_AOM_DryMatterContent);
        // debug('Number(it_AOM_Pool.incorporation)', Number(it_AOM_Pool.incorporation));
        // debug('soilColumn[0].vs_SoilpH ', soilColumn[0].vs_SoilpH);
        // debug('vo_N_PotVolatilised', vo_N_PotVolatilised);
        // debug('vo_AOM_TAN_Content', vo_AOM_TAN_Content);
        // debug('vo_MaxVolatilisation', vo_MaxVolatilisation);
        // debug('vo_VolatilisationHalfLife', vo_VolatilisationHalfLife);
        // debug('it_AOM_Pool.vo_DaysAfterApplication', it_AOM_Pool.vo_DaysAfterApplication);
        // debug('AOM_Pool', AOM_Pool);

      });

      if (soilColumn[0].vs_SoilNH4 > (vo_N_PotVolatilisedSum)) {
        vo_N_ActVolatilised = vo_N_PotVolatilisedSum;
      } else {
        vo_N_ActVolatilised = soilColumn[0].vs_SoilNH4;
      }
      // update NH4 content of top soil layer with volatilisation balance

      soilColumn[0].vs_SoilNH4 -= (vo_N_ActVolatilised / soilColumn[0].vs_LayerThickness);
    } else {
      vo_N_ActVolatilised = 0.0;
    }

    if (soilColumn[0].vs_SoilNH4 < 0)
      throw soilColumn[0].vs_SoilNH4;

    // NH3 volatilised from top layer NH4 pool. See Urea section
    vo_Total_NH3_Volatilised = (vo_N_ActVolatilised + vo_NH3_Volatilised); // [kg N m-2]
    /** @todo <b>Claas: </b>Zusammenfassung für output. Wohin damit??? */

    AOM_Pool.forEach(function (it_AOM_Pool) {

      if (it_AOM_Pool.vo_DaysAfterApplication > 0 && !vo_AOM_Addition) {
        it_AOM_Pool.vo_DaysAfterApplication++;
      }
    });
  }

  var fo_Nitrification = function () {

    if (soilColumn[0].vs_SoilNO3 < 0)
      throw soilColumn[0].vs_SoilNO3;
   
    var nools = soilColumn.vs_NumberOfOrganicLayers();
    var po_AmmoniaOxidationRateCoeffStandard = centralParameterProvider.userSoilOrganicParameters.po_AmmoniaOxidationRateCoeffStandard;
    var po_NitriteOxidationRateCoeffStandard = centralParameterProvider.userSoilOrganicParameters.po_NitriteOxidationRateCoeffStandard;

    //! Nitrification rate coefficient [d-1]
    var vo_AmmoniaOxidationRateCoeff = new Array(nools);
    var vo_NitriteOxidationRateCoeff = new Array(nools);

    //! Nitrification rate [kg NH4-N m-3 d-1]
    var vo_AmmoniaOxidationRate = new Array(nools);
    var vo_NitriteOxidationRate = new Array(nools);

    for (var i_Layer = 0; i_Layer < nools; i_Layer++) {

      // Calculate nitrification rate coefficients
  //    cout << "SO-2:\t" << soilColumn[i_Layer].vs_SoilMoisture_pF() << endl;
      vo_AmmoniaOxidationRateCoeff[i_Layer] = po_AmmoniaOxidationRateCoeffStandard * fo_TempOnNitrification(
          soilColumn[i_Layer].get_Vs_SoilTemperature()) * fo_MoistOnNitrification(soilColumn[i_Layer].vs_SoilMoisture_pF());

      vo_AmmoniaOxidationRate[i_Layer] = vo_AmmoniaOxidationRateCoeff[i_Layer] * soilColumn[i_Layer].vs_SoilNH4;

      vo_NitriteOxidationRateCoeff[i_Layer] = po_NitriteOxidationRateCoeffStandard
          * fo_TempOnNitrification(soilColumn[i_Layer].get_Vs_SoilTemperature())
          * fo_MoistOnNitrification(soilColumn[i_Layer].vs_SoilMoisture_pF())
              * fo_NH3onNitriteOxidation(soilColumn[i_Layer].vs_SoilNH4,soilColumn[i_Layer].vs_SoilpH);

      vo_NitriteOxidationRate[i_Layer] = vo_NitriteOxidationRateCoeff[i_Layer] * soilColumn[i_Layer].vs_SoilNH4;

    }

    // debug('vo_AmmoniaOxidationRateCoeff', vo_AmmoniaOxidationRateCoeff);
    // debug('vo_NitriteOxidationRate', vo_NitriteOxidationRate);

    if (soilColumn[0].vs_SoilNH4 < 0)
      throw soilColumn[0].vs_SoilNH4;

    if (soilColumn[0].vs_SoilNO2 < 0)
      throw soilColumn[0].vs_SoilNO2;

    if (soilColumn[0].vs_SoilNO3 < 0)
      throw soilColumn[0].vs_SoilNO3;

    // Update NH4, NO2 and NO3 content with nitrification balance
    // Stange, F., C. Nendel (2014): N.N., in preparation


    for (var i_Layer = 0; i_Layer < nools; i_Layer++) {

      if (soilColumn[i_Layer].vs_SoilNH4 > vo_AmmoniaOxidationRate[i_Layer]) {

        soilColumn[i_Layer].vs_SoilNH4 -= vo_AmmoniaOxidationRate[i_Layer];
        soilColumn[i_Layer].vs_SoilNO2 += vo_AmmoniaOxidationRate[i_Layer];


      } else {

        soilColumn[i_Layer].vs_SoilNO2 += soilColumn[i_Layer].vs_SoilNH4;
        soilColumn[i_Layer].vs_SoilNH4 = 0.0;
      }

      if (soilColumn[i_Layer].vs_SoilNO2 > vo_NitriteOxidationRate[i_Layer]) {

        soilColumn[i_Layer].vs_SoilNO2 -= vo_NitriteOxidationRate[i_Layer];
        soilColumn[i_Layer].vs_SoilNO3 += vo_NitriteOxidationRate[i_Layer];


      } else {

        soilColumn[i_Layer].vs_SoilNO3 += soilColumn[i_Layer].vs_SoilNO2;
        soilColumn[i_Layer].vs_SoilNO2 = 0.0;
      }
    }

    // debug('vo_NitriteOxidationRate', vo_NitriteOxidationRate);
    // debug('vo_AmmoniaOxidationRate', vo_AmmoniaOxidationRate);

    if (soilColumn[0].vs_SoilNH4 < 0)
      throw soilColumn[0].vs_SoilNH4;

    if (soilColumn[0].vs_SoilNO2 < 0)
      throw soilColumn[0].vs_SoilNO2;

    if (soilColumn[0].vs_SoilNO3 < 0)
      throw soilColumn[0].vs_SoilNO3;

  };

  var fo_Denitrification = function () {

    var nools = soilColumn.vs_NumberOfOrganicLayers();
    var vo_PotDenitrificationRate = new Array(nools);
    var po_SpecAnaerobDenitrification = centralParameterProvider.userSoilOrganicParameters.po_SpecAnaerobDenitrification;
    var po_TransportRateCoeff = centralParameterProvider.userSoilOrganicParameters.po_TransportRateCoeff;
    vo_TotalDenitrification = 0.0;

    for (var i_Layer = 0; i_Layer < nools; i_Layer++) {

      //Temperature function is the same as in Nitrification subroutine
      vo_PotDenitrificationRate[i_Layer] = po_SpecAnaerobDenitrification
          * vo_SMB_CO2EvolutionRate[i_Layer]
          * fo_TempOnNitrification(soilColumn[i_Layer].get_Vs_SoilTemperature());

      vo_ActDenitrificationRate[i_Layer] = min(vo_PotDenitrificationRate[i_Layer]
           * fo_MoistOnDenitrification(soilColumn[i_Layer].get_Vs_SoilMoisture_m3(),
           soilColumn[i_Layer].get_Saturation()), po_TransportRateCoeff
           * soilColumn[i_Layer].vs_SoilNO3);

      // debug('fo_TempOnNitrification ' + i_Layer, fo_TempOnNitrification(soilColumn[i_Layer].get_Vs_SoilTemperature()));
      // debug('fo_MoistOnDenitrification ' + i_Layer, fo_MoistOnDenitrification(soilColumn[i_Layer].get_Vs_SoilMoisture_m3(),
      //      soilColumn[i_Layer].get_Saturation()));
      // debug('soilColumn.that['+i_Layer+'].vs_SoilNO3', soilColumn[i_Layer].vs_SoilNO3);
    }

      // update NO3 content of soil layer with denitrification balance [kg N m-3]

    for (var i_Layer = 0; i_Layer < nools; i_Layer++) {

      if (soilColumn[i_Layer].vs_SoilNO3 > vo_ActDenitrificationRate[i_Layer]) {

        
        soilColumn[i_Layer].vs_SoilNO3 -= vo_ActDenitrificationRate[i_Layer];

      } else {

        vo_ActDenitrificationRate[i_Layer] = soilColumn[i_Layer].vs_SoilNO3;
        soilColumn[i_Layer].vs_SoilNO3 = 0.0;

      }

      vo_TotalDenitrification += vo_ActDenitrificationRate[i_Layer] * soilColumn[0].vs_LayerThickness; // [kg m-3] --> [kg m-2] ;
    }

    vo_SumDenitrification += vo_TotalDenitrification; // [kg N m-2]

    // debug('vo_PotDenitrificationRate', vo_PotDenitrificationRate);
    // debug('po_SpecAnaerobDenitrification', po_SpecAnaerobDenitrification);
    // debug('po_TransportRateCoeff', po_TransportRateCoeff);
    // debug('vo_TotalDenitrification', vo_TotalDenitrification);
    // debug('vo_SMB_CO2EvolutionRate'[i_Layer], vo_SMB_CO2EvolutionRate[i_Layer]);
    // debug('fo_TempOnNitrification', fo_TempOnNitrification(soilColumn[i_Layer].get_Vs_SoilTemperature()));
    // debug('fo_MoistOnDenitrification', fo_MoistOnDenitrification(soilColumn[i_Layer].get_Vs_SoilMoisture_m3(),
    //        soilColumn[i_Layer].get_Saturation()));
    // debug('po_TransportRateCoeff', po_TransportRateCoeff);
    // debug('vo_ActDenitrificationRate', vo_ActDenitrificationRate);

    if (vo_TotalDenitrification < 0)
      throw vo_TotalDenitrification;

  };


  var fo_N2OProduction = function () {

    var nools = soilColumn.vs_NumberOfOrganicLayers();
    var vo_N2OProduction = new Array(nools);
    var po_N2OProductionRate = centralParameterProvider.userSoilOrganicParameters.po_N2OProductionRate;
    vo_N2O_Produced = 0.0;

    for (var i_Layer = 0; i_Layer < nools; i_Layer++) {

        vo_N2OProduction[i_Layer] = soilColumn[i_Layer].vs_SoilNO2
             * fo_TempOnNitrification(soilColumn[i_Layer].get_Vs_SoilTemperature())
             * po_N2OProductionRate * (1.0 / (1.0 +
             (pow(10.0,soilColumn[i_Layer].vs_SoilpH) - organicConstants.po_pKaHNO2)));

        vo_N2O_Produced += vo_N2OProduction[i_Layer];
    }

  };

  var fo_PoolUpdate = function () {
    
    for (var i_Layer = 0; i_Layer < soilColumn.vs_NumberOfOrganicLayers(); i_Layer++) {

      var AOM_Pool = soilColumn[i_Layer].vo_AOM_Pool;

      vo_AOM_SlowDeltaSum[i_Layer] = 0.0;
      vo_AOM_FastDeltaSum[i_Layer] = 0.0;
      vo_AOM_SlowSum[i_Layer] = 0.0;
      vo_AOM_FastSum[i_Layer] = 0.0;

      AOM_Pool.forEach(function (it_AOM_Pool) {
        it_AOM_Pool.vo_AOM_Slow += it_AOM_Pool.vo_AOM_SlowDelta;
        it_AOM_Pool.vo_AOM_Fast += it_AOM_Pool.vo_AOM_FastDelta;

        vo_AOM_SlowDeltaSum[i_Layer] += it_AOM_Pool.vo_AOM_SlowDelta;
        vo_AOM_FastDeltaSum[i_Layer] += it_AOM_Pool.vo_AOM_FastDelta;

        vo_AOM_SlowSum[i_Layer] += it_AOM_Pool.vo_AOM_Slow;
        vo_AOM_FastSum[i_Layer] += it_AOM_Pool.vo_AOM_Fast;
      });

      soilColumn[i_Layer].vs_SOM_Slow += vo_SOM_SlowDelta[i_Layer];
      soilColumn[i_Layer].vs_SOM_Fast += vo_SOM_FastDelta[i_Layer];
      soilColumn[i_Layer].vs_SMB_Slow += vo_SMB_SlowDelta[i_Layer];
      soilColumn[i_Layer].vs_SMB_Fast += vo_SMB_FastDelta[i_Layer];

      if (i_Layer == 0) {

        vo_CBalance[i_Layer] = vo_AOM_SlowInput + vo_AOM_FastInput + vo_AOM_SlowDeltaSum[i_Layer]
               + vo_AOM_FastDeltaSum[i_Layer] + vo_SMB_SlowDelta[i_Layer]
               + vo_SMB_FastDelta[i_Layer] + vo_SOM_SlowDelta[i_Layer]
               + vo_SOM_FastDelta[i_Layer] + vo_SOM_FastInput;

      } else {
        vo_CBalance[i_Layer] = vo_AOM_SlowDeltaSum[i_Layer]
               + vo_AOM_FastDeltaSum[i_Layer] + vo_SMB_SlowDelta[i_Layer]
               + vo_SMB_FastDelta[i_Layer] + vo_SOM_SlowDelta[i_Layer]
               + vo_SOM_FastDelta[i_Layer];
      }


      vo_SoilOrganicC[i_Layer] = (soilColumn[i_Layer].vs_SoilOrganicCarbon() * soilColumn[i_Layer].vs_SoilBulkDensity()) - vo_InertSoilOrganicC[i_Layer]; // ([kg C kg-1] * [kg m-3]) - [kg C m-3]
      vo_SoilOrganicC[i_Layer] += vo_CBalance[i_Layer];
      
      soilColumn[i_Layer].set_SoilOrganicCarbon((vo_SoilOrganicC[i_Layer] + vo_InertSoilOrganicC[i_Layer]) / soilColumn[i_Layer].vs_SoilBulkDensity()); // [kg C m-3] / [kg m-3] --> [kg C kg-1]

    soilColumn[i_Layer].set_SoilOrganicMatter((vo_SoilOrganicC[i_Layer] + vo_InertSoilOrganicC[i_Layer])/ organicConstants.po_SOM_to_C
                / soilColumn[i_Layer].vs_SoilBulkDensity()); // [kg C m-3] / [kg m-3] --> [kg C kg-1]
    } // for
  };

  var fo_ClayOnDecompostion = function (d_SoilClayContent, d_LimitClayEffect) {
    
    var fo_ClayOnDecompostion=0.0;

    if (d_SoilClayContent >= 0.0 && d_SoilClayContent <= d_LimitClayEffect) {
      fo_ClayOnDecompostion = 1.0 - 2.0 * d_SoilClayContent;
    } else if (d_SoilClayContent > d_LimitClayEffect && d_SoilClayContent <= 1.0) {
      fo_ClayOnDecompostion = 1.0 - 2.0 * d_LimitClayEffect;
    } else {
      debug("irregular clay content");
    }
    return fo_ClayOnDecompostion;
  };

  var fo_TempOnDecompostion = function (d_SoilTemperature) {
    
    var fo_TempOnDecompostion=0.0;

    if (d_SoilTemperature <= 0.0 && d_SoilTemperature > -40.0) {

      //
      fo_TempOnDecompostion = 0.0;

    } else if (d_SoilTemperature > 0.0 && d_SoilTemperature <= 20.0) {

      fo_TempOnDecompostion = 0.1 * d_SoilTemperature;

    } else if (d_SoilTemperature > 20.0 && d_SoilTemperature <= 70.0) {

      fo_TempOnDecompostion = exp(0.47 - (0.027 * d_SoilTemperature) + (0.00193 * d_SoilTemperature * d_SoilTemperature));
    } else {
      debug("irregular soil temperature fo_TempOnDecompostion (d_SoilTemperature = "+d_SoilTemperature+")");
    }

    return fo_TempOnDecompostion;
  };

  var fo_MoistOnDecompostion = function (d_SoilMoisture_pF) {
    
    var fo_MoistOnDecompostion=0.0;

    if (abs(d_SoilMoisture_pF) <= 1.0E-7) {
      //
      fo_MoistOnDecompostion = 0.6;

    } else if (d_SoilMoisture_pF > 0.0 && d_SoilMoisture_pF <= 1.5) {
      //
      fo_MoistOnDecompostion = 0.6 + 0.4 * (d_SoilMoisture_pF / 1.5);

    } else if (d_SoilMoisture_pF > 1.5 && d_SoilMoisture_pF <= 2.5) {
      //
      fo_MoistOnDecompostion = 1.0;

    } else if (d_SoilMoisture_pF > 2.5 && d_SoilMoisture_pF <= 6.5) {
      //
      fo_MoistOnDecompostion = 1.0 - ((d_SoilMoisture_pF - 2.5) / 4.0);

    } else if (d_SoilMoisture_pF > 6.5) {

      fo_MoistOnDecompostion = 0.0;

    }  else if (d_SoilMoisture_pF === -Infinity) { /* TODO: Special JavaScript case ? */
      fo_MoistOnDecompostion = 0.0;
    
    } else {
      debug("fo_MoistOnDecompostion ( d_SoilMoisture_pF ) : irregular soil water content");
    }

    return fo_MoistOnDecompostion;
  };

  var fo_MoistOnHydrolysis = function (d_SoilMoisture_pF) {

    if (DEBUG) debug(arguments);

    var fo_MoistOnHydrolysis=0.0;

    if (d_SoilMoisture_pF > 0.0 && d_SoilMoisture_pF <= 1.1) {
      fo_MoistOnHydrolysis = 0.72;

    } else if (d_SoilMoisture_pF > 1.1 && d_SoilMoisture_pF <= 2.4) {
      fo_MoistOnHydrolysis = 0.2207 * d_SoilMoisture_pF + 0.4672;

    } else if (d_SoilMoisture_pF > 2.4 && d_SoilMoisture_pF <= 3.4) {
      fo_MoistOnHydrolysis = 1.0;

    } else if (d_SoilMoisture_pF > 3.4 && d_SoilMoisture_pF <= 4.6) {
      fo_MoistOnHydrolysis = -0.8659 * d_SoilMoisture_pF + 3.9849;

    } else if (d_SoilMoisture_pF > 4.6) {
      fo_MoistOnHydrolysis = 0.0;

    } else if (d_SoilMoisture_pF === -Infinity) { /* TODO: Special JavaScript case ? */
      fo_MoistOnHydrolysis = 0.0;
    
    } else {
      debug("fo_MoistOnHydrolysis ( d_SoilMoisture_pF: "+d_SoilMoisture_pF+" ) irregular soil water content");
    }

    return fo_MoistOnHydrolysis;
  };

  var fo_TempOnNitrification = function (d_SoilTemperature) {
    
    var fo_TempOnNitrification=0.0;

    if (d_SoilTemperature <= 2.0 && d_SoilTemperature > -40.0) {
      fo_TempOnNitrification = 0.0;

    } else if (d_SoilTemperature > 2.0 && d_SoilTemperature <= 6.0) {
      fo_TempOnNitrification = 0.15 * (d_SoilTemperature - 2.0);

    } else if (d_SoilTemperature > 6.0 && d_SoilTemperature <= 20.0) {
      fo_TempOnNitrification = 0.1 * d_SoilTemperature;

    } else if (d_SoilTemperature > 20.0 && d_SoilTemperature <= 70.0) {
      fo_TempOnNitrification
          = exp(0.47 - (0.027 * d_SoilTemperature) + (0.00193 * d_SoilTemperature * d_SoilTemperature));
    } else {
      debug("irregular soil temperature");
    }

    return fo_TempOnNitrification;
  };

  var fo_MoistOnNitrification = function (d_SoilMoisture_pF) {
    
    var fo_MoistOnNitrification=0.0;

    if (abs(d_SoilMoisture_pF) <= 1.0E-7) {
      fo_MoistOnNitrification = 0.6;

    } else if (d_SoilMoisture_pF > 0.0 && d_SoilMoisture_pF <= 1.5) {
      fo_MoistOnNitrification = 0.6 + 0.4 * (d_SoilMoisture_pF / 1.5);

    } else if (d_SoilMoisture_pF > 1.5 && d_SoilMoisture_pF <= 2.5) {
      fo_MoistOnNitrification = 1.0;

    } else if (d_SoilMoisture_pF > 2.5 && d_SoilMoisture_pF <= 5.0) {
      fo_MoistOnNitrification = 1.0 - ((d_SoilMoisture_pF - 2.5) / 2.5);

    } else if (d_SoilMoisture_pF > 5.0) {
      fo_MoistOnNitrification = 0.0;

    } else {
      debug("irregular soil water content");
    }
    return fo_MoistOnNitrification;
  };

  var fo_MoistOnDenitrification = function (d_SoilMoisture_m3, d_Saturation) {

    var po_Denit1 = centralParameterProvider.userSoilOrganicParameters.po_Denit1;
    var po_Denit2 = centralParameterProvider.userSoilOrganicParameters.po_Denit2;
    var po_Denit3 = centralParameterProvider.userSoilOrganicParameters.po_Denit3;
    var fo_MoistOnDenitrification=0.0;

    if ((d_SoilMoisture_m3 / d_Saturation) <= 0.8) {
      fo_MoistOnDenitrification = 0.0;

    } else if ((d_SoilMoisture_m3 / d_Saturation) > 0.8 && (d_SoilMoisture_m3 / d_Saturation) <= 0.9) {

      fo_MoistOnDenitrification = po_Denit1 * ((d_SoilMoisture_m3 / d_Saturation)
           - po_Denit2) / (po_Denit3 - po_Denit2);

    } else if ((d_SoilMoisture_m3 / d_Saturation) > 0.9 && (d_SoilMoisture_m3 / d_Saturation) <= 1.0) {

      fo_MoistOnDenitrification = po_Denit1 + (1.0 - po_Denit1)
          * ((d_SoilMoisture_m3 / d_Saturation) - po_Denit3) / (1.0 - po_Denit3);
    } else {
      debug("irregular soil water content");
    }

    return fo_MoistOnDenitrification;
  };

  var fo_NH3onNitriteOxidation = function (d_SoilNH4, d_SoilpH) {

    var po_Inhibitor_NH3 = centralParameterProvider.userSoilOrganicParameters.po_Inhibitor_NH3;
    var fo_NH3onNitriteOxidation=0.0;

    fo_NH3onNitriteOxidation = po_Inhibitor_NH3 + d_SoilNH4 * (1.0 - 1.0 / (1.0
         + pow(10.0,(d_SoilpH - organicConstants.po_pKaNH3)))) / po_Inhibitor_NH3;

    return fo_NH3onNitriteOxidation;
  };

  var fo_NetEcosystemProduction = function (d_NetPrimaryProduction, d_DecomposerRespiration) {

    var vo_NEP = 0.0;

    vo_NEP = d_NetPrimaryProduction - (d_DecomposerRespiration * 10000.0); // [kg C ha-1 d-1]

    return vo_NEP;
  };

  var fo_NetEcosystemExchange = function (d_NetPrimaryProduction, d_DecomposerRespiration) {

    // NEE = NEP (M.U.F. Kirschbaum and R. Mueller (2001): Net Ecosystem Exchange. Workshop Proceedings CRC for greenhouse accounting.
    // Per definition: NPP is negative and respiration is positive

    var vo_NEE = 0.0;

    vo_NEE = - d_NetPrimaryProduction + (d_DecomposerRespiration * 10000.0); // [kg C ha-1 d-1]

    return vo_NEE;
  };

  var get_SoilOrganicC = function (i_Layer)  {
    return vo_SoilOrganicC[i_Layer] / soilColumn[i_Layer].vs_SoilBulkDensity();
  };

  var get_AOM_FastSum = function (i_Layer) {
    return vo_AOM_FastSum[i_Layer];
  };

  var get_AOM_SlowSum = function (i_Layer) {
    return vo_AOM_SlowSum[i_Layer];
  };

  var get_SMB_Fast = function (i_Layer) {
    return soilColumn[i_Layer].vs_SMB_Fast;
  };

  var get_SMB_Slow = function (i_Layer) {
    return soilColumn[i_Layer].vs_SMB_Slow;
  };

  var get_SOM_Fast = function (i_Layer) {
    return soilColumn[i_Layer].vs_SOM_Fast;
  };

  var get_SOM_Slow = function (i_Layer) {
    return soilColumn[i_Layer].vs_SOM_Slow;
  };

  var get_CBalance = function (i_Layer) {
    return vo_CBalance[i_Layer];
  };

  var get_SMB_CO2EvolutionRate = function (i_Layer) {
    return vo_SMB_CO2EvolutionRate[i_Layer];
  };

  var get_ActDenitrificationRate = function (i_Layer) {
    return vo_ActDenitrificationRate[i_Layer];
  };

  var get_NetNMineralisationRate = function (i_Layer) {
    return vo_NetNMineralisationRate[i_Layer] * 10000.0;
  };

  var get_NetNMineralisation = function () {
    return vo_NetNMineralisation * 10000.0;
  };

  var get_SumNetNMineralisation = function () {
    return vo_SumNetNMineralisation * 10000.0;
  };

  var get_SumDenitrification = function () {
    return vo_SumDenitrification * 10000.0;
  };

  var get_Denitrification = function () {
    return vo_TotalDenitrification * 10000.0;
  };

  var get_NH3_Volatilised = function () {
    return vo_Total_NH3_Volatilised * 10000.0;
  };

  var get_SumNH3_Volatilised = function () {
    return vo_SumNH3_Volatilised * 10000.0;
  };

  var get_N2O_Produced = function () {
    return vo_N2O_Produced * 10000.0;
  };

  var get_SumN2O_Produced = function () {
    return vo_SumN2O_Produced * 10000.0;
  };

  var get_DecomposerRespiration = function () {
    return vo_DecomposerRespiration * 10000.0;
  };

  var get_NetEcosystemProduction = function () {
    return vo_NetEcosystemProduction;
  };

  var get_NetEcosystemExchange = function () {
    return vo_NetEcosystemExchange;
  };

  var put_Crop = function (c) {
    crop = c;
  };

  var remove_Crop = function () {
    crop = null;
  };

  return {
      step: step
    , addOrganicMatter: addOrganicMatter
    , addIrrigationWater: addIrrigationWater
    , setIncorporation: function (incorp) { incorporation = incorp; }
    , put_Crop: put_Crop
    , remove_Crop: remove_Crop
    , get_SoilOrganicC: get_SoilOrganicC
    , get_AOM_FastSum: get_AOM_FastSum
    , get_AOM_SlowSum: get_AOM_SlowSum
    , get_SMB_Fast: get_SMB_Fast
    , get_SMB_Slow: get_SMB_Slow
    , get_SOM_Fast: get_SOM_Fast
    , get_SOM_Slow: get_SOM_Slow
    , get_CBalance: get_CBalance
    , get_SMB_CO2EvolutionRate: get_SMB_CO2EvolutionRate
    , get_ActDenitrificationRate: get_ActDenitrificationRate
    , get_NetNMineralisationRate: get_NetNMineralisationRate
    , get_NH3_Volatilised: get_NH3_Volatilised
    , get_SumNH3_Volatilised: get_SumNH3_Volatilised
    , get_N2O_Produced: get_N2O_Produced
    , get_SumN2O_Produced: get_SumN2O_Produced
    , get_NetNMineralisation: get_NetNMineralisation
    , get_SumNetNMineralisation: get_SumNetNMineralisation
    , get_SumDenitrification: get_SumDenitrification
    , get_Denitrification: get_Denitrification
    , get_DecomposerRespiration: get_DecomposerRespiration
    , get_NetEcosystemProduction: get_NetEcosystemProduction
    , get_NetEcosystemExchange: get_NetEcosystemExchange
  };

};


var FrostComponent = function (sc, cpp) {
    
  var soilColumn = sc,
      centralParameterProvider = cpp,
      vm_FrostDepth = 0.0,
      vm_accumulatedFrostDepth = 0.0,
      vm_NegativeDegreeDays = 0.0,
      vm_ThawDepth = 0.0,
      vm_FrostDays = 0,
      vm_LambdaRedux = new Float64Array(sc.vs_NumberOfLayers() + 1),
      pt_TimeStep = centralParameterProvider.userEnvironmentParameters.p_timeStep,
      vm_HydraulicConductivityRedux = centralParameterProvider.userSoilMoistureParameters.pm_HydraulicConductivityRedux;

    for (var i = 0, is = vm_LambdaRedux.length; i < is; i++)
      vm_LambdaRedux[i] = 1.0;

  var calcSoilFrost = function (mean_air_temperature, snow_depth) {

    if (DEBUG) debug(arguments);

    // calculation of mean values
    var mean_field_capacity = getMeanFieldCapacity();
    var mean_bulk_density = getMeanBulkDensity();

    // heat conductivity for frozen and unfrozen soil
    var sii = calcSii(mean_field_capacity);
    var heat_conductivity_frozen = calcHeatConductivityFrozen(mean_bulk_density, sii);
    var heat_conductivity_unfrozen = calcHeatConductivityUnfrozen(mean_bulk_density, mean_field_capacity);

    // temperature under snow
    var temperature_under_snow = calcTemperatureUnderSnow(mean_air_temperature, snow_depth);

    // frost depth
    vm_FrostDepth = calcFrostDepth(mean_field_capacity, heat_conductivity_frozen, temperature_under_snow);
    if (isNaN(vm_FrostDepth))
      throw vm_FrostDepth;
    vm_accumulatedFrostDepth+=vm_FrostDepth;


    // thaw depth
    vm_ThawDepth = calcThawDepth(temperature_under_snow, heat_conductivity_unfrozen, mean_field_capacity);

    updateLambdaRedux();

  };

  var getMeanBulkDensity = function () {

    // in case of sensitivity analysis, this parameter would not be undefined
    // so return fix value instead of calculating mean bulk density
    // if (centralParameterProvider.sensitivityAnalysisParameters.p_MeanBulkDensity != UNDEFINED) {
    //   return centralParameterProvider.sensitivityAnalysisParameters.p_MeanBulkDensity;
    // }

    var vs_number_of_layers = soilColumn.vs_NumberOfLayers();
    var bulk_density_accu = 0.0;
    for (var i_Layer = 0; i_Layer < vs_number_of_layers; i_Layer++) {
      bulk_density_accu += soilColumn[i_Layer].vs_SoilBulkDensity();
    }
    return (bulk_density_accu / vs_number_of_layers / 1000.0); // [Mg m-3]
  };

  var getMeanFieldCapacity = function () {

    // in case of sensitivity analysis, this parameter would not be undefined
    // so return fix value instead of calculating mean bulk density
    // if (centralParameterProvider.sensitivityAnalysisParameters.p_MeanFieldCapacity != UNDEFINED) {
    //   return centralParameterProvider.sensitivityAnalysisParameters.p_MeanFieldCapacity;
    // }

    var vs_number_of_layers = soilColumn.vs_NumberOfLayers();
    var mean_field_capacity_accu = 0.0;
    for (var i_Layer = 0; i_Layer < vs_number_of_layers; i_Layer++) {
      mean_field_capacity_accu += soilColumn[i_Layer].get_FieldCapacity();
    }
    return (mean_field_capacity_accu / vs_number_of_layers);
  };

  var calcSii = function (mean_field_capacity) {

    if (DEBUG) debug(arguments);

    /** @TODO Parameters to be supplied from outside */
    var pt_F1 = 13.05; // Hansson et al. 2004
    var pt_F2 = 1.06; // Hansson et al. 2004

    var sii = (mean_field_capacity + (1.0 + (pt_F1 * pow(mean_field_capacity, pt_F2)) *
                        mean_field_capacity)) * 100.0;
    return sii;
  };


  /*
    mean_bulk_density [g m-3]

  */
  var calcHeatConductivityFrozen = function (mean_bulk_density, sii) {

    if (DEBUG) debug(arguments);
    
    // in case of sensitivity analysis, this parameter would not be undefined
    // so return fix value instead of calculating heat conductivity
    // if (centralParameterProvider.sensitivityAnalysisParameters.p_HeatConductivityFrozen != UNDEFINED) {
    //   return centralParameterProvider.sensitivityAnalysisParameters.p_HeatConductivityFrozen;
    // }

    var cond_frozen = ((3.0 * mean_bulk_density - 1.7) * 0.001) / (1.0
        + (11.5 - 5.0 * mean_bulk_density) * exp((-50.0) * pow((sii / mean_bulk_density), 1.5))) * // [cal cm-1 K-1 s-1]
        86400.0 * pt_TimeStep * // [cal cm-1 K-1 d-1]
        4.184 / // [J cm-1 K-1 d-1]
        1000000.0 * 100;//  [MJ m-1 K-1 d-1]

    return cond_frozen;
  };

  /*
    mean_bulk_density [g m-3]

  */
  var calcHeatConductivityUnfrozen = function (mean_bulk_density, mean_field_capacity) {

    if (DEBUG) debug(arguments);

    // in case of sensitivity analysis, this parameter would not be undefined
    // so return fix value instead of calculating heat conductivity
    // if (centralParameterProvider.sensitivityAnalysisParameters.p_HeatConductivityUnfrozen != UNDEFINED) {
    //   return centralParameterProvider.sensitivityAnalysisParameters.p_HeatConductivityUnfrozen;
    // }

    var cond_unfrozen = ((3.0 * mean_bulk_density - 1.7) * 0.001) / (1.0 + (11.5 - 5.0
          * mean_bulk_density) * exp((-50.0) * pow(((mean_field_capacity * 100.0) / mean_bulk_density), 1.5)))
          * pt_TimeStep * // [cal cm-1 K-1 s-1]
          4.184 * // [J cm-1 K-1 s-1]
          100.0; // [W m-1 K-1]

    return cond_unfrozen;
  };

  var calcThawDepth = function (temperature_under_snow, heat_conductivity_unfrozen, mean_field_capacity) {

    if (DEBUG) debug(arguments);

    var thaw_helper1 = 0.0;
    var thaw_helper2 = 0.0;
    var thaw_helper3 = 0.0;
    var thaw_helper4 = 0.0;

    var thaw_depth = 0.0;

    if (temperature_under_snow < 0.0) {
      thaw_helper1 = temperature_under_snow * -1.0;
    } else {
      thaw_helper1 = temperature_under_snow;
    }

    if (vm_FrostDepth == 0.0) {
      thaw_helper2 = 0.0;
    } else {
      /** @todo Claas: check that heat conductivity is in correct unit! */
      thaw_helper2 = sqrt(2.0 * heat_conductivity_unfrozen * thaw_helper1 / (1000.0 * 79.0
          * (mean_field_capacity * 100.0) / 100.0));
    }

    if (temperature_under_snow < 0.0) {
      thaw_helper3 = thaw_helper2 * -1.0;
    } else {
      thaw_helper3 = thaw_helper2;
    }

    thaw_helper4 = vm_ThawDepth + thaw_helper3;

    if (thaw_helper4 < 0.0){
      thaw_depth = 0.0;
    } else {
      thaw_depth = thaw_helper4;
    }
    return thaw_depth;
  };

  var calcFrostDepth = function (mean_field_capacity, heat_conductivity_frozen, temperature_under_snow) {

    if (DEBUG) debug(arguments);

    var frost_depth=0.0;

    // Heat released/absorbed on freezing/thawing
    var latent_heat = 1000.0 * (mean_field_capacity * 100.0) / 100.0 * 0.335;

    // Summation of number of days with frost
    if (vm_FrostDepth > 0.0) {
      vm_FrostDays++;
    }

    // Ratio of energy sum from subsoil to vm_LatentHeat
    var latent_heat_transfer = 0.3 * vm_FrostDays / latent_heat;

    // in case of sensitivity analysis, this parameter would not be undefined
    // so return fix value instead of calculating heat conductivity
    // if (centralParameterProvider.sensitivityAnalysisParameters.p_LatentHeatTransfer != UNDEFINED) {
    //   latent_heat_transfer = centralParameterProvider.sensitivityAnalysisParameters.p_LatentHeatTransfer;
    // }

    // Calculate temperature under snowpack
    /** @todo Claas: At a later stage temperature under snow to pass on to soil
     * surface temperature calculation in temperature module */
    if (temperature_under_snow < 0.0) {
      vm_NegativeDegreeDays -= temperature_under_snow;
    }

    if (vm_NegativeDegreeDays < 0.01) {
      frost_depth = 0.0;
    }
    else {
      frost_depth = sqrt(((latent_heat_transfer / 2.0) * (latent_heat_transfer / 2.0)) + (2.0
          * heat_conductivity_frozen * vm_NegativeDegreeDays / latent_heat)) - (latent_heat_transfer / 2.0);
    }

    return isNaN(frost_depth) ? 0.0 : frost_depth;
  };

  var calcTemperatureUnderSnow = function (mean_air_temperature, snow_depth) {

    if (DEBUG) debug(arguments);

    var temperature_under_snow = 0.0;
    if (snow_depth / 100.0 < 0.01) {
      temperature_under_snow = mean_air_temperature;
    } else if (vm_FrostDepth < 0.01) {
      temperature_under_snow = mean_air_temperature;
    } else {
      temperature_under_snow = mean_air_temperature / (1.0 + (10.0 * snow_depth / 100.0) / vm_FrostDepth);
    }

    return temperature_under_snow;
  };

  var updateLambdaRedux = function () {

    var vs_number_of_layers = soilColumn.vs_NumberOfLayers();

    for (var i_Layer = 0; i_Layer < vs_number_of_layers; i_Layer++) {

      if (i_Layer < (int(floor((vm_FrostDepth / soilColumn[i_Layer].vs_LayerThickness) + 0.5)))) {

        // soil layer is frozen
        soilColumn[i_Layer].vs_SoilFrozen = true;
        vm_LambdaRedux[i_Layer] = 0.0;

        if (i_Layer == 0) {
          vm_HydraulicConductivityRedux = 0.0;
        }
      }


      if (i_Layer < (int(floor((vm_ThawDepth / soilColumn[i_Layer].vs_LayerThickness) + 0.5)))) {
        // soil layer is thawing

        if (vm_ThawDepth < ((i_Layer + 1) * soilColumn[i_Layer].vs_LayerThickness) && (vm_ThawDepth < vm_FrostDepth)) {
          // soil layer is thawing but there is more frost than thaw
          soilColumn[i_Layer].vs_SoilFrozen = true;
          vm_LambdaRedux[i_Layer] = 0.0;
          if (i_Layer == 0) {
            vm_HydraulicConductivityRedux = 0.0;
          }

        } else {
          // soil is thawing
          soilColumn[i_Layer].vs_SoilFrozen = false;
          vm_LambdaRedux[i_Layer] = 1.0;
          if (i_Layer == 0) {
            vm_HydraulicConductivityRedux = 0.1;
          }
        }
      }

      // no more frost, because all layers are thawing
      if (vm_ThawDepth >= vm_FrostDepth) {
        vm_ThawDepth = 0.0;
        vm_FrostDepth = 0.0;
        vm_NegativeDegreeDays = 0.0;
        vm_FrostDays = 0;

        vm_HydraulicConductivityRedux = centralParameterProvider.userSoilMoistureParameters.pm_HydraulicConductivityRedux;
        for (var i_Layer = 0; i_Layer < vs_number_of_layers; i_Layer++) {
          soilColumn[i_Layer].vs_SoilFrozen = false;
          vm_LambdaRedux[i_Layer] = 1.0;
        }
      }
    }

  };

  var getLambdaRedux = function (layer) {
    return vm_LambdaRedux[layer];
  };

  return {
    calcSoilFrost: calcSoilFrost, 
    getFrostDepth: function () { return vm_FrostDepth; },
    getThawDepth: function () { return vm_ThawDepth; },
    getLambdaRedux: getLambdaRedux,
    getAccumulatedFrostDepth: function () { return vm_accumulatedFrostDepth; }
  };

};


var SnowComponent = function (cpp) {

  var vm_SnowDensity = 0.0,
      vm_SnowDepth = 0.0,
      vm_FrozenWaterInSnow = 0.0,
      vm_LiquidWaterInSnow = 0.0,
      vm_maxSnowDepth = 0.0,
      vm_AccumulatedSnowDepth = 0.0,
      centralParameterProvider = cpp,
      sm_params = centralParameterProvider.userSoilMoistureParameters,
      vm_WaterToInfiltrate = 0,

      vm_SnowmeltTemperature = sm_params.pm_SnowMeltTemperature, // Base temperature for snowmelt [°C]
      vm_SnowAccumulationThresholdTemperature = sm_params.pm_SnowAccumulationTresholdTemperature,
      vm_TemperatureLimitForLiquidWater = sm_params.pm_TemperatureLimitForLiquidWater, // Lower temperature limit of liquid water in snow
      vm_CorrectionRain = sm_params.pm_CorrectionRain, // Correction factor for rain (no correction used here)
      vm_CorrectionSnow = sm_params.pm_CorrectionSnow, // Correction factor for snow (value used in COUP by Lars Egil H.)
      vm_RefreezeTemperature = sm_params.pm_RefreezeTemperature, // Base temperature for refreeze [°C]
      vm_RefreezeP1 = sm_params.pm_RefreezeParameter1, // Refreeze parameter (Karvonen's value)
      vm_RefreezeP2 = sm_params.pm_RefreezeParameter2, // Refreeze exponent (Karvonen's value)
      vm_NewSnowDensityMin = sm_params.pm_NewSnowDensityMin, // Minimum density of new snow
      vm_SnowMaxAdditionalDensity = sm_params.pm_SnowMaxAdditionalDensity, // Maximum additional density of snow (max rho = 0.35, Karvonen)
      vm_SnowPacking = sm_params.pm_SnowPacking, // Snow packing factor (calibrated by Helge Bonesmo)
      vm_SnowRetentionCapacityMin = sm_params.pm_SnowRetentionCapacityMin, // Minimum liquid water retention capacity in snow [mm]
      vm_SnowRetentionCapacityMax = sm_params.pm_SnowRetentionCapacityMax; // Maximum liquid water retention capacity in snow [mm]

  var calcSnowLayer = function (mean_air_temperature, net_precipitation) {

    if (DEBUG) debug(arguments);
      
    // Calcs netto precipitation
    var net_precipitation_snow = 0.0;
    var net_precipitation_water = 0.0;
    var obj = calcNetPrecipitation(mean_air_temperature, net_precipitation, net_precipitation_water, net_precipitation_snow);
    net_precipitation = obj.net_precipitation;
    net_precipitation_snow = obj.net_precipitation_snow;
    net_precipitation_water = obj.net_precipitation_water;

    // Calculate snowmelt
    var vm_Snowmelt = calcSnowMelt(mean_air_temperature);

    // Calculate refreeze in snow
    var vm_Refreeze=calcRefreeze(mean_air_temperature);

    // Calculate density of newly fallen snow
    var vm_NewSnowDensity = calcNewSnowDensity(mean_air_temperature,net_precipitation_snow);

    // Calculate average density of whole snowpack
    vm_SnowDensity = calcAverageSnowDensity(net_precipitation_snow, vm_NewSnowDensity);


    // Calculate amounts of water in frozen snow and liquid form
    vm_FrozenWaterInSnow = vm_FrozenWaterInSnow + net_precipitation_snow - vm_Snowmelt + vm_Refreeze;
    vm_LiquidWaterInSnow = vm_LiquidWaterInSnow + net_precipitation_water + vm_Snowmelt - vm_Refreeze;
    var vm_SnowWaterEquivalent = vm_FrozenWaterInSnow + vm_LiquidWaterInSnow; // snow water equivalent [mm]

    // Calculate snow's capacity to retain liquid
    var vm_LiquidWaterRetainedInSnow = calcLiquidWaterRetainedInSnow(vm_FrozenWaterInSnow, vm_SnowWaterEquivalent);

    // Calculate water release from snow
    var vm_SnowLayerWaterRelease = 0.0;
    if (vm_Refreeze > 0.0) {
      vm_SnowLayerWaterRelease = 0.0;
    } else if (vm_LiquidWaterInSnow <= vm_LiquidWaterRetainedInSnow) {
      vm_SnowLayerWaterRelease = 0;
    } else {
      vm_SnowLayerWaterRelease = vm_LiquidWaterInSnow - vm_LiquidWaterRetainedInSnow;
      vm_LiquidWaterInSnow -= vm_SnowLayerWaterRelease;
      vm_SnowWaterEquivalent = vm_FrozenWaterInSnow + vm_LiquidWaterInSnow;
    }

    // Calculate snow depth from snow water equivalent
    calcSnowDepth(vm_SnowWaterEquivalent);

    // Calculate potential infiltration to soil
    vm_WaterToInfiltrate = calcPotentialInfiltration(net_precipitation, vm_SnowLayerWaterRelease, vm_SnowDepth);
  };

  var calcSnowMelt = function (vw_MeanAirTemperature) {

    if (DEBUG) debug(arguments);

    var vm_MeltingFactor = 1.4 * (vm_SnowDensity / 0.1);
    var vm_Snowmelt = 0.0;

    if (vm_MeltingFactor > 4.7) {
      vm_MeltingFactor = 4.7;
    }

    if (vm_FrozenWaterInSnow <= 0.0) {
      vm_Snowmelt = 0.0;
    } else if (vw_MeanAirTemperature < vm_SnowmeltTemperature) {
      vm_Snowmelt = 0.0;
    } else {
      vm_Snowmelt = vm_MeltingFactor * (vw_MeanAirTemperature - vm_SnowmeltTemperature);
      if (vm_Snowmelt > vm_FrozenWaterInSnow) {
        vm_Snowmelt = vm_FrozenWaterInSnow;
      }
    }

    return vm_Snowmelt;
  };

  var calcNetPrecipitation = function (
    mean_air_temperature,
    net_precipitation,
    net_precipitation_water, // return values
    net_precipitation_snow // return values
    ) {

    if (DEBUG) debug(arguments);
    
    var liquid_water_precipitation = 0.0;

    // Calculate forms and proportions of precipitation
    if (mean_air_temperature >= vm_SnowAccumulationThresholdTemperature) {
      liquid_water_precipitation = 1.0;
    } else if (mean_air_temperature <= vm_TemperatureLimitForLiquidWater) {
      liquid_water_precipitation = 0.0;
    } else {
      liquid_water_precipitation = (mean_air_temperature - vm_TemperatureLimitForLiquidWater)
          / (vm_SnowAccumulationThresholdTemperature - vm_TemperatureLimitForLiquidWater);
    }

    net_precipitation_water = liquid_water_precipitation * vm_CorrectionRain * net_precipitation;
    net_precipitation_snow = (1.0 - liquid_water_precipitation) * vm_CorrectionSnow * net_precipitation;

    // Total net precipitation corrected for snow
    net_precipitation = net_precipitation_snow + net_precipitation_water;

    return {
      net_precipitation: net_precipitation,
      net_precipitation_snow: net_precipitation_snow,
      net_precipitation_water: net_precipitation_water
    };

  };

  var calcRefreeze = function (mean_air_temperature) {

    if (DEBUG) debug(arguments);

    var refreeze = 0.0;
    var refreeze_helper = 0.0;

    // no refreeze if it's too warm
    if (mean_air_temperature > 0) {
      refreeze_helper = 0;
    } else {
      refreeze_helper = mean_air_temperature;
    }

    if (refreeze_helper < vm_RefreezeTemperature) {
      if (vm_LiquidWaterInSnow > 0.0) {
        refreeze = vm_RefreezeP1 * pow((vm_RefreezeTemperature - refreeze_helper), vm_RefreezeP2);
      }
      if (refreeze > vm_LiquidWaterInSnow) {
        refreeze = vm_LiquidWaterInSnow;
      }
    } else {
      refreeze = 0;
    }
    return refreeze;
  };

  var calcNewSnowDensity = function (mean_air_temperature, net_precipitation_snow) {

    if (DEBUG) debug(arguments);
    
    var new_snow_density = 0.0;
    var snow_density_factor = 0.0;

    if (net_precipitation_snow <= 0.0) {
      // no snow
      new_snow_density = 0.0;
    } else {
      //
      snow_density_factor = ( 
        (mean_air_temperature - vm_TemperatureLimitForLiquidWater) / 
        (vm_SnowAccumulationThresholdTemperature - vm_TemperatureLimitForLiquidWater)
      );

      if (snow_density_factor > 1.0) {
        snow_density_factor = 1.0;
      }
      if (snow_density_factor < 0.0) {
        snow_density_factor = 0.0;
      }
      new_snow_density = vm_NewSnowDensityMin + vm_SnowMaxAdditionalDensity * snow_density_factor;
    }
    return new_snow_density;
  };

  var calcAverageSnowDensity = function (net_precipitation_snow, new_snow_density) {

    if (DEBUG) debug(arguments);

    var snow_density = 0.0;
    if ((vm_SnowDepth + net_precipitation_snow) <= 0.0) {
      // no snow
      snow_density = 0.0;
    } else {
      snow_density = (((1.0 + vm_SnowPacking) * vm_SnowDensity * vm_SnowDepth) +
                        (new_snow_density * net_precipitation_snow)) / (vm_SnowDepth + net_precipitation_snow);
      if (snow_density > (vm_NewSnowDensityMin + vm_SnowMaxAdditionalDensity)) {
        snow_density = vm_NewSnowDensityMin + vm_SnowMaxAdditionalDensity;
      }
    }
    return snow_density;
  };

  var calcLiquidWaterRetainedInSnow = function (frozen_water_in_snow, snow_water_equivalent) {

    if (DEBUG) debug(arguments);

    var snow_retention_capacity;
    var liquid_water_retained_in_snow;

    if ((frozen_water_in_snow <= 0.0) || (vm_SnowDensity <= 0.0)) {
      snow_retention_capacity = 0.0;
    } else {
      snow_retention_capacity = vm_SnowRetentionCapacityMax / 10.0 / vm_SnowDensity;

      if (snow_retention_capacity < vm_SnowRetentionCapacityMin)
        snow_retention_capacity = vm_SnowRetentionCapacityMin;
      if (snow_retention_capacity > vm_SnowRetentionCapacityMax)
        snow_retention_capacity = vm_SnowRetentionCapacityMax;
    }

    liquid_water_retained_in_snow = snow_retention_capacity * snow_water_equivalent;
    return liquid_water_retained_in_snow;
  };

  var calcPotentialInfiltration = function (net_precipitation, snow_layer_water_release, snow_depth) {

    if (DEBUG) debug(arguments);
    
    var water_to_infiltrate = net_precipitation;
    if (snow_depth >= 0.01){
      vm_WaterToInfiltrate = snow_layer_water_release;
    }
    return water_to_infiltrate;
  };

  var calcSnowDepth = function (snow_water_equivalent) {

    if (DEBUG) debug(arguments);

    var pm_WaterDensity = 1.0; // [kg dm-3]
    if (snow_water_equivalent <= 0.0) {
      vm_SnowDepth = 0.0;
    } else {
      vm_SnowDepth = snow_water_equivalent * pm_WaterDensity / vm_SnowDensity; // [mm * kg dm-3 kg-1 dm3]

      // check if new snow depth is higher than maximal snow depth
      if (vm_SnowDepth>vm_maxSnowDepth) {
        vm_maxSnowDepth = vm_SnowDepth;
      }

      if (vm_SnowDepth < 0.01) {
        vm_SnowDepth = 0.0;
      }
    }
    if (vm_SnowDepth == 0.0) {
      vm_SnowDensity = 0.0;
      vm_FrozenWaterInSnow = 0.0;
      vm_LiquidWaterInSnow = 0.0;
    }
    vm_AccumulatedSnowDepth+=vm_SnowDepth;
  };

  return {
      calcSnowLayer: calcSnowLayer
    , getVm_SnowDepth: function () { return vm_SnowDepth; }
    , getWaterToInfiltrate: function () { return vm_WaterToInfiltrate; }
    , getMaxSnowDepth: function () { return vm_maxSnowDepth; }
    , accumulatedSnowDepth: function () { return vm_AccumulatedSnowDepth; }
  };

};


var SoilMoisture = function (sc, stps, mm, cpp) {

  var soilColumn = sc,
      siteParameters = stps,
      monica = mm,
      centralParameterProvider = cpp,
      vm_NumberOfLayers = sc.vs_NumberOfLayers() + 1,
      vs_NumberOfLayers = sc.vs_NumberOfLayers(), //extern
      vm_ActualEvapotranspiration = 0.0,
      vm_AvailableWater = new Float64Array(vm_NumberOfLayers), // Soil available water in [mm]
      vm_CapillaryRise = 0,
      pm_CapillaryRiseRate = new Float64Array(vm_NumberOfLayers),
      vm_CapillaryWater = new Float64Array(vm_NumberOfLayers), // soil capillary water in [mm]
      vm_CapillaryWater70 = new Float64Array(vm_NumberOfLayers), // 70% of soil capillary water in [mm]
      vm_Evaporation = new Float64Array(vm_NumberOfLayers), //intern
      vm_Evapotranspiration = new Float64Array(vm_NumberOfLayers), //intern
      vm_FieldCapacity = new Float64Array(vm_NumberOfLayers),
      vm_FluxAtLowerBoundary = 0.0,
      vm_GravitationalWater = new Float64Array(vm_NumberOfLayers), // Gravitational water in [mm d-1] //intern
      vm_GrossPrecipitation = 0.0, //internal
      vm_GroundwaterAdded = 0,
      //vm_GroundwaterDistance = vm_NumberOfLayers, 0), // map  = joachim)
      vm_GroundwaterTable = 0,
      vm_HeatConductivity = new Float64Array(vm_NumberOfLayers),
      vm_Infiltration = 0.0,
      vm_Interception = 0.0,
      vc_KcFactor = 0.6,
      vm_Lambda = new Float64Array(vm_NumberOfLayers),
      vm_LambdaReduced = 0,
      vs_Latitude = stps.vs_Latitude,
      vm_LayerThickness = new Float64Array(vm_NumberOfLayers), //0.01, 
      vw_MaxAirTemperature = 0,
      vw_MeanAirTemperature = 0,
      vw_MinAirTemperature = 0,
      vc_NetPrecipitation = 0.0,
      vw_NetRadiation = 0,
      vm_PermanentWiltingPoint = new Float64Array(vm_NumberOfLayers),
      vc_PercentageSoilCoverage = 0.0,
      vm_PercolationRate = new Float64Array(vm_NumberOfLayers), // Percolation rate in [mm d-1] //intern
      vw_Precipitation = 0,
      vm_ReferenceEvapotranspiration = 6.0, //internal
      vw_RelativeHumidity = 0,
      vm_ResidualEvapotranspiration = new Float64Array(vm_NumberOfLayers),
      vm_SoilMoisture = new Float64Array(vm_NumberOfLayers), //0.20 //result 
      vm_SoilMoisture_crit = 0, 
      vm_SoilMoistureDeficit = 0,
      vm_SoilPoreVolume = new Float64Array(vm_NumberOfLayers),
      vc_StomataResistance = 0,
      vm_SurfaceRunOff = 0.0, //internal
      vm_SumSurfaceRunOff = 0.0, // intern accumulation variable
      vm_SurfaceWaterStorage = 0.0,
      vm_TotalWaterRemoval = 0,
      vm_Transpiration = new Float64Array(vm_NumberOfLayers), //intern
      vm_TranspirationDeficit = 0,
      vm_WaterFlux = new Float64Array(vm_NumberOfLayers),
      vw_WindSpeed = 0,
      vw_WindSpeedHeight = 0,
      vm_XSACriticalSoilMoisture = 0,
      crop = null

      vm_Infiltration = 0.0,
      vm_Interception = 0.0,
      vm_SurfaceRunOff = 0.0,
      vm_CapillaryRise = 0.0,
      vm_GroundwaterAdded = 0.0,
      vm_ActualTranspiration = 0.0,
      vm_PercolationFactor = 0.0,
      vm_LambdaReduced = 0.0;    

    for (var i = 0; i < vm_NumberOfLayers; i++) {
      vm_SoilMoisture[i] = 0.20;
      vm_LayerThickness[i] = 0.01;
      // vm_AvailableWater[i] = 0.0;
      // pm_CapillaryRiseRate[i] = 0.0;
      // vm_CapillaryWater[i] = 0.0;
      // vm_CapillaryWater70[i] = 0.0;
      // vm_Evaporation[i] = 0.0;
      // vm_Evapotranspiration[i] = 0.0;
      // vm_FieldCapacity[i] = 0.0;
      // vm_GravitationalWater[i] = 0.0;
      // vm_HeatConductivity[i] = 0.0;
      // vm_Lambda[i] = 0.0;
      // vm_PermanentWiltingPoint[i] = 0.0;
      // vm_PercolationRate[i] = 0.0;
      // vm_ResidualEvapotranspiration[i] = 0.0;
      // vm_SoilPoreVolume[i] = 0.0;
      // vm_Transpiration[i] = 0.0;
      // vm_WaterFlux[i] = 0.0;
    }

    console.log("Constructor: SoilMoisture");

  var snowComponent = new SnowComponent(centralParameterProvider),
      frostComponent = new FrostComponent(soilColumn, centralParameterProvider),
      sm_params = centralParameterProvider.userSoilMoistureParameters,
      env_params =  centralParameterProvider.userEnvironmentParameters,
      vm_HydraulicConductivityRedux = sm_params.pm_HydraulicConductivityRedux,
      pt_TimeStep = centralParameterProvider.userEnvironmentParameters.p_timeStep,
      vm_SurfaceRoughness = sm_params.pm_SurfaceRoughness,
      vm_GroundwaterDischarge = sm_params.pm_GroundwaterDischarge,
      pm_MaxPercolationRate = sm_params.pm_MaxPercolationRate,
      pm_LeachingDepth = env_params.p_LeachingDepth,
      pm_LayerThickness = env_params.p_LayerThickness,
      pm_LeachingDepthLayer = int(floor(0.5 + (pm_LeachingDepth / pm_LayerThickness))) - 1,
      vm_SaturatedHydraulicConductivity = new Array(vm_NumberOfLayers);

    for (var i=0; i<vm_NumberOfLayers; i++) {
      vm_SaturatedHydraulicConductivity[i] = sm_params.pm_SaturatedHydraulicConductivity; // original [8640 mm d-1]
    }

  var step = function (
    vs_GroundwaterDepth,
    vw_Precipitation,
    vw_MaxAirTemperature,
    vw_MinAirTemperature,
    vw_RelativeHumidity,
    vw_MeanAirTemperature,
    vw_WindSpeed,
    vw_WindSpeedHeight,
    vw_GlobalRadiation,
    vs_JulianDay
  ) {

    if(DEBUG) debug(arguments);

    for (var i_Layer = 0; i_Layer < vs_NumberOfLayers; i_Layer++) {
      // initialization with moisture values stored in the layer
      vm_SoilMoisture[i_Layer] = soilColumn[i_Layer].get_Vs_SoilMoisture_m3();
      vm_WaterFlux[i_Layer] = 0.0;
      vm_FieldCapacity[i_Layer] = soilColumn[i_Layer].get_FieldCapacity();
      vm_SoilPoreVolume[i_Layer] = soilColumn[i_Layer].get_Saturation();
      vm_PermanentWiltingPoint[i_Layer] = soilColumn[i_Layer].get_PermanentWiltingPoint();
      vm_LayerThickness[i_Layer] = soilColumn[i_Layer].vs_LayerThickness;
      vm_Lambda[i_Layer] = soilColumn[i_Layer].vs_Lambda;
    }

    vm_SoilMoisture[vm_NumberOfLayers - 1] = soilColumn[vm_NumberOfLayers - 2].get_Vs_SoilMoisture_m3();
    vm_WaterFlux[vm_NumberOfLayers - 1] = 0.0;
    vm_FieldCapacity[vm_NumberOfLayers - 1] = soilColumn[vm_NumberOfLayers - 2].get_FieldCapacity();
    vm_SoilPoreVolume[vm_NumberOfLayers - 1] = soilColumn[vm_NumberOfLayers - 2].get_Saturation();
    vm_LayerThickness[vm_NumberOfLayers - 1] = soilColumn[vm_NumberOfLayers - 2].vs_LayerThickness;
    vm_Lambda[vm_NumberOfLayers - 1] = soilColumn[vm_NumberOfLayers - 2].vs_Lambda;

    vm_SurfaceWaterStorage = soilColumn.vs_SurfaceWaterStorage;

    var vc_CropPlanted   = false;
    var vc_CropHeight  = 0.0;
    var vc_DevelopmentalStage = 0;

    if (monica.cropGrowth()) {
      vc_CropPlanted = true;
      vc_PercentageSoilCoverage = monica.cropGrowth().get_SoilCoverage();
      vc_KcFactor = monica.cropGrowth().get_KcFactor();
      vc_CropHeight = monica.cropGrowth().get_CropHeight();
      vc_DevelopmentalStage = monica.cropGrowth().get_DevelopmentalStage();
      if (vc_DevelopmentalStage > 0) {
        vc_NetPrecipitation = monica.cropGrowth().get_NetPrecipitation();
      } else {
        vc_NetPrecipitation = vw_Precipitation;
      }

    } else {
      vc_CropPlanted = false;
      vc_KcFactor = centralParameterProvider.userSoilMoistureParameters.pm_KcFactor;
      vc_NetPrecipitation = vw_Precipitation;
      vc_PercentageSoilCoverage = 0.0;
    }

    // Recalculates current depth of groundwater table
    vm_GroundwaterTable = vs_NumberOfLayers + 2;
    var vm_GroundwaterHelper = vs_NumberOfLayers - 1;
    for (var i_Layer = vs_NumberOfLayers - 1; i_Layer >= 0; i_Layer--) {
      if (vm_SoilMoisture[i_Layer] == vm_SoilPoreVolume[i_Layer] && (vm_GroundwaterHelper == i_Layer)) {
        vm_GroundwaterHelper--;
        vm_GroundwaterTable = i_Layer;
      }
    }
    if ((vm_GroundwaterTable > (int(vs_GroundwaterDepth / soilColumn[0].vs_LayerThickness)))
         && (vm_GroundwaterTable < (vs_NumberOfLayers + 2))) {

      vm_GroundwaterTable = (int(vs_GroundwaterDepth / soilColumn[0].vs_LayerThickness));

    } else if (vm_GroundwaterTable >= (vs_NumberOfLayers + 2)){

      vm_GroundwaterTable = (int(vs_GroundwaterDepth / soilColumn[0].vs_LayerThickness));

    }

    soilColumn.vm_GroundwaterTable = vm_GroundwaterTable;

    // calculates snow layer water storage and release
    snowComponent.calcSnowLayer(vw_MeanAirTemperature, vc_NetPrecipitation);
    var vm_WaterToInfiltrate = snowComponent.getWaterToInfiltrate();
    
    // Calculates frost and thaw depth and switches lambda
    frostComponent.calcSoilFrost(vw_MeanAirTemperature, snowComponent.getVm_SnowDepth());

    // calculates infiltration of water from surface
    fm_Infiltration(vm_WaterToInfiltrate, vc_PercentageSoilCoverage, vm_GroundwaterTable);

    if ((vs_GroundwaterDepth <= 10.0) && (vs_GroundwaterDepth > 0.0)) {

      fm_PercolationWithGroundwater(vs_GroundwaterDepth);
      fm_GroundwaterReplenishment();

    } else {

      fm_PercolationWithoutGroundwater();
      fm_BackwaterReplenishment();

    }

    fm_Evapotranspiration(vc_PercentageSoilCoverage, vc_KcFactor, siteParameters.vs_HeightNN, vw_MaxAirTemperature,
        vw_MinAirTemperature, vw_RelativeHumidity, vw_MeanAirTemperature, vw_WindSpeed, vw_WindSpeedHeight,
        vw_GlobalRadiation, vc_DevelopmentalStage, vs_JulianDay, vs_Latitude);

    fm_CapillaryRise();

    for (var i_Layer = 0; i_Layer < vs_NumberOfLayers; i_Layer++) {
      // debug('vm_SoilMoisture[i_Layer], i_Layer = ' + i_Layer, vm_SoilMoisture[i_Layer]);
      soilColumn[i_Layer].set_Vs_SoilMoisture_m3(vm_SoilMoisture[i_Layer]);
      soilColumn[i_Layer].vs_SoilWaterFlux = vm_WaterFlux[i_Layer];
      soilColumn[i_Layer].calc_vs_SoilMoisture_pF();
    }
    soilColumn.vs_SurfaceWaterStorage = vm_SurfaceWaterStorage;
    soilColumn.vs_FluxAtLowerBoundary = vm_FluxAtLowerBoundary;

  };

  var fm_Infiltration = function (vm_WaterToInfiltrate, vc_PercentageSoilCoverage, vm_GroundwaterTable) {

    // debug(arguments, 'SoilMoisture::fm_Infiltration');

    // For receiving daily precipitation data all variables have to be reset
    var vm_RunOffFactor;
    var vm_PotentialInfiltration;
    var vm_ReducedHydraulicConductivity;
    var vm_PercolationFactor;
    var vm_LambdaReduced;

    vm_Infiltration = 0.0;
    vm_Interception = 0.0;
    vm_SurfaceRunOff = 0.0;
    vm_CapillaryRise = 0.0;
    vm_GroundwaterAdded = 0.0;
    vm_ActualTranspiration = 0.0;
    vm_PercolationFactor = 0.0;
    vm_LambdaReduced = 0.0;

    var vm_SurfaceWaterStorageOld = vm_SurfaceWaterStorage;

    // add the netto precipitation to the virtual surface water storage
    vm_SurfaceWaterStorage += vm_WaterToInfiltrate;

    // Calculating potential infiltration in [mm d-1]
    vm_SoilMoistureDeficit = (vm_SoilPoreVolume[0] - vm_SoilMoisture[0]) / vm_SoilPoreVolume[0];
    vm_ReducedHydraulicConductivity = vm_SaturatedHydraulicConductivity[0] * vm_HydraulicConductivityRedux;

    // in case of sensitivity analysis, this parameter would not be undefined
    // if (centralParameterProvider.sensitivityAnalysisParameters.p_ReducedHydraulicConductivity != UNDEFINED) {
    //   vm_ReducedHydraulicConductivity = centralParameterProvider.sensitivityAnalysisParameters.p_ReducedHydraulicConductivity;
    //   //cout << "p_ReducedHydraulicConductivity:\t" << vm_ReducedHydraulicConductivity << endl;
    // }

    if (vm_ReducedHydraulicConductivity > 0.0) {

      vm_PotentialInfiltration
          = (vm_ReducedHydraulicConductivity * 0.2 * vm_SoilMoistureDeficit * vm_SoilMoistureDeficit);

      // minimum of the availabe amount of water and the amount, soil is able to assimilate water
      // überprüft, dass das zu infiltrierende Wasser nicht größer ist
      // als das Volumnen, welches es aufnehmen kann
      vm_Infiltration = min(vm_SurfaceWaterStorage, vm_PotentialInfiltration);

      /** @todo <b>Claas:</b> Mathematischer Sinn ist zu überprüfen */
      vm_Infiltration = min(vm_Infiltration, ((vm_SoilPoreVolume[0] - vm_SoilMoisture[0]) * 1000.0
          * soilColumn[0].vs_LayerThickness));

      // Limitation of airfilled pore space added to prevent water contents
      // above pore space in layers below (Claas Nendel)
      vm_Infiltration = max(0.0, vm_Infiltration);
    } else {
      vm_Infiltration = 0.0;
    }

    // Updating yesterday's surface water storage
    if (vm_Infiltration > 0.0) {

      // Reduce the water storage with the infiltration amount
      vm_SurfaceWaterStorage -= vm_Infiltration;
    }

    // Calculating overflow due to water level exceeding surface roughness [mm]
    if (vm_SurfaceWaterStorage > (10.0 * vm_SurfaceRoughness / (siteParameters.vs_Slope + 0.001))) {

      // Calculating surface run-off driven by slope and altered by surface roughness and soil coverage
      // minimal slope at which water will be run off the surface
      vm_RunOffFactor = 0.02 + (vm_SurfaceRoughness / 4.0) + (vc_PercentageSoilCoverage / 15.0);
      if (siteParameters.vs_Slope < 0.0 || siteParameters.vs_Slope > 1.0) {

        // no valid slope
        console.log("Slope value out ouf boundary");

      } else if (siteParameters.vs_Slope == 0.0) {

        // no slope so there will be no loss of water
        vm_SurfaceRunOff = 0.0;

      } else if (siteParameters.vs_Slope > vm_RunOffFactor) {

        // add all water from the surface to the run-off storage
        vm_SurfaceRunOff += vm_SurfaceWaterStorage;

      } else {

        // some water is running off because of a sloped surface
        /** @todo Claas: Ist die Formel korrekt? vm_RunOffFactor wird einmal reduziert? */
        vm_SurfaceRunOff += ((siteParameters.vs_Slope * vm_RunOffFactor) / (vm_RunOffFactor * vm_RunOffFactor)) * vm_SurfaceWaterStorage;
      }

      // Update surface water storage
      vm_SurfaceWaterStorage -= vm_SurfaceRunOff;
    }

    // Adding infiltrating water to top layer soil moisture
    vm_SoilMoisture[0] += (vm_Infiltration / 1000.0 / vm_LayerThickness[0]);

    // [m3 m-3] += ([mm] - [mm]) / [] / [m]; -. Conversion into volumetric water content [m3 m-3]
    vm_WaterFlux[0] = vm_Infiltration; // Fluss in Schicht 0

    // Calculating excess soil moisture (water content exceeding field capacity) for percolation
    if (vm_SoilMoisture[0] > vm_FieldCapacity[0]) {

      vm_GravitationalWater[0] = (vm_SoilMoisture[0] - vm_FieldCapacity[0]) * 1000.0
          * vm_LayerThickness[0];
      vm_LambdaReduced = vm_Lambda[0] * frostComponent.getLambdaRedux(0);
      vm_PercolationFactor = 1 + vm_LambdaReduced * vm_GravitationalWater[0];
      vm_PercolationRate[0] = (
        (vm_GravitationalWater[0] * vm_GravitationalWater[0] * vm_LambdaReduced) / vm_PercolationFactor
      );
      // debug("1 vm_Lambda[0]", vm_Lambda[0]);
      // debug("1 frostComponent.getLambdaRedux(0)", frostComponent.getLambdaRedux(0));

      if (vm_PercolationRate[0] > pm_MaxPercolationRate)
          vm_PercolationRate[0] = pm_MaxPercolationRate;

      vm_GravitationalWater[0] = vm_GravitationalWater[0] - vm_PercolationRate[0];
      vm_GravitationalWater[0] = max(0.0, vm_GravitationalWater[0]);

      // debug("2 vm_PercolationRate[0]", vm_PercolationRate[0]);


      // Adding the excess water remaining after the percolation event to soil moisture
      vm_SoilMoisture[0] = vm_FieldCapacity[0] + (vm_GravitationalWater[0] / 1000.0 / vm_LayerThickness[0]);
      
      // debug("vm_FieldCapacity[0]", vm_FieldCapacity[0]);
      // debug("3 vm_GravitationalWater[0]", vm_GravitationalWater[0]);
      // debug("vm_LayerThickness[0]", vm_LayerThickness[0]);
      // debug("m_SoilMoisture", vm_SoilMoisture);

      // For groundwater table in first or second top layer no percolation occurs
      if (vm_GroundwaterTable <= 1) {
        vm_PercolationRate[0] = 0.0;
      }

      // For groundwater table at soil surface no percolation occurs
      if (vm_GroundwaterTable == 0) {
        vm_PercolationRate[0] = 0.0;

        // For soil water volume exceeding total pore volume, surface runoff occurs
        if (vm_SoilMoisture[0] > vm_SoilPoreVolume[0]) {
          vm_SurfaceRunOff += (vm_SoilMoisture[0] - vm_SoilPoreVolume[0]) * 1000.0 * vm_LayerThickness[0];
          vm_SoilMoisture[0] = vm_SoilPoreVolume[0];
          return;
        }
      }
    } else if (vm_SoilMoisture[0] <= vm_FieldCapacity[0]) {

      // For soil moisture contents below field capacity no excess water and no fluxes occur
      vm_PercolationRate[0] = 0.0;
      vm_GravitationalWater[0] = 0.0;
    }


    // Check water balance

    if (abs((vm_SurfaceWaterStorageOld + vm_WaterToInfiltrate) - (vm_SurfaceRunOff + vm_Infiltration
        + vm_SurfaceWaterStorage)) > 0.01) {

      console.log("water balance wrong!");
    }

    // water flux of next layer equals percolation rate of layer above
    vm_WaterFlux[1] = vm_PercolationRate[0];
    vm_SumSurfaceRunOff+=vm_SurfaceRunOff;
  };

  var get_SoilMoisture = function (layer) {
    return soilColumn[layer].get_Vs_SoilMoisture_m3();
  };

  var get_CapillaryRise = function (layer) {
    return vm_CapillaryWater[layer];
  };

  var get_PercolationRate = function (layer) {
    return vm_PercolationRate[layer];
  };

  var fm_CapillaryRise = function () {

    var vc_RootingDepth;
    var vm_GroundwaterDistance;
    var vm_WaterAddedFromCapillaryRise;

    vc_RootingDepth = crop ? crop.get_RootingDepth() : 0;

    vm_GroundwaterDistance = vm_GroundwaterTable - vc_RootingDepth;// []

    if (vm_GroundwaterDistance < 1) vm_GroundwaterDistance = 1;

    if ((vm_GroundwaterDistance * vm_LayerThickness[0]) <= 2.70) { // [m]
    // Capillary rise rates in table defined only until 2.70 m

      for (var i_Layer = 0; i_Layer < vs_NumberOfLayers; i_Layer++) {
      // Define capillary water and available water

        vm_CapillaryWater[i_Layer] = vm_FieldCapacity[i_Layer]
    - vm_PermanentWiltingPoint[i_Layer];

        vm_AvailableWater[i_Layer] = vm_SoilMoisture[i_Layer] - vm_PermanentWiltingPoint[i_Layer];

        if (vm_AvailableWater[i_Layer] < 0.0) {
          vm_AvailableWater[i_Layer] = 0.0;
        }

        vm_CapillaryWater70[i_Layer] = 0.7 * vm_CapillaryWater[i_Layer];
      }

      var vm_CapillaryRiseRate = 0.01; //[m d-1]
      var pm_CapillaryRiseRate = 0.01; //[m d-1]
      // Find first layer above groundwater with 70% available water
      var vm_StartLayer = min(vm_GroundwaterTable,(vs_NumberOfLayers - 1));
      for (var i_Layer = vm_StartLayer; i_Layer >= 0; i_Layer--) {

        var vs_SoilTexture = soilColumn[i_Layer].vs_SoilTexture;
        pm_CapillaryRiseRate = centralParameterProvider.capillaryRiseRates.getRate(vs_SoilTexture, vm_GroundwaterDistance);

        if(pm_CapillaryRiseRate < vm_CapillaryRiseRate){
          vm_CapillaryRiseRate = pm_CapillaryRiseRate;
        }

        if (vm_AvailableWater[i_Layer] < vm_CapillaryWater70[i_Layer]) {

          vm_WaterAddedFromCapillaryRise = vm_CapillaryRiseRate; //[m3 m-2 d-1]

          vm_SoilMoisture[i_Layer] += vm_WaterAddedFromCapillaryRise;

          for (var j_Layer = vm_StartLayer; j_Layer >= i_Layer; j_Layer--) {
            vm_WaterFlux[j_Layer] -= vm_WaterAddedFromCapillaryRise;
          }
          break;
        }
      }
    } // if((double (vm_GroundwaterDistance) * vm_LayerThickness[0]) <= 2.70)
  };

  var fm_PercolationWithGroundwater = function (vs_GroundwaterDepth) {

    var vm_PercolationFactor;
    var vm_LambdaReduced;
    vm_GroundwaterAdded = 0.0;

    for (var i_Layer = 0; i_Layer < vm_NumberOfLayers - 1; i_Layer++) {

      if (i_Layer < vm_GroundwaterTable - 1) {

        // well above groundwater table
        vm_SoilMoisture[i_Layer + 1] += vm_PercolationRate[i_Layer] / 1000.0 / vm_LayerThickness[i_Layer];
        vm_WaterFlux[i_Layer + 1] = vm_PercolationRate[i_Layer];

        if (vm_SoilMoisture[i_Layer + 1] > vm_FieldCapacity[i_Layer + 1]) {

          // Soil moisture exceeding field capacity
          vm_GravitationalWater[i_Layer + 1] = (
            (vm_SoilMoisture[i_Layer + 1] - vm_FieldCapacity[i_Layer + 1]) * 
            1000.0 * vm_LayerThickness[i_Layer + 1]
          );

          vm_LambdaReduced = vm_Lambda[i_Layer + 1] * frostComponent.getLambdaRedux(i_Layer + 1);
          vm_PercolationFactor = 1 + vm_LambdaReduced * vm_GravitationalWater[i_Layer + 1];
          vm_PercolationRate[i_Layer + 1] = ((vm_GravitationalWater[i_Layer + 1] * vm_GravitationalWater[i_Layer + 1]
              * vm_LambdaReduced) / vm_PercolationFactor);

          vm_GravitationalWater[i_Layer + 1] = vm_GravitationalWater[i_Layer + 1] - vm_PercolationRate[i_Layer + 1];

          if (vm_GravitationalWater[i_Layer + 1] < 0) {
            vm_GravitationalWater[i_Layer + 1] = 0.0;
          }

          vm_SoilMoisture[i_Layer + 1] = (
            vm_FieldCapacity[i_Layer + 1] + (vm_GravitationalWater[i_Layer + 1] / 
            1000.0 / 
            vm_LayerThickness[i_Layer + 1])
          );

          if (vm_SoilMoisture[i_Layer + 1] > vm_SoilPoreVolume[i_Layer + 1]) {

            // Soil moisture exceeding soil pore volume
            vm_GravitationalWater[i_Layer + 1] = (
              (vm_SoilMoisture[i_Layer + 1] - vm_SoilPoreVolume[i_Layer + 1]) * 
              1000.0 * 
              vm_LayerThickness[i_Layer + 1]
            );
            vm_SoilMoisture[i_Layer + 1] = vm_SoilPoreVolume[i_Layer + 1];
            vm_PercolationRate[i_Layer + 1] += vm_GravitationalWater[i_Layer + 1];
          }
        } else {
          // Soil moisture below field capacity
          vm_PercolationRate[i_Layer + 1] = 0.0;
          vm_GravitationalWater[i_Layer + 1] = 0.0;
        }
      } // if (i_Layer < vm_GroundwaterTable - 1) {

      // when the layer directly above ground water table is reached
      if (i_Layer == vm_GroundwaterTable - 1) {

        // groundwater table shall not undermatch the oscillating groundwater depth
        // which is generated within the outer framework
        if (vm_GroundwaterTable >= int(vs_GroundwaterDepth / vm_LayerThickness[i_Layer])) {
          vm_SoilMoisture[i_Layer + 1] += (
            (vm_PercolationRate[i_Layer]) / 1000.0 / vm_LayerThickness[i_Layer]
          );
          vm_PercolationRate[i_Layer + 1] = vm_GroundwaterDischarge;
          vm_WaterFlux[i_Layer + 1] = vm_PercolationRate[i_Layer];
        } else {
          vm_SoilMoisture[i_Layer + 1] += (
            (vm_PercolationRate[i_Layer] - vm_GroundwaterDischarge) / 
            1000.0 / 
            vm_LayerThickness[i_Layer]
          );
          vm_PercolationRate[i_Layer + 1] = vm_GroundwaterDischarge;
          vm_WaterFlux[i_Layer + 1] = vm_GroundwaterDischarge;
        }

        if (vm_SoilMoisture[i_Layer + 1] >= vm_SoilPoreVolume[i_Layer + 1]) {

          //vm_GroundwaterTable--; // Rising groundwater table if vm_SoilMoisture > soil pore volume

          // vm_GroundwaterAdded is the volume of water added to the groundwater body.
          // It does not correspond to groundwater replenishment in the technical sense !!!!!
          vm_GroundwaterAdded = (
            (vm_SoilMoisture[i_Layer + 1] - vm_SoilPoreVolume[i_Layer + 1]) * 1000.0 * vm_LayerThickness[i_Layer + 1]
          );

          vm_SoilMoisture[i_Layer + 1] = vm_SoilPoreVolume[i_Layer + 1];

          if (vm_GroundwaterAdded <= 0.0) {
            vm_GroundwaterAdded = 0.0;
          }
        }

      } // if (i_Layer == vm_GroundwaterTable - 1)

      // when the groundwater table is reached
      if (i_Layer > vm_GroundwaterTable - 1) {

        vm_SoilMoisture[i_Layer + 1] = vm_SoilPoreVolume[i_Layer + 1];

        if (vm_GroundwaterTable >= int(vs_GroundwaterDepth / vm_LayerThickness[i_Layer])) {
          vm_PercolationRate[i_Layer + 1] = vm_PercolationRate[i_Layer];
          vm_WaterFlux[i_Layer] = vm_PercolationRate[i_Layer + 1];
        } else {
          vm_PercolationRate[i_Layer + 1] = vm_GroundwaterDischarge;
          vm_WaterFlux[i_Layer] = vm_GroundwaterDischarge;
        }
      } // if (i_Layer > vm_GroundwaterTable - 1)

    } // for

    vm_FluxAtLowerBoundary = vm_WaterFlux[pm_LeachingDepthLayer];

  };

  var fm_GroundwaterReplenishment = function () {
    
    var vm_StartLayer;

    // do nothing if groundwater is not within profile
    if (vm_GroundwaterTable > vs_NumberOfLayers) {
      return;
    }

    // Auffuellschleife von GW-Oberflaeche in Richtung Oberflaeche
    vm_StartLayer = vm_GroundwaterTable;

    if (vm_StartLayer > vm_NumberOfLayers - 2) {
      vm_StartLayer = vm_NumberOfLayers - 2;
    }

    for (var i_Layer = vm_StartLayer; i_Layer >= 0; i_Layer--) {

      vm_SoilMoisture[i_Layer] += vm_GroundwaterAdded / 1000.0 / vm_LayerThickness[i_Layer + 1];

      if (i_Layer == vm_StartLayer){
        vm_PercolationRate[i_Layer] = vm_GroundwaterDischarge;
      } else {
        vm_PercolationRate[i_Layer] -= vm_GroundwaterAdded; // Fluss_u durch Grundwasser
        vm_WaterFlux[i_Layer + 1] = vm_PercolationRate[i_Layer]; // Fluss_u durch Grundwasser
      }

      if (vm_SoilMoisture[i_Layer] > vm_SoilPoreVolume[i_Layer]) {

        vm_GroundwaterAdded = (vm_SoilMoisture[i_Layer] - vm_SoilPoreVolume[i_Layer]) * 1000.0 * vm_LayerThickness[i_Layer + 1];
        vm_SoilMoisture[i_Layer] = vm_SoilPoreVolume[i_Layer];
        vm_GroundwaterTable--; // Groundwater table rises

        if (i_Layer == 0 && vm_GroundwaterTable == 0) {

          // if groundwater reaches surface
          vm_SurfaceWaterStorage += vm_GroundwaterAdded;
          vm_GroundwaterAdded = 0.0;
        }
      } else {
        vm_GroundwaterAdded = 0.0;
      }

    } // for
  };

  var fm_PercolationWithoutGroundwater = function () {
    
    var vm_PercolationFactor;
    var vm_LambdaReduced;

    for (var i_Layer = 0; i_Layer < vm_NumberOfLayers - 1; i_Layer++) {

      vm_SoilMoisture[i_Layer + 1] += vm_PercolationRate[i_Layer] / 1000.0 / vm_LayerThickness[i_Layer];

      if ((vm_SoilMoisture[i_Layer + 1] > vm_FieldCapacity[i_Layer + 1])) {

        // too much water for this layer so some water is released to layers below
        vm_GravitationalWater[i_Layer + 1] = (
          (vm_SoilMoisture[i_Layer + 1] - vm_FieldCapacity[i_Layer + 1]) * 1000.0 * vm_LayerThickness[0]
        );
        vm_LambdaReduced = vm_Lambda[i_Layer + 1] * frostComponent.getLambdaRedux(i_Layer + 1);
        vm_PercolationFactor = 1.0 + (vm_LambdaReduced * vm_GravitationalWater[i_Layer + 1]);
        vm_PercolationRate[i_Layer + 1] = (vm_GravitationalWater[i_Layer + 1] * vm_GravitationalWater[i_Layer + 1]
            * vm_LambdaReduced) / vm_PercolationFactor;

        if (vm_PercolationRate[i_Layer + 1] > pm_MaxPercolationRate) {
          vm_PercolationRate[i_Layer + 1] = pm_MaxPercolationRate;
        }

        vm_GravitationalWater[i_Layer + 1] = vm_GravitationalWater[i_Layer + 1] - vm_PercolationRate[i_Layer + 1];

        if (vm_GravitationalWater[i_Layer + 1] < 0.0) {
          vm_GravitationalWater[i_Layer + 1] = 0.0;
        }

        vm_SoilMoisture[i_Layer + 1] = (
          vm_FieldCapacity[i_Layer + 1] + (vm_GravitationalWater[i_Layer + 1] / 1000.0 / vm_LayerThickness[i_Layer + 1])
        );
      } else {

        // no water will be released in other layers
        vm_PercolationRate[i_Layer + 1] = 0.0;
        vm_GravitationalWater[i_Layer + 1] = 0.0;
      }

      vm_WaterFlux[i_Layer + 1] = vm_PercolationRate[i_Layer];
      vm_GroundwaterAdded = vm_PercolationRate[i_Layer + 1];

    } // for

    if ((pm_LeachingDepthLayer > 0) && (pm_LeachingDepthLayer < (vm_NumberOfLayers - 1))) {
      vm_FluxAtLowerBoundary = vm_WaterFlux[pm_LeachingDepthLayer];
    } else {
      vm_FluxAtLowerBoundary = vm_WaterFlux[vm_NumberOfLayers - 2];
    }
  };

  var fm_BackwaterReplenishment = function () {

    var vm_StartLayer = vm_NumberOfLayers - 1;
    var vm_BackwaterTable = vm_NumberOfLayers - 1;
    var vm_BackwaterAdded = 0.0;

    // find first layer from top where the water content exceeds pore volume
    for (var i_Layer = 0; i_Layer < vm_NumberOfLayers - 1; i_Layer++) {
      if (vm_SoilMoisture[i_Layer] > vm_SoilPoreVolume[i_Layer]) {
        vm_StartLayer = i_Layer;
        vm_BackwaterTable = i_Layer;
      }
    }

    // if there is no such thing nothing will happen
    if (vm_BackwaterTable == 0)
      return;

    // Backwater replenishment upwards
    for (var i_Layer = vm_StartLayer; i_Layer >= 0; i_Layer--) {

      //!TODO check loop and whether it really should be i_Layer + 1 or the loop should start one layer higher ????!!!!
      vm_SoilMoisture[i_Layer] += vm_BackwaterAdded / 1000.0 / vm_LayerThickness[i_Layer];// + 1];
      if (i_Layer > 0) {
        vm_WaterFlux[i_Layer - 1] -= vm_BackwaterAdded;
      }

      if (vm_SoilMoisture[i_Layer] > vm_SoilPoreVolume[i_Layer]) {

        //!TODO check also i_Layer + 1 here for same reason as above
        vm_BackwaterAdded = (vm_SoilMoisture[i_Layer] - vm_SoilPoreVolume[i_Layer]) * 1000.0 * vm_LayerThickness[i_Layer];// + 1];
        vm_SoilMoisture[i_Layer] = vm_SoilPoreVolume[i_Layer];
        vm_BackwaterTable--; // Backwater table rises

        if (i_Layer == 0 && vm_BackwaterTable == 0) {
          // if backwater reaches surface
          vm_SurfaceWaterStorage += vm_BackwaterAdded;
          vm_BackwaterAdded = 0.0;
        }
      } else {
        vm_BackwaterAdded = 0.0;
      }
    } // for
  };

  var fm_Evapotranspiration = function (
    vc_PercentageSoilCoverage,
    vc_KcFactor,
    vs_HeightNN,
    vw_MaxAirTemperature,
    vw_MinAirTemperature,
    vw_RelativeHumidity,
    vw_MeanAirTemperature,
    vw_WindSpeed,
    vw_WindSpeedHeight,
    vw_GlobalRadiation,
    vc_DevelopmentalStage,
    vs_JulianDay,
    vs_Latitude
  ) {

    var vm_EReducer_1 = 0.0;
    var vm_EReducer_2 = 0.0;
    var vm_EReducer_3 = 0.0;
    var pm_EvaporationZeta = 0.0;
    var pm_MaximumEvaporationImpactDepth = 0.0; // Das ist die Tiefe, bis zu der maximal die Evaporation vordringen kann
    var vm_EReducer = 0.0;
    var vm_PotentialEvapotranspiration = 0.0;
    var vc_EvaporatedFromIntercept = 0.0;
    var vm_EvaporatedFromSurface = 0.0;
    var vm_EvaporationFromSurface = false;

    var vm_SnowDepth = snowComponent.getVm_SnowDepth();

    // Berechnung der Bodenevaporation bis max. 4dm Tiefe
    var sm_params = centralParameterProvider.userSoilMoistureParameters;
    pm_EvaporationZeta = sm_params.pm_EvaporationZeta; // Parameterdatei

    // Das sind die Steuerungsparameter für die Steigung der Entzugsfunktion
    vm_XSACriticalSoilMoisture = sm_params.pm_XSACriticalSoilMoisture;

    /** @todo <b>Claas:</b> pm_MaximumEvaporationImpactDepth ist aber Abhängig von der Bodenart,
     * da muss was dran gemacht werden */
    pm_MaximumEvaporationImpactDepth = sm_params.pm_MaximumEvaporationImpactDepth; // Parameterdatei


    // If a crop grows, ETp is taken from crop module
    if (vc_DevelopmentalStage > 0) {
      // Reference evapotranspiration is only grabbed here for consistent
      // output in monica.cpp
      vm_ReferenceEvapotranspiration = monica.cropGrowth().get_ReferenceEvapotranspiration();

      // Remaining ET from crop module already includes Kc factor and evaporation
      // from interception storage
      vm_PotentialEvapotranspiration = monica.cropGrowth().get_RemainingEvapotranspiration();
      vc_EvaporatedFromIntercept = monica.cropGrowth().get_EvaporatedFromIntercept();

    } else { // if no crop grows ETp is calculated from ET0 * kc
      vm_ReferenceEvapotranspiration = ReferenceEvapotranspiration(vs_HeightNN, vw_MaxAirTemperature,
          vw_MinAirTemperature, vw_RelativeHumidity, vw_MeanAirTemperature, vw_WindSpeed, vw_WindSpeedHeight,
          vw_GlobalRadiation, vs_JulianDay, vs_Latitude);
      vm_PotentialEvapotranspiration = vm_ReferenceEvapotranspiration * vc_KcFactor; // - vm_InterceptionReference;
    }

    vm_ActualEvaporation = 0.0;
    vm_ActualTranspiration = 0.0;

    // from HERMES:
    if (vm_PotentialEvapotranspiration > 6.5) vm_PotentialEvapotranspiration = 6.5;

    if (vm_PotentialEvapotranspiration > 0.0) {
      // If surface is water-logged, subsequent evaporation from surface water sources
      if (vm_SurfaceWaterStorage > 0.0) {
        vm_EvaporationFromSurface = true;
        // Water surface evaporates with Kc = 1.1.
        vm_PotentialEvapotranspiration = vm_PotentialEvapotranspiration * (1.1 / vc_KcFactor);

        // If a snow layer is present no water evaporates from surface water sources
        if (vm_SnowDepth > 0.0) {
          vm_EvaporatedFromSurface = 0.0;
        } else {
          if (vm_SurfaceWaterStorage < vm_PotentialEvapotranspiration) {
            vm_PotentialEvapotranspiration -= vm_SurfaceWaterStorage;
            vm_EvaporatedFromSurface = vm_SurfaceWaterStorage;
            vm_SurfaceWaterStorage = 0.0;
          } else {
            vm_SurfaceWaterStorage -= vm_PotentialEvapotranspiration;
            vm_EvaporatedFromSurface = vm_PotentialEvapotranspiration;
            vm_PotentialEvapotranspiration = 0.0;
          }
        }
        vm_PotentialEvapotranspiration = vm_PotentialEvapotranspiration * (vc_KcFactor / 1.1);
      }


      if (vm_PotentialEvapotranspiration > 0) { // Evaporation from soil

        for (var i_Layer = 0; i_Layer < vs_NumberOfLayers; i_Layer++) {

          vm_EReducer_1 = get_EReducer_1(i_Layer, vc_PercentageSoilCoverage,
      vm_PotentialEvapotranspiration);


          if (i_Layer >= pm_MaximumEvaporationImpactDepth) {
            // layer is too deep for evaporation
            vm_EReducer_2 = 0.0;
          } else {
            // 2nd factor to reduce actual evapotranspiration by
            // MaximumEvaporationImpactDepth and EvaporationZeta
            vm_EReducer_2 = get_DeprivationFactor(i_Layer + 1, pm_MaximumEvaporationImpactDepth,
          pm_EvaporationZeta, vm_LayerThickness[i_Layer]);
          }

          if (i_Layer > 0) {
            if (vm_SoilMoisture[i_Layer] < vm_SoilMoisture[i_Layer - 1]) {
      // 3rd factor to consider if above layer contains more water than
      // the adjacent layer below, evaporation will be significantly reduced
              vm_EReducer_3 = 0.1;
            } else {
              vm_EReducer_3 = 1.0;
            }
          } else {
            vm_EReducer_3 = 1.0;
          }
          // EReducer. factor to reduce evaporation
          vm_EReducer = vm_EReducer_1 * vm_EReducer_2 * vm_EReducer_3;

          if (vc_DevelopmentalStage > 0) {
            // vegetation is present

            //Interpolation between [0,1]
            if (vc_PercentageSoilCoverage >= 0.0 && vc_PercentageSoilCoverage < 1.0) {
              vm_Evaporation[i_Layer] = ((1.0 - vc_PercentageSoilCoverage) * vm_EReducer)
                  * vm_PotentialEvapotranspiration;
            } else {
              if (vc_PercentageSoilCoverage >= 1.0) {
                vm_Evaporation[i_Layer] = 0.0;
              }
            }

            if (vm_SnowDepth > 0.0)
              vm_Evaporation[i_Layer] = 0.0;

            // Transpiration is derived from ET0; Soil coverage and Kc factors
            // already considered in crop part!
            vm_Transpiration[i_Layer] = monica.cropGrowth().get_Transpiration(i_Layer);


            // Transpiration is capped in case potential ET after surface
            // and interception evaporation has occurred on same day
            if (vm_EvaporationFromSurface) {
              vm_Transpiration[i_Layer] = vc_PercentageSoilCoverage * vm_EReducer * vm_PotentialEvapotranspiration;
            }

          } else {
            // no vegetation present
            if (vm_SnowDepth > 0.0) {
              vm_Evaporation[i_Layer] = 0.0;
            } else {
              vm_Evaporation[i_Layer] = vm_PotentialEvapotranspiration * vm_EReducer;
            }
            vm_Transpiration[i_Layer] = 0.0;

          } // if(vc_DevelopmentalStage > 0)

          vm_Evapotranspiration[i_Layer] = vm_Evaporation[i_Layer] + vm_Transpiration[i_Layer];
          vm_SoilMoisture[i_Layer] -= (vm_Evapotranspiration[i_Layer] / 1000.0 / vm_LayerThickness[i_Layer]);

          //  Generelle Begrenzung des Evaporationsentzuges
          if (vm_SoilMoisture[i_Layer] < 0.01) {
            vm_SoilMoisture[i_Layer] = 0.01;
          }

          vm_ActualTranspiration += vm_Transpiration[i_Layer];
          vm_ActualEvaporation += vm_Evaporation[i_Layer];
        } // for
      } // vm_PotentialEvapotranspiration > 0
    } // vm_PotentialEvapotranspiration > 0.0
    vm_ActualEvapotranspiration = vm_ActualTranspiration + vm_ActualEvaporation + vc_EvaporatedFromIntercept + vm_EvaporatedFromSurface;

    if (crop) {
      crop.accumulateEvapotranspiration(vm_ActualEvapotranspiration);
    }
  };

  var ReferenceEvapotranspiration = function (
    vs_HeightNN,
    vw_MaxAirTemperature,
    vw_MinAirTemperature,
    vw_RelativeHumidity,
    vw_MeanAirTemperature,
    vw_WindSpeed,
    vw_WindSpeedHeight,
    vw_GlobalRadiation,
    vs_JulianDay,
    vs_Latitude
  ) {

    var vc_Declination;
    var vc_DeclinationSinus; // old SINLD
    var vc_DeclinationCosinus; // old COSLD
    var vc_AstronomicDayLenght;
    var vc_EffectiveDayLenght ;
    var vc_PhotoperiodicDaylength ;
    var vc_PhotActRadiationMean;
    var vc_ClearDayRadiation;
    var vc_OvercastDayRadiation ;

    var vm_AtmosphericPressure; //[kPA]
    var vm_PsycrometerConstant; //[kPA °C-1]
    var vm_SaturatedVapourPressureMax; //[kPA]
    var vm_SaturatedVapourPressureMin; //[kPA]
    var vm_SaturatedVapourPressure; //[kPA]
    var vm_VapourPressure; //[kPA]
    var vm_SaturationDeficit; //[kPA]
    var vm_SaturatedVapourPressureSlope; //[kPA °C-1]
    var vm_WindSpeed_2m; //[m s-1]
    var vm_AerodynamicResistance ; //[s m-1]
    var vm_SurfaceResistance; //[s m-1]
    var vc_ExtraterrestrialRadiation;
    var vm_ReferenceEvapotranspiration; //[mm]
    var pc_ReferenceAlbedo = centralParameterProvider.userCropParameters.pc_ReferenceAlbedo; // FAO Green gras reference albedo from Allen et al. (1998)
    var PI = 3.14159265358979323;

    vc_Declination = -23.4 * cos(2.0 * PI * ((vs_JulianDay + 10.0) / 365.0));
    vc_DeclinationSinus = sin(vc_Declination * PI / 180.0) * sin(vs_Latitude * PI / 180.0);
    vc_DeclinationCosinus = cos(vc_Declination * PI / 180.0) * cos(vs_Latitude * PI / 180.0);
    vc_AstronomicDayLenght = 12.0 * (PI + 2.0 * asin(vc_DeclinationSinus / vc_DeclinationCosinus)) / PI;
    vc_EffectiveDayLenght = 12.0 * (PI + 2.0 * asin((-sin(8.0 * PI / 180.0) + vc_DeclinationSinus)
        / vc_DeclinationCosinus)) / PI;
    vc_PhotoperiodicDaylength = 12.0 * (PI + 2.0 * asin((-sin(-6.0 * PI / 180.0) + vc_DeclinationSinus)
        / vc_DeclinationCosinus)) / PI;
    vc_PhotActRadiationMean = 3600.0 * (vc_DeclinationSinus * vc_AstronomicDayLenght + 24.0 / PI * vc_DeclinationCosinus
        * sqrt(1.0 - ((vc_DeclinationSinus / vc_DeclinationCosinus) * (vc_DeclinationSinus / vc_DeclinationCosinus))));
    vc_ClearDayRadiation = 0.5 * 1300.0 * vc_PhotActRadiationMean * exp(-0.14 / (vc_PhotActRadiationMean
        / (vc_AstronomicDayLenght * 3600.0)));
    vc_OvercastDayRadiation = 0.2 * vc_ClearDayRadiation;
    var SC = 24.0 * 60.0 / PI * 8.20 *(1.0 + 0.033 * cos(2.0 * PI * vs_JulianDay / 365.0));
    var SHA = acos(-tan(vs_Latitude * PI / 180.0) * tan(vc_Declination * PI / 180.0));
    vc_ExtraterrestrialRadiation = SC * (SHA * vc_DeclinationSinus + vc_DeclinationCosinus * sin(SHA)) / 100.0; // [J cm-2] -. [MJ m-2]

    // Calculation of atmospheric pressure
    vm_AtmosphericPressure = 101.3 * pow(((293.0 - (0.0065 * vs_HeightNN)) / 293.0), 5.26);

    // Calculation of psychrometer constant - Luchtfeuchtigkeit
    vm_PsycrometerConstant = 0.000665 * vm_AtmosphericPressure;

    // Calc. of saturated water vapour pressure at daily max temperature
    vm_SaturatedVapourPressureMax = 0.6108 * exp((17.27 * vw_MaxAirTemperature) / (237.3 + vw_MaxAirTemperature));

    // Calc. of saturated water vapour pressure at daily min temperature
    vm_SaturatedVapourPressureMin = 0.6108 * exp((17.27 * vw_MinAirTemperature) / (237.3 + vw_MinAirTemperature));

    // Calculation of the saturated water vapour pressure
    vm_SaturatedVapourPressure = (vm_SaturatedVapourPressureMax + vm_SaturatedVapourPressureMin) / 2.0;

    // Calculation of the water vapour pressure
    if (vw_RelativeHumidity <= 0.0){
      // Assuming Tdew = Tmin as suggested in FAO56 Allen et al. 1998
      vm_VapourPressure = vm_SaturatedVapourPressureMin;
    } else {
      vm_VapourPressure = vw_RelativeHumidity * vm_SaturatedVapourPressure;
    }

    // Calculation of the air saturation deficit
    vm_SaturationDeficit = vm_SaturatedVapourPressure - vm_VapourPressure;

    // Slope of saturation water vapour pressure-to-temperature relation
    vm_SaturatedVapourPressureSlope = (4098.0 * (0.6108 * exp((17.27 * vw_MeanAirTemperature) / (vw_MeanAirTemperature
        + 237.3)))) / ((vw_MeanAirTemperature + 237.3) * (vw_MeanAirTemperature + 237.3));

    // Calculation of wind speed in 2m height
    vm_WindSpeed_2m = vw_WindSpeed * (4.87 / (log(67.8 * vw_WindSpeedHeight - 5.42)));

    // Calculation of the aerodynamic resistance
    vm_AerodynamicResistance = 208.0 / vm_WindSpeed_2m;

    vc_StomataResistance = 100; // FAO default value [s m-1]

    vm_SurfaceResistance = vc_StomataResistance / 1.44;

    var vc_ClearSkySolarRadiation = (0.75 + 0.00002 * vs_HeightNN) * vc_ExtraterrestrialRadiation;
    var vc_RelativeShortwaveRadiation = vw_GlobalRadiation / vc_ClearSkySolarRadiation;

    if (vc_RelativeShortwaveRadiation > 1.0) vc_RelativeShortwaveRadiation = 1.0;

    var pc_BolzmannConstant = 0.0000000049;
    var vc_ShortwaveRadiation = (1.0 - pc_ReferenceAlbedo) * vw_GlobalRadiation;
    var vc_LongwaveRadiation = pc_BolzmannConstant
          * ((pow((vw_MinAirTemperature + 273.16), 4.0)
          + pow((vw_MaxAirTemperature + 273.16), 4.0)) / 2.0)
          * (1.35 * vc_RelativeShortwaveRadiation - 0.35)
          * (0.34 - 0.14 * sqrt(vm_VapourPressure));
    vw_NetRadiation = vc_ShortwaveRadiation - vc_LongwaveRadiation;

    // Calculation of the reference evapotranspiration
    // Penman-Monteith-Methode FAO
    vm_ReferenceEvapotranspiration = ((0.408 * vm_SaturatedVapourPressureSlope * vw_NetRadiation)
        + (vm_PsycrometerConstant * (900.0 / (vw_MeanAirTemperature + 273.0))
        * vm_WindSpeed_2m * vm_SaturationDeficit))
        / (vm_SaturatedVapourPressureSlope + vm_PsycrometerConstant
        * (1.0 + (vm_SurfaceResistance / 208.0) * vm_WindSpeed_2m));

    if (vm_ReferenceEvapotranspiration < 0.0){
      vm_ReferenceEvapotranspiration = 0.0;
    }

    return vm_ReferenceEvapotranspiration;
  };

  var get_EReducer_1 = function (
    i_Layer,
    vm_PercentageSoilCoverage,
    vm_ReferenceEvapotranspiration
  ) {
    
    var vm_EReductionFactor;
    var vm_EvaporationReductionMethod = 1;
    var vm_SoilMoisture_m3 = soilColumn[i_Layer].get_Vs_SoilMoisture_m3();
    var vm_PWP = soilColumn[i_Layer].get_PermanentWiltingPoint();
    var vm_FK = soilColumn[i_Layer].get_FieldCapacity();
    var vm_RelativeEvaporableWater;
    var vm_CriticalSoilMoisture;
    var vm_XSA;
    var vm_Reducer;

    if (vm_SoilMoisture_m3 < (0.33 * vm_PWP)) vm_SoilMoisture_m3 = 0.33 * vm_PWP;

    vm_RelativeEvaporableWater = (vm_SoilMoisture_m3 -(0.33 * vm_PWP)) / (vm_FK - (0.33 * vm_PWP));

    if (vm_RelativeEvaporableWater > 1.0) vm_RelativeEvaporableWater = 1.0;

    if (vm_EvaporationReductionMethod == 0){
      // THESEUS
      vm_CriticalSoilMoisture = 0.65 * vm_FK;
      if (vm_PercentageSoilCoverage > 0) {
        if (vm_ReferenceEvapotranspiration > 2.5) {
          vm_XSA = (0.65 * vm_FK - vm_PWP) * (vm_FK - vm_PWP);
          vm_Reducer = vm_XSA + (((1 - vm_XSA) / 17.5)
       * (vm_ReferenceEvapotranspiration - 2.5));
        } else {
          vm_Reducer = vm_XSACriticalSoilMoisture / 2.5 * vm_ReferenceEvapotranspiration;
        }
        vm_CriticalSoilMoisture = soilColumn[i_Layer].get_FieldCapacity() * vm_Reducer;
      }

      // Calculation of an evaporation-reducing factor in relation to soil water content
      if (vm_SoilMoisture_m3 > vm_CriticalSoilMoisture) {
        // Moisture is higher than critical value so there is a
        // normal evaporation and nothing must be reduced
        vm_EReductionFactor = 1.0;

      } else {
        // critical value is reached, actual evaporation is below potential

        if (vm_SoilMoisture_m3 > (0.33 * vm_PWP)) {
          // moisture is higher than 30% of permanent wilting point
          vm_EReductionFactor = vm_RelativeEvaporableWater;
        } else {
          // if moisture is below 30% of wilting point nothing can be evaporated
          vm_EReductionFactor = 0.0;
        }
      }

    } else if (vm_EvaporationReductionMethod == 1){
      // HERMES
      vm_EReductionFactor = 0.0;
      if (vm_RelativeEvaporableWater > 0.33) {
        vm_EReductionFactor = 1.0 - (0.1 * (1.0 - vm_RelativeEvaporableWater) / (1.0 - 0.33));
      } else if (vm_RelativeEvaporableWater > 0.22) {
        vm_EReductionFactor = 0.9 - (0.625 * (0.33 - vm_RelativeEvaporableWater) / (0.33-0.22));
      } else if (vm_RelativeEvaporableWater > 0.2) {
        vm_EReductionFactor = 0.275 - (0.225 * (0.22 - vm_RelativeEvaporableWater) / (0.22 - 0.2));
      } else {
        vm_EReductionFactor = 0.05 - (0.05 * (0.2 - vm_RelativeEvaporableWater) / 0.2);
      } // end if
    }
    return vm_EReductionFactor;
  };

  var get_DeprivationFactor = function (
    layerNo,
    deprivationDepth,
    zeta,
    vs_LayerThickness
  ) {
    // factor (f(depth)) to distribute the PET along the soil profil/rooting zone

    var deprivationFactor;

    // factor to introduce layer thickness in this algorithm,
    // to allow layer thickness scaling (Claas Nendel)
    var layerThicknessFactor = deprivationDepth / (vs_LayerThickness * 10.0);

    if ((abs(zeta)) < 0.0003) {

      deprivationFactor = (2.0 / layerThicknessFactor) - (1.0 / (layerThicknessFactor * layerThicknessFactor)) * (2
          * layerNo - 1);
      return deprivationFactor;

    } else {

      var c2 = 0.0;
      var c3 = 0.0;
      c2 = log((layerThicknessFactor + zeta * layerNo) / (layerThicknessFactor + zeta * (layerNo - 1)));
      c3 = zeta / (layerThicknessFactor * (zeta + 1.0));
      deprivationFactor = (c2 - c3) / (log(zeta + 1.0) - zeta / (zeta + 1.0));
      return deprivationFactor;
    }
  };

  var meanWaterContent = function (depth_m) {

    if (arguments.length === 1) {

      var lsum = 0.0; 
      var sum = 0.0;
      var count = 0;

      for (var i = 0; i < vs_NumberOfLayers; i++)
      {
        count++;
        var smm3 = soilColumn[i].get_Vs_SoilMoisture_m3();
        var fc = soilColumn[i].get_FieldCapacity();
        var pwp = soilColumn[i].get_PermanentWiltingPoint();
        sum += smm3 / (fc - pwp); //[%nFK]
        lsum += soilColumn[i].vs_LayerThickness;
        if (lsum >= depth_m)
          break;
      }

      return sum / count;
    } 

    var layer = arguments[0], 
        number_of_layers = arguments[1],
        sum = 0.0,
        count = 0;

    if (layer + number_of_layers > vs_NumberOfLayers) {
        return -1;
    }

    for (var i = layer; i < layer + number_of_layers; i++)
    {
      count++;
      var smm3 = soilColumn[i].get_Vs_SoilMoisture_m3();
      var fc = soilColumn[i].get_FieldCapacity();
      var pwp = soilColumn[i].get_PermanentWiltingPoint();
      sum += smm3 / (fc - pwp); //[%nFK]
    }

    return sum / count;

  };

  var get_SnowDepth = function () {
    return snowComponent.getVm_SnowDepth();
  };

  var getMaxSnowDepth = function () {
    return snowComponent.getMaxSnowDepth();
  };

  var accumulatedSnowDepth = function () {
    return snowComponent.accumulatedSnowDepth();
  };

  var getAccumulatedFrostDepth = function () {
    return frostComponent.getAccumulatedFrostDepth();
  };

  var put_Crop = function (c) {
    crop = c;
  };

  var remove_Crop = function () {
    crop = null;
  };

  var get_Infiltration = function () { 
    return vm_Infiltration; 
  };

  var get_SurfaceWaterStorage = function () { 
    return vm_SurfaceWaterStorage; 
  };

  var get_SurfaceRunOff = function () { 
    return vm_SurfaceRunOff; 
  };

  var get_Evapotranspiration = function () { 
    return vm_ActualEvapotranspiration; 
  };

  var get_ActualEvaporation = function () { 
    return vm_ActualEvaporation; 
  };

  var get_ET0  = function () { 
    return vm_ReferenceEvapotranspiration; 
  };

  var get_PercentageSoilCoverage = function () { 
    return vc_PercentageSoilCoverage; 
  };

  var get_StomataResistance = function () { 
    return vc_StomataResistance; 
  };

  var get_FrostDepth = function () { 
    return frostComponent.getFrostDepth(); 
  };

  var get_ThawDepth = function () { 
    return frostComponent.getThawDepth(); 
  };

  var get_GroundwaterRecharge = function () { 
    return vm_FluxAtLowerBoundary; 
  };

  var get_SumSurfaceRunOff = function () { 
    return vm_SumSurfaceRunOff; 
  };

  var get_KcFactor = function () { 
    return vc_KcFactor; 
  };

  var get_TranspirationDeficit = function () { 
    return vm_TranspirationDeficit; 
  };

  return {
      step: step
    , get_SnowDepth: get_SnowDepth
    , get_SoilMoisture: get_SoilMoisture
    , get_CapillaryRise: get_CapillaryRise
    , get_PercolationRate: get_PercolationRate
    , get_Infiltration: get_Infiltration
    , get_SurfaceWaterStorage: get_SurfaceWaterStorage
    , get_SurfaceRunOff: get_SurfaceRunOff
    , get_Evapotranspiration: get_Evapotranspiration
    , get_ActualEvaporation: get_ActualEvaporation
    , get_ET0: get_ET0
    , get_PercentageSoilCoverage: get_PercentageSoilCoverage
    , get_StomataResistance: get_StomataResistance
    , get_FrostDepth: get_FrostDepth
    , get_ThawDepth: get_ThawDepth
    , get_GroundwaterRecharge: get_GroundwaterRecharge
    , get_SumSurfaceRunOff: get_SumSurfaceRunOff
    , get_KcFactor: get_KcFactor
    , get_TranspirationDeficit: get_TranspirationDeficit
    , get_CapillaryRise: get_CapillaryRise
    , getMaxSnowDepth: getMaxSnowDepth
    , accumulatedSnowDepth: accumulatedSnowDepth
    , getAccumulatedFrostDepth: getAccumulatedFrostDepth
    , get_EReducer_1: get_EReducer_1
    , put_Crop: put_Crop
    , remove_Crop: remove_Crop
    , fm_Infiltration: fm_Infiltration
    , get_DeprivationFactor: get_DeprivationFactor
    , fm_CapillaryRise: fm_CapillaryRise
    , fm_PercolationWithGroundwater: fm_PercolationWithGroundwater
    , fm_GroundwaterReplenishment: fm_GroundwaterReplenishment
    , fm_PercolationWithoutGroundwater: fm_PercolationWithoutGroundwater
    , fm_BackwaterReplenishment: fm_BackwaterReplenishment
    , fm_Evapotranspiration: fm_Evapotranspiration
    , ReferenceEvapotranspiration: ReferenceEvapotranspiration
    , meanWaterContent: meanWaterContent
  } 

};


var SoilTransport = function (sc, sps, cpp) {

  var soilColumn = sc
    , centralParameterProvider = cpp
    , vs_NumberOfLayers = sc.vs_NumberOfLayers() // extern
    , vq_Convection = new Float64Array(vs_NumberOfLayers)
    , vq_CropNUptake = 0.0
    , vq_DiffusionCoeff = new Float64Array(vs_NumberOfLayers)
    , vq_Dispersion = new Float64Array(vs_NumberOfLayers)
    , vq_DispersionCoeff = new Float64Array(vs_NumberOfLayers)
    , vq_FieldCapacity = new Float64Array(vs_NumberOfLayers)
    , vq_LayerThickness = new Float64Array(vs_NumberOfLayers)
    , vq_LeachingAtBoundary = 0.0
    , vs_NDeposition = sps.vq_NDeposition
    , vc_NUptakeFromLayer = new Float64Array(vs_NumberOfLayers)
    , vq_PoreWaterVelocity = new Float64Array(vs_NumberOfLayers)
    , vq_SoilMoisture = new Float64Array(vs_NumberOfLayers)
    , vq_SoilNO3 = new Float64Array(vs_NumberOfLayers)
    , vq_SoilNO3_aq = new Float64Array(vs_NumberOfLayers)
    , vq_TimeStep = 1.0
    , vq_TotalDispersion = new Float64Array(vs_NumberOfLayers)
    , vq_PercolationRate = new Float64Array(vs_NumberOfLayers)
    , crop = null
    ;

  // JS! init arrays
  for (var i = 0; i < vs_NumberOfLayers; i++) {
    vq_DispersionCoeff[i] = 1.0;
    vq_LayerThickness[i] = 0.1;
    vq_SoilMoisture[i] = 0.2;
  }    

  console.log("!!! N Deposition: " + vs_NDeposition);
  var vs_LeachingDepth = centralParameterProvider.userEnvironmentParameters.p_LeachingDepth;
  var vq_TimeStep = centralParameterProvider.userEnvironmentParameters.p_timeStep;

  var step = function () {

    var vq_TimeStepFactor = 1.0; // [t t-1]

    for (var i_Layer = 0; i_Layer < vs_NumberOfLayers; i_Layer++) {
      vq_FieldCapacity[i_Layer] = soilColumn[i_Layer].get_FieldCapacity();
      vq_SoilMoisture[i_Layer] = soilColumn[i_Layer].get_Vs_SoilMoisture_m3();
      vq_SoilNO3[i_Layer] = soilColumn[i_Layer].vs_SoilNO3;

      vq_LayerThickness[i_Layer] = soilColumn[0].vs_LayerThickness;
      vc_NUptakeFromLayer[i_Layer] = crop ? crop.get_NUptakeFromLayer(i_Layer) : 0;
      if (i_Layer == (vs_NumberOfLayers - 1)){
        vq_PercolationRate[i_Layer] = soilColumn.vs_FluxAtLowerBoundary ; //[mm]
      } else {
        vq_PercolationRate[i_Layer] = soilColumn[i_Layer + 1].vs_SoilWaterFlux; //[mm]
      }
      // Variable time step in case of high water fluxes to ensure stable numerics
      if ((vq_PercolationRate[i_Layer] <= 5.0) && (vq_TimeStepFactor >= 1.0))
        vq_TimeStepFactor = 1.0;
      else if ((vq_PercolationRate[i_Layer] > 5.0) && (vq_PercolationRate[i_Layer] <= 10.0) && (vq_TimeStepFactor >= 1.0))
        vq_TimeStepFactor = 0.5;
      else if ((vq_PercolationRate[i_Layer] > 10.0) && (vq_PercolationRate[i_Layer] <= 15.0) && (vq_TimeStepFactor >= 0.5))
        vq_TimeStepFactor = 0.25;
      else if ((vq_PercolationRate[i_Layer] > 15.0) && (vq_TimeStepFactor >= 0.25))
        vq_TimeStepFactor = 0.125;
    }
  //  cout << "vq_SoilNO3[0]: " << vq_SoilNO3[0] << endl;

  //  if (isnan(vq_SoilNO3[0])) {
  //      cout << "vq_SoilNO3[0]: " << "NAN" << endl;
  //  }

    fq_NDeposition(vs_NDeposition);
    fq_NUptake();

    // Nitrate transport is called according to the set time step
    for (var i_TimeStep = 0; i_TimeStep < (1.0 / vq_TimeStepFactor); i_TimeStep++) {
      fq_NTransport(vs_LeachingDepth, vq_TimeStepFactor);
    }

    for (var i_Layer = 0; i_Layer < vs_NumberOfLayers; i_Layer++) {

      vq_SoilNO3[i_Layer] = vq_SoilNO3_aq[i_Layer] * vq_SoilMoisture[i_Layer];

      if (vq_SoilNO3[i_Layer] < 0.0) {
        vq_SoilNO3[i_Layer] = 0.0;
      }

      soilColumn[i_Layer].vs_SoilNO3 = vq_SoilNO3[i_Layer];
    } // for

  };

  /**
   * @brief Calculation of N deposition
   * Transformation of annual N Deposition into a daily value,
   * that can be used in MONICAs calculations. Addition of this
   * transformed N deposition to ammonium pool of top soil layer.
   *
   * @param vs_NDeposition
   *
   * Kersebaum 1989
   */
  var fq_NDeposition = function (vs_NDeposition) {
    //Daily N deposition in [kg N ha-1 d-1]
    var vq_DailyNDeposition = vs_NDeposition / 365.0;

    // Addition of N deposition to top layer [kg N m-3]
    vq_SoilNO3[0] += vq_DailyNDeposition / (10000.0 * soilColumn[0].vs_LayerThickness);

  };

  /**
   * @brief Calculation of crop N uptake
   * @param
   *
   * Kersebaum 1989
   */
  var fq_NUptake = function () {
    var vq_CropNUptake = 0.0;
    var pc_MinimumAvailableN = centralParameterProvider.userCropParameters.pc_MinimumAvailableN; // kg m-2

    for (var i_Layer = 0; i_Layer < vs_NumberOfLayers; i_Layer++) {

      // Lower boundary for N exploitation per layer
      if (vc_NUptakeFromLayer[i_Layer] > ((vq_SoilNO3[i_Layer] * vq_LayerThickness[i_Layer]) - pc_MinimumAvailableN)) {

        // Crop N uptake from layer i [kg N m-2]
        vc_NUptakeFromLayer[i_Layer] = ((vq_SoilNO3[i_Layer] * vq_LayerThickness[i_Layer]) - pc_MinimumAvailableN);
      }

      if (vc_NUptakeFromLayer[i_Layer] < 0) {
        vc_NUptakeFromLayer[i_Layer] = 0;
      }

      vq_CropNUptake += vc_NUptakeFromLayer[i_Layer];

      // Subtracting crop N uptake
      vq_SoilNO3[i_Layer] -= vc_NUptakeFromLayer[i_Layer] / vq_LayerThickness[i_Layer];

      // Calculation of solute NO3 concentration on the basis of the soil moisture
      // content before movement of current time step (kg m soil-3 --> kg m solute-3)
      vq_SoilNO3_aq[i_Layer] = vq_SoilNO3[i_Layer] / vq_SoilMoisture[i_Layer];
      if (vq_SoilNO3_aq[i_Layer] < 0) {
  //        cout << "vq_SoilNO3_aq[i_Layer] < 0 " << endl;
      }

    } // for

    // debug('vc_NUptakeFromLayer', vc_NUptakeFromLayer);

    soilColumn.vq_CropNUptake = vq_CropNUptake; // [kg m-2]

  };


  /**
   * @brief Calculation of N transport
   * @param vs_LeachingDepth
   *
   * Kersebaum 1989
   */
  var fq_NTransport = function (vs_LeachingDepth, vq_TimeStepFactor) {

    var user_trans = centralParameterProvider.userSoilTransportParameters;
    var vq_DiffusionCoeffStandard = user_trans.pq_DiffusionCoefficientStandard;// [m2 d-1]; old D0
    var AD = user_trans.pq_AD; // Factor a in Kersebaum 1989 p.24 for Loess soils
    var vq_DispersionLength = user_trans.pq_DispersionLength; // [m]
    var vq_SoilProfile = 0.0;
    var vq_LeachingDepthLayerIndex = 0;
    vq_LeachingAtBoundary = 0.0;

    var vq_SoilMoistureGradient = new Array(vs_NumberOfLayers);

    for (var i_Layer = 0; i_Layer < vs_NumberOfLayers; i_Layer++) {
      vq_SoilProfile += vq_LayerThickness[i_Layer];

      if ((vq_SoilProfile - 0.001) < vs_LeachingDepth) {
        vq_LeachingDepthLayerIndex = i_Layer;
      }
    }

    // Caluclation of convection for different cases of flux direction
    for (var i_Layer = 0; i_Layer < vs_NumberOfLayers; i_Layer++) {

      var wf0 = soilColumn[0].vs_SoilWaterFlux;
      var lt = soilColumn[i_Layer].vs_LayerThickness;
      var NO3 = vq_SoilNO3_aq[i_Layer];

      if (i_Layer == 0) {
        var pr = vq_PercolationRate[i_Layer] / 1000.0 * vq_TimeStepFactor; // [mm t-1 --> m t-1]
        var NO3_u = vq_SoilNO3_aq[i_Layer + 1];

        if (pr >= 0.0 && wf0 >= 0.0) {

          // old KONV = Konvektion Diss S. 23
          vq_Convection[i_Layer] = (NO3 * pr) / lt; //[kg m-3] * [m t-1] / [m]

        } else if (pr >= 0 && wf0 < 0) {

          vq_Convection[i_Layer] = (NO3 * pr) / lt;

        } else if (pr < 0 && wf0 < 0) {
          vq_Convection[i_Layer] = (NO3_u * pr) / lt;

        } else if (pr < 0 && wf0 >= 0) {

          vq_Convection[i_Layer] = (NO3_u * pr) / lt;
        }

      } else if (i_Layer < vs_NumberOfLayers - 1) {

        // layer > 0 && < bottom
        var pr_o = vq_PercolationRate[i_Layer - 1] / 1000.0 * vq_TimeStepFactor; //[mm t-1 --> m t-1] * [t t-1]
        var pr = vq_PercolationRate[i_Layer] / 1000.0 * vq_TimeStepFactor; // [mm t-1 --> m t-1] * [t t-1]
        var NO3_u = vq_SoilNO3_aq[i_Layer + 1];

        if (pr >= 0.0 && pr_o >= 0.0) {
          var NO3_o = vq_SoilNO3_aq[i_Layer - 1];

          // old KONV = Konvektion Diss S. 23
          vq_Convection[i_Layer] = ((NO3 * pr) - (NO3_o * pr_o)) / lt;

        } else if (pr >= 0 && pr_o < 0) {

          vq_Convection[i_Layer] = ((NO3 * pr) - (NO3 * pr_o)) / lt;

        } else if (pr < 0 && pr_o < 0) {

          vq_Convection[i_Layer] = ((NO3_u * pr) - (NO3 * pr_o)) / lt;

        } else if (pr < 0 && pr_o >= 0) {
          var NO3_o = vq_SoilNO3_aq[i_Layer - 1];
          vq_Convection[i_Layer] = ((NO3_u * pr) - (NO3_o * pr_o)) / lt;
        }

      } else {

        // bottom layer
        var pr_o = vq_PercolationRate[i_Layer - 1] / 1000.0 * vq_TimeStepFactor; // [m t-1] * [t t-1]
        var pr = soilColumn.vs_FluxAtLowerBoundary / 1000.0 * vq_TimeStepFactor; // [m t-1] * [t t-1]

        if (pr >= 0.0 && pr_o >= 0.0) {
          var NO3_o = vq_SoilNO3_aq[i_Layer - 1];

          // KONV = Konvektion Diss S. 23
          vq_Convection[i_Layer] = ((NO3 * pr) - (NO3_o * pr_o)) / lt;

        } else if (pr >= 0 && pr_o < 0) {

          vq_Convection[i_Layer] = ((NO3 * pr) - (NO3 * pr_o)) / lt;

        } else if (pr < 0 && pr_o < 0) {

          vq_Convection[i_Layer] = (-(NO3 * pr_o)) / lt;

        } else if (pr < 0 && pr_o >= 0) {
          var NO3_o = vq_SoilNO3_aq[i_Layer - 1];
          vq_Convection[i_Layer] = (-(NO3_o * pr_o)) / lt;
        }

      }// else
    } // for


    // Calculation of dispersion depending of pore water velocity
    for (var i_Layer = 0; i_Layer < vs_NumberOfLayers; i_Layer++) {

      var pr = vq_PercolationRate[i_Layer] / 1000.0 * vq_TimeStepFactor; // [mm t-1 --> m t-1] * [t t-1]
      var pr0 = soilColumn[0].vs_SoilWaterFlux / 1000.0 * vq_TimeStepFactor; // [mm t-1 --> m t-1] * [t t-1]
      var lt = soilColumn[i_Layer].vs_LayerThickness;
      var NO3 = vq_SoilNO3_aq[i_Layer];


      // Original: W(I) --> um Steingehalt korrigierte Feldkapazität
      /** @todo Claas: generelle Korrektur der Feldkapazität durch den Steingehalt */
      if (i_Layer == vs_NumberOfLayers - 1) {
        vq_PoreWaterVelocity[i_Layer] = abs((pr) / vq_FieldCapacity[i_Layer]); // [m t-1]
        vq_SoilMoistureGradient[i_Layer] = (vq_SoilMoisture[i_Layer]); //[m3 m-3]
      } else {
        vq_PoreWaterVelocity[i_Layer] = abs((pr) / ((vq_FieldCapacity[i_Layer]
                + vq_FieldCapacity[i_Layer + 1]) * 0.5)); // [m t-1]
        vq_SoilMoistureGradient[i_Layer] = ((vq_SoilMoisture[i_Layer])
           + (vq_SoilMoisture[i_Layer + 1])) * 0.5; //[m3 m-3]
      }

      vq_DiffusionCoeff[i_Layer] = vq_DiffusionCoeffStandard
           * (AD * exp(vq_SoilMoistureGradient[i_Layer] * 2.0 * 5.0)
           / vq_SoilMoistureGradient[i_Layer]) * vq_TimeStepFactor; //[m2 t-1] * [t t-1]

      // Dispersion coefficient, old DB
      if (i_Layer == 0) {

        vq_DispersionCoeff[i_Layer] = vq_SoilMoistureGradient[i_Layer] * (vq_DiffusionCoeff[i_Layer] // [m2 t-1]
    + vq_DispersionLength * vq_PoreWaterVelocity[i_Layer]) // [m] * [m t-1]
    - (0.5 * lt * abs(pr)) // [m] * [m t-1]
    + ((0.5 * vq_TimeStep * vq_TimeStepFactor * abs((pr + pr0) / 2.0))  // [t] * [t t-1] * [m t-1]
    * vq_PoreWaterVelocity[i_Layer]); // * [m t-1]
    //-->[m2 t-1]
      } else {
        var pr_o = vq_PercolationRate[i_Layer - 1] / 1000.0 * vq_TimeStepFactor; // [m t-1]

        vq_DispersionCoeff[i_Layer] = vq_SoilMoistureGradient[i_Layer] * (vq_DiffusionCoeff[i_Layer]
    + vq_DispersionLength * vq_PoreWaterVelocity[i_Layer]) - (0.5 * lt * abs(pr))
    + ((0.5 * vq_TimeStep * vq_TimeStepFactor * abs((pr + pr_o) / 2.0)) * vq_PoreWaterVelocity[i_Layer]);
      }

      //old DISP = Gesamt-Dispersion (D in Diss S. 23)
      if (i_Layer == 0) {
        var NO3_u = vq_SoilNO3_aq[i_Layer + 1];
        // vq_Dispersion = Dispersion upwards or downwards, depending on the position in the profile [kg m-3]
        vq_Dispersion[i_Layer] = -vq_DispersionCoeff[i_Layer] * (NO3 - NO3_u) / (lt * lt); // [m2] * [kg m-3] / [m2]

      } else if (i_Layer < vs_NumberOfLayers - 1) {
        var NO3_o = vq_SoilNO3_aq[i_Layer - 1];
        var NO3_u = vq_SoilNO3_aq[i_Layer + 1];
        vq_Dispersion[i_Layer] = (vq_DispersionCoeff[i_Layer - 1] * (NO3_o - NO3) / (lt * lt))
    - (vq_DispersionCoeff[i_Layer] * (NO3 - NO3_u) / (lt * lt));
      } else {
        var NO3_o = vq_SoilNO3_aq[i_Layer - 1];
        vq_Dispersion[i_Layer] = vq_DispersionCoeff[i_Layer - 1] * (NO3_o - NO3) / (lt * lt);
      }
    } // for

    // Update of NO3 concentration
    // including transfomation back into [kg NO3-N m soil-3]
    for (var i_Layer = 0; i_Layer < vs_NumberOfLayers; i_Layer++) {


      vq_SoilNO3_aq[i_Layer] += (vq_Dispersion[i_Layer] - vq_Convection[i_Layer]) / vq_SoilMoisture[i_Layer];
  //    double no3 = vq_SoilNO3_aq[i_Layer];
  //    double disp = vq_Dispersion[i_Layer];
  //    double conv = vq_Convection[i_Layer];
  //    double sm = vq_SoilMoisture[i_Layer];
  //    cout << i_Layer << "\t" << no3 << "\t" << disp << "\t" << conv << "\t" <<  sm << endl;
    }



    if (vq_PercolationRate[vq_LeachingDepthLayerIndex] > 0.0) {

      //vq_LeachingDepthLayerIndex = gewählte Auswaschungstiefe
      var lt = soilColumn[vq_LeachingDepthLayerIndex].vs_LayerThickness;
      var NO3 = vq_SoilNO3_aq[vq_LeachingDepthLayerIndex];

      if (vq_LeachingDepthLayerIndex < vs_NumberOfLayers - 1) {
        var pr_u = vq_PercolationRate[vq_LeachingDepthLayerIndex + 1] / 1000.0 * vq_TimeStepFactor;// [m t-1]
        var NO3_u = vq_SoilNO3_aq[vq_LeachingDepthLayerIndex + 1]; // [kg m-3]
        //vq_LeachingAtBoundary: Summe für Auswaschung (Diff + Konv), old OUTSUM
        vq_LeachingAtBoundary += ((pr_u * NO3) / lt * 10000.0 * lt) + ((vq_DispersionCoeff[vq_LeachingDepthLayerIndex]
    * (NO3 - NO3_u)) / (lt * lt) * 10000.0 * lt); //[kg ha-1]
      } else {
        var pr_u = soilColumn.vs_FluxAtLowerBoundary / 1000.0 * vq_TimeStepFactor; // [m t-1]
        vq_LeachingAtBoundary += pr_u * NO3 / lt * 10000.0 * lt; //[kg ha-1]
      }

    } else {

      var pr_u = vq_PercolationRate[vq_LeachingDepthLayerIndex] / 1000.0 * vq_TimeStepFactor;
      var lt = soilColumn[vq_LeachingDepthLayerIndex].vs_LayerThickness;
      var NO3 = vq_SoilNO3_aq[vq_LeachingDepthLayerIndex];

      if (vq_LeachingDepthLayerIndex < vs_NumberOfLayers - 1) {
        var NO3_u = vq_SoilNO3_aq[vq_LeachingDepthLayerIndex + 1];
        vq_LeachingAtBoundary += ((pr_u * NO3_u) / (lt * 10000.0 * lt)) + vq_DispersionCoeff[vq_LeachingDepthLayerIndex]
    * (NO3 - NO3_u) / ((lt * lt) * 10000.0 * lt); //[kg ha-1]
      }
    }

  //  cout << "vq_LeachingAtBoundary: " << vq_LeachingAtBoundary << endl;
  }

  /**
   * @brief Returns Nitrate content for each layer [i]
   * @return Soil NO3 content
   */
  var get_SoilNO3 = function (i_Layer) {
    return vq_SoilNO3[i_Layer];
  };

  /**
   * @brief Returns N leaching at leaching depth [kg ha-1]
   * @return Soil NO3 content
   */
  var get_NLeaching = function () {
    return vq_LeachingAtBoundary;
  };

  var put_Crop = function (c) {
    crop = c;
  };

  var remove_Crop = function () {
    crop = null;
  };

  return {
      step: step
    , fq_NDeposition: fq_NDeposition  // calculates daily N deposition
    , fq_NUptake: fq_NUptake // puts crop N uptake into effect
    , fq_NTransport: fq_NTransport  // calcuates N transport in soil
    , put_Crop: put_Crop
    , remove_Crop: remove_Crop
    , get_SoilNO3: get_SoilNO3
    , get_NLeaching: get_NLeaching
  };

};




var SoilTemperature = function (sc, mm, cpp) {

  var _soilColumn = sc,
      monica = mm,
      centralParameterProvider = cpp,
      _soilColumn_vt_GroundLayer = new SoilLayer(),
      _soilColumn_vt_BottomLayer = new SoilLayer(),
      soilColumn = {
        sc: sc,
        gl: _soilColumn_vt_GroundLayer,
        bl: _soilColumn_vt_BottomLayer,
        vs_nols: sc.vs_NumberOfLayers(),
        at: function (i) { 
          if (i < this.vs_nols){
            return this[i];
          } else {
            if (i < this.vs_nols + 1)
                return this.gl;
            return this.bl;
          }
        }
      };

  for (var i = 0; i < sc.vs_NumberOfLayers(); i++) {
    soilColumn[i] = sc[i];
    // console.log(!soilColumn[i]);
  }

  soilColumn[sc.vs_NumberOfLayers()] = soilColumn.gl;
  soilColumn[sc.vs_NumberOfLayers() + 1] = soilColumn.bl;


  var vt_NumberOfLayers = sc.vs_NumberOfLayers() + 2,
      vs_NumberOfLayers = sc.vs_NumberOfLayers(),  //extern
      vs_SoilMoisture_const = new Array(vt_NumberOfLayers),   //intern
      vt_SoilTemperature = new Array(vt_NumberOfLayers),      //result = vs_soiltemperature
      vt_V = new Array(vt_NumberOfLayers),                    //intern
      vt_VolumeMatrix = new Array(vt_NumberOfLayers),         //intern
      vt_VolumeMatrixOld = new Array(vt_NumberOfLayers),      //intern
      vt_B = new Array(vt_NumberOfLayers),                    //intern
      vt_MatrixPrimaryDiagonal = new Array(vt_NumberOfLayers),//intern
      vt_MatrixSecundaryDiagonal = new Array(vt_NumberOfLayers + 1),   //intern
      vt_HeatConductivity = new Array(vt_NumberOfLayers),              //intern
      vt_HeatConductivityMean = new Array(vt_NumberOfLayers),          //intern
      vt_HeatCapacity = new Array(vt_NumberOfLayers),                    //intern
      dampingFactor = 0.8,
      vt_HeatFlow = 0.0;


    for (var i = 0; i < vt_NumberOfLayers; i++) {
      vs_SoilMoisture_const[i] = 0.0;   
      vt_SoilTemperature[i] = 0.0;    
      vt_V[i] = 0.0;                    
      vt_VolumeMatrix[i] = 0.0;         
      vt_VolumeMatrixOld[i] = 0.0;      
      vt_B[i] = 0.0;                    
      vt_MatrixPrimaryDiagonal[i] = 0.0;
      vt_MatrixSecundaryDiagonal[i] = 0.0;   
      vt_HeatConductivity[i] = 0.0;              
      vt_HeatConductivityMean[i] = 0.0;          
      vt_HeatCapacity[i] = 0.0;                        
    }

    vt_MatrixPrimaryDiagonal[i + 1] = 0.0;

  console.log("Constructor: SoilTemperature");

  var user_temp = cpp.userSoilTemperatureParameters;

  var pt_BaseTemperature           = user_temp.pt_BaseTemperature;  // temp für unterste Schicht (durch. Jahreslufttemp-)
  var pt_InitialSurfaceTemperature = user_temp.pt_InitialSurfaceTemperature; // Replace by Mean air temperature
  var pt_Ntau                      = user_temp.pt_NTau;
  var pt_TimeStep                  = centralParameterProvider.userEnvironmentParameters.p_timeStep;  // schon in soil_moisture in DB extrahiert
  var ps_QuartzRawDensity          = user_temp.pt_QuartzRawDensity;
  var pt_SpecificHeatCapacityWater = user_temp.pt_SpecificHeatCapacityWater;   // [J kg-1 K-1]
  var pt_SpecificHeatCapacityQuartz = user_temp.pt_SpecificHeatCapacityQuartz; // [J kg-1 K-1]
  var pt_SpecificHeatCapacityAir = user_temp.pt_SpecificHeatCapacityAir;       // [J kg-1 K-1]
  var pt_SpecificHeatCapacityHumus = user_temp.pt_SpecificHeatCapacityHumus;   // [J kg-1 K-1]
  var pt_DensityWater = user_temp.pt_DensityWater;   // [kg m-3]
  var pt_DensityAir = user_temp.pt_DensityAir;       // [kg m-3]
  var pt_DensityHumus = user_temp.pt_DensityHumus;   // [kg m-3]


  //  cout << "Monica: pt_BaseTemperature: " << pt_BaseTemperature << endl;
  //  cout << "Monica: pt_InitialSurfaceTemperature: " << pt_InitialSurfaceTemperature << endl;
  //  cout << "Monica: NTau: " << pt_Ntau << endl;

    // according to sensitivity tests, soil moisture has minor
    // influence to the temperature and thus can be set as constant
    // by xenia
  var ps_SoilMoisture_const = user_temp.pt_SoilMoisture;
  //  cout << "Monica: ps_SoilMoisture_const: " << ps_SoilMoisture_const << endl;

  // Initialising the soil properties until a database feed is realised
  for (var i_Layer = 0; i_Layer < vs_NumberOfLayers; i_Layer++) {

    // Initialising the soil temperature
    vt_SoilTemperature[i_Layer] =  (  (1.0 - ((i_Layer) / vs_NumberOfLayers))
              * pt_InitialSurfaceTemperature)
           +( ((i_Layer) / vs_NumberOfLayers) * pt_BaseTemperature);

    // Initialising the soil moisture content
    // Soil moisture content is held constant for numeric stability.
    // If dynamic soil moisture should be used, the energy balance
    // must be extended by latent heat flow.
    vs_SoilMoisture_const[i_Layer] = ps_SoilMoisture_const;

  }

  // Determination of the geometry parameters for soil temperature calculation
  // with Cholesky-Verfahren

  vt_V[0] = soilColumn[0].vs_LayerThickness;
  vt_B[0] = 2.0 / soilColumn[0].vs_LayerThickness;

  var vt_GroundLayer = vt_NumberOfLayers - 2;
  var vt_BottomLayer = vt_NumberOfLayers - 1;

  soilColumn[vt_GroundLayer].vs_LayerThickness = 2.0 * soilColumn[vt_GroundLayer - 1].vs_LayerThickness;
  soilColumn[vt_BottomLayer].vs_LayerThickness = 1.0;
  vt_SoilTemperature[vt_GroundLayer] = (vt_SoilTemperature[vt_GroundLayer - 1] + pt_BaseTemperature) * 0.5;
  vt_SoilTemperature[vt_BottomLayer] = pt_BaseTemperature;

  var vt_h0 = soilColumn[0].vs_LayerThickness;

  for (var i_Layer = 1; i_Layer < vt_NumberOfLayers; i_Layer++) {

    var vt_h1 = soilColumn[i_Layer].vs_LayerThickness; // [m]
    vt_B[i_Layer] = 2.0 / (vt_h1 + vt_h0); // [m]
    vt_V[i_Layer] = vt_h1 * pt_Ntau; // [m3]
    vt_h0 = vt_h1;
  }

  // End determination of the geometry parameters for soil temperature calculation


  // initialising heat state variables
  for (var i_Layer = 0; i_Layer < vs_NumberOfLayers; i_Layer++) {
    // console.log("layer: " + i_Layer);

    ///////////////////////////////////////////////////////////////////////////////////////
    // Calculate heat conductivity following Neusypina 1979
    // Neusypina, T.A. (1979): Rascet teplovo rezima pocvi v modeli formirovanija urozaja.
    // Teoreticeskij osnovy i kolicestvennye metody programmirovanija urozaev. Leningrad,
    // 53 -62.
    // Note: in this original publication lambda is calculated in cal cm-1 s-1 K-1!
    ///////////////////////////////////////////////////////////////////////////////////////
    var sbdi = soilColumn.at(i_Layer).vs_SoilBulkDensity();
    var smi = vs_SoilMoisture_const[i_Layer];

    // console.log("sbdi: " + sbdi);  
    // console.log("smi: " + smi);  

    vt_HeatConductivity[i_Layer] = ((3.0 * (sbdi / 1000.0) - 1.7) * 0.001) /
           (1.0 + (11.5 - 5.0 * (sbdi / 1000.0)) *
            exp((-50.0) * pow((smi / (sbdi / 1000.0)), 1.5))) *
           86400.0 * (pt_TimeStep) * //  gives result in [days]
           100.0  //  gives result in [m]
           * 4.184; // gives result in [J]
           // --> [J m-1 d-1 K-1]

    // console.log("vt_HeatConductivity");       
    // console.log(vt_HeatConductivity);      

    ///////////////////////////////////////////////////////////////////////////////////////
    // Calculate specific heat capacity following DAISY
    // Abrahamsen, P, and S. Hansen (2000): DAISY - An open soil-crop-atmosphere model
    // system. Environmental Modelling and Software 15, 313-330
    ///////////////////////////////////////////////////////////////////////////////////////

    var cw = pt_SpecificHeatCapacityWater;
    var cq = pt_SpecificHeatCapacityQuartz;
    var ca = pt_SpecificHeatCapacityAir;
    var ch = pt_SpecificHeatCapacityHumus;
    var dw = pt_DensityWater;
    var dq = ps_QuartzRawDensity;
    var da = pt_DensityAir;
    var dh = pt_DensityHumus;
    var spv = soilColumn[i_Layer].get_Saturation();
    var som = soilColumn.at(i_Layer).vs_SoilOrganicMatter() / da * sbdi; // Converting [kg kg-1] to [m3 m-3]


    vt_HeatCapacity[i_Layer] = (smi * dw * cw)
       +((spv-smi) * da * ca)
       + (som * dh * ch)
       + ( (1.0 - spv - som) * dq * cq);
       // --> [J m-3 K-1]
  } // for


  vt_HeatCapacity[vt_GroundLayer] = vt_HeatCapacity[vt_GroundLayer - 1];
  vt_HeatCapacity[vt_BottomLayer] = vt_HeatCapacity[vt_GroundLayer];
  vt_HeatConductivity[vt_GroundLayer] = vt_HeatConductivity[vt_GroundLayer - 1];
  vt_HeatConductivity[vt_BottomLayer] = vt_HeatConductivity[vt_GroundLayer];

  // Initialisation soil surface temperature
  vt_SoilSurfaceTemperature = pt_InitialSurfaceTemperature;


  ///////////////////////////////////////////////////////////////////////////////////////
  // Initialising Numerical Solution
  // Suckow,F. (1985): A model serving the calculation of soil
  // temperatures. Zeitschrift für Meteorologie 35 (1), 66 -70.
  ///////////////////////////////////////////////////////////////////////////////////////

  // Calculation of the mean heat conductivity per layer
  vt_HeatConductivityMean[0] = vt_HeatConductivity[0];
  // console.log(vt_HeatConductivityMean);

  for (var i_Layer = 1; i_Layer < vt_NumberOfLayers; i_Layer++) {

    var lti_1 = soilColumn.at(i_Layer - 1).vs_LayerThickness;
    var lti = soilColumn.at(i_Layer).vs_LayerThickness;
    var hci_1 = vt_HeatConductivity[i_Layer - 1];
    var hci = vt_HeatConductivity[i_Layer];

    // @todo <b>Claas: </b>Formel nochmal durchgehen
    vt_HeatConductivityMean[i_Layer] = ((lti_1 * hci_1) + (lti * hci)) / (lti + lti_1);
    // console.log(vt_HeatConductivityMean);

  } // for

  // Determination of the volume matrix
  for (var i_Layer = 0; i_Layer < vt_NumberOfLayers; i_Layer++) {

    vt_VolumeMatrix[i_Layer] = vt_V[i_Layer] * vt_HeatCapacity[i_Layer]; // [J K-1]

    // If initial entry, rearrengement of volume matrix
    vt_VolumeMatrixOld[i_Layer] = vt_VolumeMatrix[i_Layer];

    // Determination of the matrix secundary diagonal
    vt_MatrixSecundaryDiagonal[i_Layer] = -vt_B[i_Layer] * vt_HeatConductivityMean[i_Layer]; //[J K-1]

  }




  vt_MatrixSecundaryDiagonal[vt_BottomLayer + 1] = 0.0;

  // Determination of the matrix primary diagonal
  for (var i_Layer = 0; i_Layer < vt_NumberOfLayers; i_Layer++) {

    vt_MatrixPrimaryDiagonal[i_Layer] =   vt_VolumeMatrix[i_Layer]
          - vt_MatrixSecundaryDiagonal[i_Layer]
          - vt_MatrixSecundaryDiagonal[i_Layer + 1]; //[J K-1]
  }

  /**
   * @brief Single calculation step
   * @param tmin
   * @param tmax
   * @param globrad
   */
  var step = function (tmin, tmax, globrad) {

    // console.log("-------- SoilTemperature::step ----------");
    // console.log(arguments);

    var vt_GroundLayer = vt_NumberOfLayers - 2;
    var vt_BottomLayer = vt_NumberOfLayers - 1;

    var vt_Solution = new Array(vt_NumberOfLayers);//                = new double [vt_NumberOfLayers];
    var vt_MatrixDiagonal = new Array(vt_NumberOfLayers);//          = new double [vt_NumberOfLayers];
    var vt_MatrixLowerTriangle = new Array(vt_NumberOfLayers);//     = new double [vt_NumberOfLayers];

    for (var i = 0; i < vt_NumberOfLayers; i++) {
      vt_Solution[i] = 0.0;
      vt_MatrixDiagonal[i] = 0.0;
      vt_MatrixLowerTriangle[i] = 0.0;
    }

    /////////////////////////////////////////////////////////////
    // Internal Subroutine Numerical Solution - Suckow,F. (1986)
    /////////////////////////////////////////////////////////////

    vt_HeatFlow = f_SoilSurfaceTemperature(tmin, tmax, globrad) * vt_B[0] * vt_HeatConductivityMean[0]; //[J]

    // Determination of the equation's right side
    vt_Solution[0] =  (vt_VolumeMatrixOld[0]
       + (vt_VolumeMatrix[0] - vt_VolumeMatrixOld[0]) / soilColumn[0].vs_LayerThickness)
        * vt_SoilTemperature[0] + vt_HeatFlow;

    // console.log("f_SoilSurfaceTemperature(tmin, tmax, globrad): " + f_SoilSurfaceTemperature(tmin, tmax, globrad));
    // console.log("vt_B[0]: " + vt_B[0]);
    // console.log("vt_HeatConductivityMean[0]: " + vt_HeatConductivityMean[0]);
    // console.log("vt_HeatFlow: " + vt_HeatFlow);
    // console.log("vt_Solution[0]: " + vt_Solution[0]);

    for (var i_Layer = 1; i_Layer < vt_NumberOfLayers; i_Layer++) {

      vt_Solution[i_Layer] =   (vt_VolumeMatrixOld[i_Layer]
        + (vt_VolumeMatrix[i_Layer] - vt_VolumeMatrixOld[i_Layer])
        / soilColumn[i_Layer].vs_LayerThickness)
          * vt_SoilTemperature[i_Layer];
    } // for

      // console.log(vt_Solution);

    // end subroutine NumericalSolution

    /////////////////////////////////////////////////////////////
    // Internal Subroutine Cholesky Solution Method
    //
    // Solution of EX=Z with E tridiagonal and symmetric
    // according to CHOLESKY (E=LDL')
    /////////////////////////////////////////////////////////////

    // Determination of the lower matrix triangle L and the diagonal matrix D
    vt_MatrixDiagonal[0] = vt_MatrixPrimaryDiagonal[0];

    for (var i_Layer = 1; i_Layer < vt_NumberOfLayers; i_Layer++) {

      vt_MatrixLowerTriangle[i_Layer] = vt_MatrixSecundaryDiagonal[i_Layer] / vt_MatrixDiagonal[i_Layer - 1];
      vt_MatrixDiagonal[i_Layer] =   vt_MatrixPrimaryDiagonal[i_Layer]
             - (vt_MatrixLowerTriangle[i_Layer] * vt_MatrixSecundaryDiagonal[i_Layer]);
    }

    // Solution of LY=Z
    for (var i_Layer = 1; i_Layer < vt_NumberOfLayers; i_Layer++) {

      vt_Solution[i_Layer] =   vt_Solution[i_Layer]
               - (vt_MatrixLowerTriangle[i_Layer] * vt_Solution[i_Layer - 1]);
    }

    // Solution of L'X=D(-1)Y
    vt_Solution[vt_BottomLayer] = vt_Solution[vt_BottomLayer] / vt_MatrixDiagonal[vt_BottomLayer];


    for (var i_Layer = 0; i_Layer < vt_BottomLayer; i_Layer++) {

      var j_Layer = (vt_BottomLayer - 1) - i_Layer;
      var j_Layer1 = j_Layer + 1;
      vt_Solution[j_Layer] =   (vt_Solution[j_Layer] / vt_MatrixDiagonal[j_Layer])
               - (vt_MatrixLowerTriangle[j_Layer1] * vt_Solution[j_Layer1]);
    }

    // end subroutine CholeskyMethod

    // Internal Subroutine Rearrangement
    for(var i_Layer = 0; i_Layer < vt_NumberOfLayers; i_Layer++) {
      vt_SoilTemperature[i_Layer] = vt_Solution[i_Layer];
    }

    for (var i_Layer = 0; i_Layer < vs_NumberOfLayers; i_Layer++) {

      vt_VolumeMatrixOld[i_Layer] = vt_VolumeMatrix[i_Layer];
      soilColumn[i_Layer].set_Vs_SoilTemperature(vt_SoilTemperature[i_Layer]);
    }

    vt_VolumeMatrixOld[vt_GroundLayer] = vt_VolumeMatrix[vt_GroundLayer];
    vt_VolumeMatrixOld[vt_BottomLayer] = vt_VolumeMatrix[vt_BottomLayer];

  };


  /**
   * @brief  Soil surface temperature [B0C]
   *
   * Soil surface temperature caluclation following Williams 1984
   *
   * @param tmin
   * @param tmax
   * @param globrad
   */
  var f_SoilSurfaceTemperature = function (tmin, tmax, globrad) {

    var shading_coefficient = dampingFactor;

    var soil_coverage = 0.0;
    if (monica.cropGrowth()) {
      soil_coverage = monica.cropGrowth().get_SoilCoverage();
    }
    shading_coefficient =  0.1 + ((soil_coverage * dampingFactor) + ((1-soil_coverage) * (1-dampingFactor)));


    // Soil surface temperature caluclation following Williams 1984
    var vt_SoilSurfaceTemperatureOld = vt_SoilSurfaceTemperature;

    // corrected for very low radiation in winter
    if (globrad < 8.33) {
      globrad = 8.33;
    }

    vt_SoilSurfaceTemperature =   (1.0 - shading_coefficient)
          * (tmin + ((tmax - tmin) * pow((0.03 * globrad),0.5)))
          + shading_coefficient * vt_SoilSurfaceTemperatureOld;

    // damping negative temperatures due to heat loss for freezing water
    if (vt_SoilSurfaceTemperature < 0.0){
      vt_SoilSurfaceTemperature = vt_SoilSurfaceTemperature * 0.5;
    }
    return vt_SoilSurfaceTemperature;
  };

  /**
   * @brief Returns soil surface temperature.
   * @param
   * @return Soil surface temperature
   */
  var get_SoilSurfaceTemperature = function () {
    return vt_SoilSurfaceTemperature;
  };

  /**
   * @brief Returns soil temperature of a layer.
   * @param layer Index of layer
   * @return Soil temperature
   */
  get_SoilTemperature = function (layer) {
    return soilColumn[layer].get_Vs_SoilTemperature();
  };

  /**
   * @brief Returns heat conductivity of a layer.
   * @param layer Index of layer
   * @return Soil heat conductivity
   */
  var get_HeatConductivity = function (layer) {
    return vt_HeatConductivity[layer];
  };

  /**
   * @brief Returns mean soil temperature.
   * @param sumLT
   * @return Temperature
   */
  var get_AvgTopSoilTemperature = function (sumLT) {
    if (arguments.length === 0)
      sumLT = 0.3;
    var lsum = 0;
    var tempSum = 0;
    var count = 0;

    for (var i = 0; i < vs_NumberOfLayers; i++) {
      count++;
      tempSum += soilColumn[i].get_Vs_SoilTemperature();
      lsum += soilColumn[i].vs_LayerThickness;
      if(lsum >= sumLT) {
        break;
      }
    }

    return count < 1 ? 0 : tempSum / (count);
  };

  return {
      step: step
    , f_SoilSurfaceTemperature: f_SoilSurfaceTemperature
    , get_SoilSurfaceTemperature: get_SoilSurfaceTemperature
    , get_SoilTemperature: get_SoilTemperature
    , get_HeatConductivity: get_HeatConductivity
    , get_AvgTopSoilTemperature: get_AvgTopSoilTemperature
    , getDampingFactor: function () { return dampingFactor; }
    , setDampingFactor: function (factor) { dampingFactor = factor; }
    , vt_SoilSurfaceTemperature: vt_SoilSurfaceTemperature
  };

};


var Configuration = function (outPath) {

  /* no output if null */ 
  var _outPath = outPath; 

  var run = function run(simObj, siteObj, cropObj) {
    
    var sp = new SiteParameters();
    var cpp = readUserParameterFromDatabase();
    var gp = new GeneralParameters(
      cpp.userEnvironmentParameters.p_LayerThickness,
      cpp.userEnvironmentParameters.p_LayerThickness * cpp.userEnvironmentParameters.p_NumberOfLayers
    );

    /* fetch soil horizon array */
    var horizonsArr = siteObj.horizons;
    /* fetch crop array */
    var cropsArr = cropObj.crops;

    /* sim */
    var startYear = simObj.time.startYear;
    var endYear = simObj.time.endYear;

    cpp.userEnvironmentParameters.p_UseSecondaryYields = simObj.switch.useSecondaryYieldOn;
    gp.pc_NitrogenResponseOn = simObj.switch.nitrogenResponseOn;
    gp.pc_WaterDeficitResponseOn = simObj.switch.waterDeficitResponseOn;
    gp.pc_EmergenceMoistureControlOn = simObj.switch.emergenceMoistureControlOn;
    gp.pc_EmergenceFloodingControlOn = simObj.switch.emergenceFloodingControlOn;

    cpp.userInitValues.p_initPercentageFC = simObj.init.percentageFC;
    cpp.userInitValues.p_initSoilNitrate = simObj.init.soilNitrate;
    cpp.userInitValues.p_initSoilAmmonium = simObj.init.soilAmmonium;

    console.log("fetched sim data");
    
    /* site */
    sp.vq_NDeposition = siteObj.NDeposition;
    sp.vs_Latitude = siteObj.latitude;
    sp.vs_Slope = siteObj.slope;
    sp.vs_HeightNN = siteObj.heightNN;
    sp.vs_Soil_CN_Ratio = 10; //TODO: per layer?
    sp.vs_DrainageCoeff = -1; //TODO: ?

    cpp.userEnvironmentParameters.p_AthmosphericCO2 = siteObj.atmosphericCO2;
    if (siteObj.groundwaterDepthMin)
      cpp.userEnvironmentParameters.p_MinGroundwaterDepth = siteObj.groundwaterDepthMin;
    if (siteObj.groundwaterDepthMax)
      cpp.userEnvironmentParameters.p_MaxGroundwaterDepth = siteObj.groundwaterDepthMax;
    if (siteObj.groundwaterDepthMinMonth)
      cpp.userEnvironmentParameters.p_MinGroundwaterDepthMonth = siteObj.groundwaterDepthMinMonth;
    cpp.userEnvironmentParameters.p_WindSpeedHeight = siteObj.windSpeedHeight;  
    cpp.userEnvironmentParameters.p_LeachingDepth = siteObj.leachingDepth;  
    // cpp.userEnvironmentParameters.p_NumberOfLayers = horizonsArr.numberOfLayers; // JV! currently not present in json 

    // TODO: maxMineralisationDepth? (gp ps_MaxMineralisationDepth und ps_MaximumMineralisationDepth?)
    gp.ps_MaxMineralisationDepth = 0.4;

    console.log("fetched site data");

    /* soil */
    var lThicknessCm = 100.0 * cpp.userEnvironmentParameters.p_LayerThickness;
    var maxDepthCm =  200.0;
    var maxNoOfLayers = int(maxDepthCm / lThicknessCm);

    var layers = [];
    if (!createLayers(layers, horizonsArr, lThicknessCm, maxNoOfLayers)) {
      console.log("Error fetching soil data");
      return;
    }
    
    console.log("fetched soil data");

    /* weather */
    var da = new DataAccessor(new Date(startYear, 0, 1), new Date(endYear, 11, 31));
    if (!createClimate(da, cpp, sp.vs_Latitude)) {
      console.log("Error fetching climate data");
      return;
    }
    
    console.log("fetched climate data");

    /* crops */
    var pps = [];
    if (!createProcesses(pps, cropsArr)) {
      console.log("Error fetching crop data");
      return;
    }
    
    console.log("fetched crop data");

    var env = new Environment(layers, cpp);
    env.general = gp;
    env.pathToOutputDir = _outPath;
    // env.setMode(1); // JS! not implemented
    env.site = sp;
    env.da = da;
    env.cropRotation = pps;
   
    // TODO: implement and test useAutomaticIrrigation & useNMinFertiliser
    // if (hermes_config->useAutomaticIrrigation()) {
    //   env.useAutomaticIrrigation = true;
    //   env.autoIrrigationParams = hermes_config->getAutomaticIrrigationParameters();
    // }

    // if (hermes_config->useNMinFertiliser()) {
    //   env.useNMinMineralFertilisingMethod = true;
    //   env.nMinUserParams = hermes_config->getNMinUserParameters();
    //   env.nMinFertiliserPartition = getMineralFertiliserParametersFromMonicaDB(hermes_config->getMineralFertiliserID());
    // }

    console.log("run monica");

    return runMonica(env);
  };


  var createLayers = function createLayers(layers, horizonsArr, lThicknessCm, maxNoOfLayers) {

    var ok = true;
    var hs = horizonsArr.length;
    
    console.log("fetching " + hs + " horizons");

    for (var h = 0; h < hs; ++h ) {
      
      var horizonObj = horizonsArr[h];

      var hLoBoundaryCm = 100 * horizonObj.lowerBoundary;
      var hUpBoundaryCm = layers.length * lThicknessCm;
      var hThicknessCm = max(0, hLoBoundaryCm - hUpBoundaryCm);
      var lInHCount = int(round(hThicknessCm / lThicknessCm));

      /* fill all (maxNoOfLayers) layers if available horizons depth < lThicknessCm * maxNoOfLayers */
      if (h == (hs - 1) && (int(layers.length) + lInHCount) < maxNoOfLayers)
        lInHCount += maxNoOfLayers - layers.length - lInHCount;

      var layer = new SoilParameters();
      layer.set_vs_SoilOrganicCarbon(horizonObj.Corg); //TODO: / 100 ?
      if (horizonObj.bulkDensity)
        layer.set_vs_SoilBulkDensity(horizonObj.bulkDensity / 1000); // [kg m-3] -> [g cm-3]
      layer.vs_SoilSandContent = horizonObj.sand;
      layer.vs_SoilClayContent = horizonObj.clay;
      layer.vs_SoilStoneContent = horizonObj.sceleton; //TODO: / 100 ?
      layer.vs_Lambda = Tools.texture2lambda(layer.vs_SoilSandContent, layer.vs_SoilClayContent);
      // TODO: Wo wird textureClass verwendet?
      layer.vs_SoilTexture = horizonObj.textureClass;
      layer.vs_SoilpH = horizonObj.pH;
      /* TODO: ? lambda = drainage_coeff ? */
      layer.vs_Lambda = Tools.texture2lambda(layer.vs_SoilSandContent, layer.vs_SoilClayContent);
      layer.vs_FieldCapacity = horizonObj.fieldCapacity;
      /* TODO: name? */
      layer.vs_Saturation = horizonObj.poreVolume;
      layer.vs_PermanentWiltingPoint = horizonObj.permanentWiltingPoint;

      /* TODO: hinter readJSON verschieben */ 
      if (!layer.isValid()) {
        ok = false;
        console.log("Error in soil parameters.");
      }

      for (var l = 0; l < lInHCount; l++) {
        layers.push(layer);
        console.log("fetched layer " + layers.length + " in horizon " + h);
      }

      console.log("fetched horizon " + h);
    }  

    return ok;
  };

  function createProcesses(pps, cropsArr) {
    
    var ok = true;
    var cs = cropsArr.length;
    console.log("fetching " + cs + " crops");
    for (var c = 0; c < cs; c++) {

      var cropObj = cropsArr[c];
      var cropId = -1;

      var name = cropObj.name;
      var genType = cropObj.genType;
      var spec = cropObj.spec;

      for (var r = 0, rs = data.crop.rows.length; r < rs; r++) {
        var row = data.crop.rows[r];
        if (row.name === name && row.gen_type === genType && row.spec === spec)
          cropId = row.id;
      }

      if (cropId < 0) {
        ok = false;
        console.log("Invalid crop id: " + name + ', ' + genType + ', ' + spec);
      }

      var sd = new Date(Date.parse(cropObj.sowingDate));
      var hd = new Date(Date.parse(cropObj.finalHarvestDate));

      debug(name, 'name');
      debug(sd, 'sd');
      debug(hd, 'hd');

      if (!sd.isValid() || !hd.isValid()) {
        ok = false;
        console.log("Invalid sowing or harvest date");
      }

      var crop = new Crop(cropId, name /*TODO: hermesCropId?*/);
      crop.setSeedAndHarvestDate(sd, hd);
      crop.setCropParameters(getCropParameters(crop.id()));
      crop.setResidueParameters(getResidueParameters(crop.id()));

      pps[c] = new ProductionProcess(name, crop);

      /* tillage */
      var tillArr = cropObj.tillageOps;
      if (tillArr) { /* in case no tillage has been added */
        if (!addTillageOps(pps[c], tillArr)) {
          ok = false;
          console.log("Error adding tillages");
        }
      }

      /* mineral fertilizer */
      var minFertArr = cropObj.mineralFertilisers;
      if (minFertArr) { /* in case no min fertilizer has been added */
        if (!addFertilizers(pps[c], minFertArr, false)) {
          ok = false;
          console.log("Error adding mineral fertilisers");
        }
      }

      /* organic fertilizer */ 
      var orgFertArr = cropObj.organicFertilisers;
      if (orgFertArr) { /* in case no org fertilizer has been added */ 
        if (!addFertilizers(pps[c], orgFertArr, true)) {
          ok = false;
          console.log("Error adding organic fertilisers");
        }
      }

      /* irrigations */
      var irriArr = cropObj.irrigations;
      if (irriArr) {  /* in case no irrigation has been added */
        if (!addIrrigations(pps[c], irriArr)) {
          ok = false;
          console.log("Error adding irrigations");
        }
      }

      /* cutting */
      var cutArr = cropObj.cuttings;
      if (cutArr) { /* in case no tillage has been added */
        if (!addCuttings(pps[c], cutArr)) {
          ok = false;
          console.log("Error adding cuttings");
        }
      }

      console.log("fetched crop " + c + ", name: " + name + ", id: " + cropId);
    }

    return ok;
  };

  function addTillageOps(pp, tillArr) {

    var ok = true;
    var ts = tillArr.length;

    console.log("fetching " + ts + " tillages");

    for (var t = 0; t < ts; ++t) {
      var tillObj = tillArr[t];
      var tDate = new Date(Date.parse(tillObj.date));
      var depth = tillObj.depth / 100; // cm to m
      var method = tillObj.method;

      if (!tDate.isValid()) {
        ok = false;
        console.log("Invalid tillage date " + method);
      }

      pp.addApplication(new TillageApplication(tDate, depth));
    }

    return ok;
  };

  function addFertilizers(pp, fertArr, isOrganic) {
    // TODO: implement in JS
    /*
    //get data parsed and to use leap years if the crop rotation uses them
    Date fDateate = parseDate(sfDateate).toDate(it->crop()->seedDate().useLeapYears());

    if (!fDateate.isValid())
    {
      debug() << "Error - Invalid date in \"" << pathToFile << "\"" << endl;
      debug() << "Line: " << s << endl;
      ok = false;
    }

   //if the currently read fertiliser date is after the current end
    //of the crop, move as long through the crop rotation as
    //we find an end date that lies after the currently read fertiliser date
    while (fDateate > currentEnd)
    {
      //move to next crop and possibly exit at the end
      it++;
      if (it == cr.end())
        break;

      currentEnd = it->end();

      //cout << "new PP start: " << it->start().toString()
      //<< " new PP end: " << it->end().toString() << endl;
      //cout << "new currentEnd: " << currentEnd.toString() << endl;
    }
    */
    var ok = true;
    var fs = fertArr.length;

    console.log("fetching " + fs + " fertilizers");

    for (var f = 0; f < fs; ++f) {
      
      var fertObj = fertArr[f];
      var fDate = new Date(Date.parse(fertObj.date));
      var method = fertObj.method;
      var type = fertObj.type;
      var amount = fertObj.amount;

      if (!fDate.isValid()) {
        ok = false;
        console.log("Invalid fertilization date " + type + ", " + method);
      }

      if (isOrganic)  {
        var orgId = -1;
        for (var r = 0, rs = data.organic_fertilisers.rows.length; r < rs; r++) {
          if (data.organic_fertilisers.rows[r].type === type) {
            orgId = data.organic_fertilisers.rows[r].ID; 
            pp.addApplication(new OrganicFertiliserApplication(fDate, getOrganicFertiliserParameters(orgId), amount, true));
            break;
          }
        }
        if (orgId < 0) {
          console.log("Error: " + type + " not found.");
          ok = false;
        }
      }
      else { // not organic
        var minId = -1;
        for (var r = 0, rs = data.mineral_fertilisers.rows.length; r < rs; r++) {
          if (data.mineral_fertilisers.rows[r].type === type) {
            minId = data.mineral_fertilisers.rows[r].ID; 
            pp.addApplication(new MineralFertiliserApplication(fDate, getMineralFertiliserParameters(minId), amount));
            break;
          }
        }
        if (minId < 0) {
          console.log("Error: " + type + " not found.");
          ok = false;
        }
      }
    }
     
    return ok;
  };


  function addIrrigations(pp, irriArr) {
    
    var ok = true;

    // TODO: implement in JS
    //get data parsed and to use leap years if the crop rotation uses them
    /*Date idate = parseDate(irrDate).toDate(it->crop()->seedDate().useLeapYears());
    if (!idate.isValid())
    {
      debug() << "Error - Invalid date in \"" << pathToFile << "\"" << endl;
      debug() << "Line: " << s << endl;
      debug() << "Aborting simulation now!" << endl;
      exit(-1);
    }

    //cout << "PP start: " << it->start().toString()
    //<< " PP end: " << it->end().toString() << endl;
    //cout << "irrigationDate: " << idate.toString()
    //<< " currentEnd: " << currentEnd.toString() << endl;

    //if the currently read irrigation date is after the current end
    //of the crop, move as long through the crop rotation as
    //we find an end date that lies after the currently read irrigation date
    while (idate > currentEnd)
    {
      //move to next crop and possibly exit at the end
      it++;
      if (it == cr.end())
        break;

      currentEnd = it->end();

      //cout << "new PP start: " << it->start().toString()
      //<< " new PP end: " << it->end().toString() << endl;
      //cout << "new currentEnd: " << currentEnd.toString() << endl;
    }*/

    var is = irriArr.length;
    
    console.log("fetching " + is + " irrigations");

    for (var i = 0; i < is; ++i) {
      
      var irriObj = irriArr[i];
      var method = irriObj.method;
      var eventType = irriObj.eventType;
      var threshold = irriObj.threshold;
      var area = irriObj.area;
      var amount = irriObj.amount;
      var NConc = irriObj.NConc;
      var iDate = new Date(Date.parse(irriObj.date));

      if (!iDate.isValid()) {
        ok = false;
        console.log("Invalid irrigation date " + method + ", " + eventType);
      }

      pp.addApplication(new IrrigationApplication(iDate, amount, new IrrigationParameters(NConc, 0.0)));
    }

    return ok;
  };

  /*
    JV: test new function
  */

  function addCuttings(pp, cutArr) {

    var ok = true;
    var cs = cutArr.length;

    console.log("fetching " + cs + " cuttings");

    for (var c = 0; c < cs; ++c) {
      var cutObj = cutArr[c];
      var cDate = new Date(Date.parse(cutObj.date));
      pp.addApplication(new Cutting(cDate, pp.crop(), pp.cropResult()));
    }

    return ok;
  };


  function createClimate(da, cpp, latitude, useLeapYears) {

    var ok = true;

    var tmin = [];
    var tavg = [];
    var tmax = [];
    var globrad = [];
    var relhumid = [];
    var wind = [];
    var precip = [];
    var sunhours = [];

    var date = new Date(da.startDate().getFullYear(), 0, 1);

    var idx_t_av = data.met.columns.indexOf('t_av');
    var idx_t_min = data.met.columns.indexOf("t_min");
    var idx_t_max = data.met.columns.indexOf("t_max");
    var idx_t_s10 = data.met.columns.indexOf("t_s10");
    var idx_t_s20 = data.met.columns.indexOf("t_s20");
    var idx_vappd = data.met.columns.indexOf("vappd");
    var idx_wind = data.met.columns.indexOf("wind");
    var idx_sundu = data.met.columns.indexOf("sundu");
    var idx_radia = data.met.columns.indexOf("radia");
    var idx_prec = data.met.columns.indexOf("prec");
    var idx_day = data.met.columns.indexOf("day");
    var idx_year = data.met.columns.indexOf("year");
    var idx_rf = data.met.columns.indexOf("rf");

    for (var y = da.startDate().getFullYear(), ys = da.endDate().getFullYear(); y <= ys; y++) {

      var daysCount = 0;
      var allowedDays = ceil((new Date(y + 1, 0, 1) - new Date(y, 0, 1)) / (24 * 60 * 60 * 1000));

      console.log("allowedDays: " + allowedDays + " " + y+ "\t" + useLeapYears + "\tlatitude:\t" + latitude);

      for (var r = 0, rs = data.met.rows.length; r < rs; r++) {

        var row = data.met.rows[r];
        if (row[idx_year] != y)
          continue;

        if (row[idx_radia] >= 0) {
          // use globrad
          // HERMES weather files deliver global radiation as [J cm-2]
          // Here, we push back [MJ m-2 d-1]
          var globradMJpm2pd = row[idx_radia] * 100.0 * 100.0 / 1000000.0;
          globrad.push(globradMJpm2pd);        
        } else if (row[idx_sundu] >= 0.0) {
          // invalid globrad use sunhours
          // convert sunhours into globrad
          // debug() << "Invalid globrad - use sunhours instead" << endl;
          globrad.push(Tools.sunshine2globalRadiation(r + 1, sunhours, latitude, true));    
          sunhours.push(row[idx_sundu]);
        } else {
          // error case
          console.log("Error: No global radiation or sunhours specified for day " + date);
          ok = false;
        }

        if (row[idx_rf] >= 0.0)
          relhumid.push(row[idx_rf]);

        tavg.push(row[idx_t_av]);
        tmin.push(row[idx_t_min]);
        tmax.push(row[idx_t_max]);
        wind.push(row[idx_wind]);
        precip.push(row[idx_prec]);

        daysCount++;
        date = new Date(date.getFullYear, date.getMonth(), date.getDate() + 1);
      }
    }

    da.addClimateData(Climate.tmin, new Float64Array(tmin));
    da.addClimateData(Climate.tmax, new Float64Array(tmax));
    da.addClimateData(Climate.tavg, new Float64Array(tavg));
    da.addClimateData(Climate.globrad, new Float64Array(globrad));
    da.addClimateData(Climate.wind, new Float64Array(wind));
    da.addClimateData(Climate.precip, new Float64Array(precip));

    if(sunhours.length > 0)
      da.addClimateData(Climate.sunhours, new Float64Array(sunhours));

    if (relhumid.length > 0)
      da.addClimateData(Climate.relhumid, new Float64Array(relhumid));

    return ok;
  };

  return {
    run: run    
  };


};


var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';

if (ENVIRONMENT_IS_NODE) {
  exports.Configuration = Configuration;
  exports.config = config;
  exports.data = data;
  var fs = require('fs');
} else {
  monica.Configuration = Configuration;
  monica.config = config;
  monica.data = data;
  var fs = null;
}


}());
